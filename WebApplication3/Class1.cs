// **************************************************
// Custom code for PaymentEntryForm
// Created: 08/05/2013 15:25:03
// **************************************************
appayment
extern alias Erp_Contracts_BO_Currency;
extern alias Erp_Contracts_BO_Company;
extern alias Erp_Contracts_BO_Vendor;

using System;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Windows.Forms;
using Ice.Lib;
using Erp.BO;
using Ice.BO;
using Erp.UI;
using Ice.Adapters;
using Erp.Adapters;
using Ice.Lib.Customization;
using Ice.Lib.ExtendedProps;
using Ice.UI.FormFunctions;
using Ice.Lib.Framework;
using Ice.Lib.Searches;
using Ice.Core;

public class Script
{
	// ** Wizard Insert Location - Do Not Remove 'Begin/End Wizard Added Module Level Variables' Comments! **
	// Begin Wizard Added Module Level Variables **

	// End Wizard Added Module Level Variables **

	// Add Custom Module Level Variables Here **

	private Erp.Adapters.CompanyAdapter companyAdapter;
	private bool isCFICodeComboEnabled = false;
	private string coaCode;
	private int segNmbr;

	public void InitializeCustomCode()
	{
		// ** Wizard Insert Location - Do not delete 'Begin/End Wizard Added Variable Initialization' lines **
		// Begin Wizard Added Variable Initialization

		// End Wizard Added Variable Initialization

		// Begin Wizard Added Custom Method Calls

		companyAdapter = new Erp.Adapters.CompanyAdapter(oTrans);
		companyAdapter.BOConnect();
		GetXBSystData();
		setFilterCFICodeCombo();
		setupRowRules();

		this.PaymentEntryForm.sheetTopLevel1.sheetHeader1.invPaymentDockPanel1.invPaymentTaxPanel1.grdInvPaymentList.DisplayLayout.Bands[0].Columns["CNCFICode"].Hidden = false;
		this.PaymentEntryForm.sheetTopLevel1.sheetHeader1.invPaymentDockPanel1.invPaymentTaxPanel1.grdInvPaymentList.DisplayLayout.Bands[0].Columns["CNCFICode"].ValueList = this.cmbTaxDtlCFICode;

		this.PaymentEntryForm.sheetTopLevel1.sheetHeader1.miscPaymentDetailPanel1.miscTaxPanel1.eugTaxList.DisplayLayout.Bands[0].Columns["CNCFICode"].Hidden = false;
		this.PaymentEntryForm.sheetTopLevel1.sheetHeader1.miscPaymentDetailPanel1.miscTaxPanel1.eugTaxList.DisplayLayout.Bands[0].Columns["CNCFICode"].ValueList = this.cmbPayTaxCFICode;

		this.PaymentEntryForm.sheetTopLevel1.sheetHeader1.bankFeePanel1.grdBankTranTaxDtl.DisplayLayout.Bands[0].Columns["CNCFICode"].Hidden = false;
		this.PaymentEntryForm.sheetTopLevel1.sheetHeader1.bankFeePanel1.grdBankTranTaxDtl.DisplayLayout.Bands[0].Columns["CNCFICode"].ValueList = this.cmbBFTaxDtlCFICode;

		// End Wizard Added Custom Method Calls
	}

	public void DestroyCustomCode()
	{
		// ** Wizard Insert Location - Do not delete 'Begin/End Wizard Added Object Disposal' lines **
		// Begin Wizard Added Object Disposal

		// End Wizard Added Object Disposal

		// Begin Custom Code Disposal

		// End Custom Code Disposal
	}

	public bool CFICodeEnabled(RowRuleDelegateArgs args)
	{
		return !isCFICodeComboEnabled;
	}

	private void setupRowRules()
	{
		// Description: Visibility Rule
		// **** begin autogenerated code ****
		RuleAction disableCFICode = RuleAction.AddControlSettings(this.oTrans, "APTran.CNCFICode", SettingStyle.ReadOnly);
		RuleAction[] ruleActions = new RuleAction[] { disableCFICode };
		RowRule ruleDisableCFICode = new RowRule(null, new RowRuleConditionDelegate2(CFICodeEnabled), null, ruleActions);
		((EpiDataView)(this.oTrans.EpiDataViews["APTran"])).AddRowRule(ruleDisableCFICode);

		RuleAction disableTaxDtlCFICode = RuleAction.AddControlSettings(this.oTrans, "APTTaxDtl.CNCFICode", SettingStyle.ReadOnly);
		RuleAction[] ruleActionsTaxDtl = new RuleAction[] { disableTaxDtlCFICode };
		RowRule ruleDisableTaxDtlCFICode = new RowRule(null, new RowRuleConditionDelegate2(CFICodeEnabled), null, ruleActionsTaxDtl);
		((EpiDataView)(this.oTrans.EpiDataViews["APTTaxDtl"])).AddRowRule(ruleDisableTaxDtlCFICode);

		RuleAction disableTaxCFICode = RuleAction.AddControlSettings(this.oTrans, "TaxDtl.CNCFICode", SettingStyle.ReadOnly);
		RuleAction[] ruleActionsTax = new RuleAction[] { disableTaxCFICode };
		RowRule ruleDisableTaxCFICode = new RowRule(null, new RowRuleConditionDelegate2(CFICodeEnabled), null, ruleActionsTax);
		((EpiDataView)(this.oTrans.EpiDataViews["TaxDtl"])).AddRowRule(ruleDisableTaxCFICode);

		RuleAction disableBFCFICode = RuleAction.AddControlSettings(this.oTrans, "BankTran.CNCFICode", SettingStyle.ReadOnly);
		RuleAction[] ruleActionsBF = new RuleAction[] { disableBFCFICode };
		RowRule ruleDisableBFCFICode = new RowRule(null, new RowRuleConditionDelegate2(CFICodeEnabled), null, ruleActionsBF);
		((EpiDataView)(this.oTrans.EpiDataViews["BankTran"])).AddRowRule(ruleDisableBFCFICode);

		RuleAction disableBFCFICodeTax = RuleAction.AddControlSettings(this.oTrans, "BankTranTaxDtl.CNCFICode", SettingStyle.ReadOnly);
		RuleAction[] ruleActionsBFTax = new RuleAction[] { disableBFCFICodeTax };
		RowRule ruleDisableBFCFICodeTax = new RowRule(null, new RowRuleConditionDelegate2(CFICodeEnabled), null, ruleActionsBFTax);
		((EpiDataView)(this.oTrans.EpiDataViews["BankTranTaxDtl"])).AddRowRule(ruleDisableBFCFICodeTax);

		// **** end autogenerated code ****
	}

	private void GetXBSystData()
	{
		string companyID = string.Empty;
		Session currentSession = (Session)this.oTrans.Session;
		companyID = currentSession.CompanyID;
		if (companyID != string.Empty)
		{
			try
			{
				companyAdapter.GetByID(companyID);
				segNmbr = (int)(companyAdapter.CompanyData.XbSyst[0]["CNSegmentNbr"]);
				coaCode = (companyAdapter.CompanyData.XbSyst[0]["CNCOACode"]).ToString();
				if (segNmbr != 0)
					isCFICodeComboEnabled = true;

				companyAdapter.CompanyData.Clear();
			}
			catch (Exception e)
			{
				ExceptionBox.Show(e);
			}
		}
	}

	private void setFilterCFICodeCombo()
	{
		string strFilter = "COACode = '" + coaCode + "' AND SegmentNbr = '" + segNmbr.ToString() + "'";
		//Invoice Detail
		this.cmbCFICode.EpiFiltersAppend = new string[] { strFilter };
		this.cmbTaxDtlCFICode.EpiFiltersAppend = new string[] { strFilter };
		//Misc Detail		
		this.cmbPayTaxCFICode.EpiFiltersAppend = new string[] { strFilter };
		//Bank Fee
		this.cmbBankFeeCFICode.EpiFiltersAppend = new string[] { strFilter };
		this.cmbBFTaxDtlCFICode.EpiFiltersAppend = new string[] { strFilter };
	}
}

