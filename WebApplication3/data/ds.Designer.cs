//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace WebApplication3.data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ds")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ds : global::System.Data.DataSet {
        
        private LaborHedDataTable tableLaborHed;
        
        private LaborDtlDataTable tableLaborDtl;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ds() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected ds(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["LaborHed"] != null)) {
                    base.Tables.Add(new LaborHedDataTable(ds.Tables["LaborHed"]));
                }
                if ((ds.Tables["LaborDtl"] != null)) {
                    base.Tables.Add(new LaborDtlDataTable(ds.Tables["LaborDtl"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LaborHedDataTable LaborHed {
            get {
                return this.tableLaborHed;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LaborDtlDataTable LaborDtl {
            get {
                return this.tableLaborDtl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ds cln = ((ds)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["LaborHed"] != null)) {
                    base.Tables.Add(new LaborHedDataTable(ds.Tables["LaborHed"]));
                }
                if ((ds.Tables["LaborDtl"] != null)) {
                    base.Tables.Add(new LaborDtlDataTable(ds.Tables["LaborDtl"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableLaborHed = ((LaborHedDataTable)(base.Tables["LaborHed"]));
            if ((initTable == true)) {
                if ((this.tableLaborHed != null)) {
                    this.tableLaborHed.InitVars();
                }
            }
            this.tableLaborDtl = ((LaborDtlDataTable)(base.Tables["LaborDtl"]));
            if ((initTable == true)) {
                if ((this.tableLaborDtl != null)) {
                    this.tableLaborDtl.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ds";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ds.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableLaborHed = new LaborHedDataTable();
            base.Tables.Add(this.tableLaborHed);
            this.tableLaborDtl = new LaborDtlDataTable();
            base.Tables.Add(this.tableLaborDtl);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeLaborHed() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeLaborDtl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ds ds = new ds();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void LaborHedRowChangeEventHandler(object sender, LaborHedRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void LaborDtlRowChangeEventHandler(object sender, LaborDtlRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LaborHedDataTable : global::System.Data.TypedTableBase<LaborHedRow> {
            
            private global::System.Data.DataColumn columnCompany;
            
            private global::System.Data.DataColumn columnEmployeeNum;
            
            private global::System.Data.DataColumn columnLaborHedSeq;
            
            private global::System.Data.DataColumn columnPayrollDate;
            
            private global::System.Data.DataColumn columnShift;
            
            private global::System.Data.DataColumn columnClockInDate;
            
            private global::System.Data.DataColumn columnClockInTime;
            
            private global::System.Data.DataColumn columnDspClockInTime;
            
            private global::System.Data.DataColumn columnActualClockInTime;
            
            private global::System.Data.DataColumn columnActualClockinDate;
            
            private global::System.Data.DataColumn columnLunchStatus;
            
            private global::System.Data.DataColumn columnActLunchOutTime;
            
            private global::System.Data.DataColumn columnLunchOutTime;
            
            private global::System.Data.DataColumn columnActLunchInTime;
            
            private global::System.Data.DataColumn columnLunchInTime;
            
            private global::System.Data.DataColumn columnClockOutTime;
            
            private global::System.Data.DataColumn columnDspClockOutTime;
            
            private global::System.Data.DataColumn columnActualClockOutTime;
            
            private global::System.Data.DataColumn columnPayHours;
            
            private global::System.Data.DataColumn columnFeedPayroll;
            
            private global::System.Data.DataColumn columnTransferredToPayroll;
            
            private global::System.Data.DataColumn columnLaborCollection;
            
            private global::System.Data.DataColumn columnTranSet;
            
            private global::System.Data.DataColumn columnActiveTrans;
            
            private global::System.Data.DataColumn columnChkLink;
            
            private global::System.Data.DataColumn columnBatchTotalHrsDisp;
            
            private global::System.Data.DataColumn columnBatchHrsRemainDisp;
            
            private global::System.Data.DataColumn columnBatchHrsRemainPctDisp;
            
            private global::System.Data.DataColumn columnBatchSplitHrsMethod;
            
            private global::System.Data.DataColumn columnBatchAssignTo;
            
            private global::System.Data.DataColumn columnBatchComplete;
            
            private global::System.Data.DataColumn columnBatchStartHrs;
            
            private global::System.Data.DataColumn columnBatchEndHrs;
            
            private global::System.Data.DataColumn columnBatchTotalHrs;
            
            private global::System.Data.DataColumn columnBatchHrsRemain;
            
            private global::System.Data.DataColumn columnBatchHrsRemainPct;
            
            private global::System.Data.DataColumn columnSysRevID;
            
            private global::System.Data.DataColumn columnSysRowID;
            
            private global::System.Data.DataColumn columnImported;
            
            private global::System.Data.DataColumn columnImportDate;
            
            private global::System.Data.DataColumn columnBatchMode;
            
            private global::System.Data.DataColumn columnHCMPayHoursCalcType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LaborHedDataTable() {
                this.TableName = "LaborHed";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal LaborHedDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected LaborHedDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CompanyColumn {
                get {
                    return this.columnCompany;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EmployeeNumColumn {
                get {
                    return this.columnEmployeeNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LaborHedSeqColumn {
                get {
                    return this.columnLaborHedSeq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PayrollDateColumn {
                get {
                    return this.columnPayrollDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ShiftColumn {
                get {
                    return this.columnShift;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ClockInDateColumn {
                get {
                    return this.columnClockInDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ClockInTimeColumn {
                get {
                    return this.columnClockInTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DspClockInTimeColumn {
                get {
                    return this.columnDspClockInTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ActualClockInTimeColumn {
                get {
                    return this.columnActualClockInTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ActualClockinDateColumn {
                get {
                    return this.columnActualClockinDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LunchStatusColumn {
                get {
                    return this.columnLunchStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ActLunchOutTimeColumn {
                get {
                    return this.columnActLunchOutTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LunchOutTimeColumn {
                get {
                    return this.columnLunchOutTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ActLunchInTimeColumn {
                get {
                    return this.columnActLunchInTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LunchInTimeColumn {
                get {
                    return this.columnLunchInTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ClockOutTimeColumn {
                get {
                    return this.columnClockOutTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DspClockOutTimeColumn {
                get {
                    return this.columnDspClockOutTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ActualClockOutTimeColumn {
                get {
                    return this.columnActualClockOutTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PayHoursColumn {
                get {
                    return this.columnPayHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FeedPayrollColumn {
                get {
                    return this.columnFeedPayroll;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TransferredToPayrollColumn {
                get {
                    return this.columnTransferredToPayroll;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LaborCollectionColumn {
                get {
                    return this.columnLaborCollection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TranSetColumn {
                get {
                    return this.columnTranSet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ActiveTransColumn {
                get {
                    return this.columnActiveTrans;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ChkLinkColumn {
                get {
                    return this.columnChkLink;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BatchTotalHrsDispColumn {
                get {
                    return this.columnBatchTotalHrsDisp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BatchHrsRemainDispColumn {
                get {
                    return this.columnBatchHrsRemainDisp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BatchHrsRemainPctDispColumn {
                get {
                    return this.columnBatchHrsRemainPctDisp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BatchSplitHrsMethodColumn {
                get {
                    return this.columnBatchSplitHrsMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BatchAssignToColumn {
                get {
                    return this.columnBatchAssignTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BatchCompleteColumn {
                get {
                    return this.columnBatchComplete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BatchStartHrsColumn {
                get {
                    return this.columnBatchStartHrs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BatchEndHrsColumn {
                get {
                    return this.columnBatchEndHrs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BatchTotalHrsColumn {
                get {
                    return this.columnBatchTotalHrs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BatchHrsRemainColumn {
                get {
                    return this.columnBatchHrsRemain;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BatchHrsRemainPctColumn {
                get {
                    return this.columnBatchHrsRemainPct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SysRevIDColumn {
                get {
                    return this.columnSysRevID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SysRowIDColumn {
                get {
                    return this.columnSysRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ImportedColumn {
                get {
                    return this.columnImported;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ImportDateColumn {
                get {
                    return this.columnImportDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BatchModeColumn {
                get {
                    return this.columnBatchMode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HCMPayHoursCalcTypeColumn {
                get {
                    return this.columnHCMPayHoursCalcType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LaborHedRow this[int index] {
                get {
                    return ((LaborHedRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LaborHedRowChangeEventHandler LaborHedRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LaborHedRowChangeEventHandler LaborHedRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LaborHedRowChangeEventHandler LaborHedRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LaborHedRowChangeEventHandler LaborHedRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddLaborHedRow(LaborHedRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LaborHedRow AddLaborHedRow(
                        string Company, 
                        string EmployeeNum, 
                        int LaborHedSeq, 
                        System.DateTime PayrollDate, 
                        int Shift, 
                        System.DateTime ClockInDate, 
                        decimal ClockInTime, 
                        string DspClockInTime, 
                        decimal ActualClockInTime, 
                        System.DateTime ActualClockinDate, 
                        string LunchStatus, 
                        decimal ActLunchOutTime, 
                        decimal LunchOutTime, 
                        decimal ActLunchInTime, 
                        decimal LunchInTime, 
                        decimal ClockOutTime, 
                        string DspClockOutTime, 
                        decimal ActualClockOutTime, 
                        decimal PayHours, 
                        bool FeedPayroll, 
                        bool TransferredToPayroll, 
                        bool LaborCollection, 
                        string TranSet, 
                        bool ActiveTrans, 
                        string ChkLink, 
                        string BatchTotalHrsDisp, 
                        string BatchHrsRemainDisp, 
                        string BatchHrsRemainPctDisp, 
                        string BatchSplitHrsMethod, 
                        bool BatchAssignTo, 
                        bool BatchComplete, 
                        System.DateTime BatchStartHrs, 
                        System.DateTime BatchEndHrs, 
                        decimal BatchTotalHrs, 
                        decimal BatchHrsRemain, 
                        decimal BatchHrsRemainPct, 
                        byte[] SysRevID, 
                        System.Guid SysRowID, 
                        bool Imported, 
                        System.DateTime ImportDate, 
                        bool BatchMode, 
                        string HCMPayHoursCalcType) {
                LaborHedRow rowLaborHedRow = ((LaborHedRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Company,
                        EmployeeNum,
                        LaborHedSeq,
                        PayrollDate,
                        Shift,
                        ClockInDate,
                        ClockInTime,
                        DspClockInTime,
                        ActualClockInTime,
                        ActualClockinDate,
                        LunchStatus,
                        ActLunchOutTime,
                        LunchOutTime,
                        ActLunchInTime,
                        LunchInTime,
                        ClockOutTime,
                        DspClockOutTime,
                        ActualClockOutTime,
                        PayHours,
                        FeedPayroll,
                        TransferredToPayroll,
                        LaborCollection,
                        TranSet,
                        ActiveTrans,
                        ChkLink,
                        BatchTotalHrsDisp,
                        BatchHrsRemainDisp,
                        BatchHrsRemainPctDisp,
                        BatchSplitHrsMethod,
                        BatchAssignTo,
                        BatchComplete,
                        BatchStartHrs,
                        BatchEndHrs,
                        BatchTotalHrs,
                        BatchHrsRemain,
                        BatchHrsRemainPct,
                        SysRevID,
                        SysRowID,
                        Imported,
                        ImportDate,
                        BatchMode,
                        HCMPayHoursCalcType};
                rowLaborHedRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLaborHedRow);
                return rowLaborHedRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LaborHedRow FindByCompanyLaborHedSeq(string Company, int LaborHedSeq) {
                return ((LaborHedRow)(this.Rows.Find(new object[] {
                            Company,
                            LaborHedSeq})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LaborHedDataTable cln = ((LaborHedDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LaborHedDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnCompany = base.Columns["Company"];
                this.columnEmployeeNum = base.Columns["EmployeeNum"];
                this.columnLaborHedSeq = base.Columns["LaborHedSeq"];
                this.columnPayrollDate = base.Columns["PayrollDate"];
                this.columnShift = base.Columns["Shift"];
                this.columnClockInDate = base.Columns["ClockInDate"];
                this.columnClockInTime = base.Columns["ClockInTime"];
                this.columnDspClockInTime = base.Columns["DspClockInTime"];
                this.columnActualClockInTime = base.Columns["ActualClockInTime"];
                this.columnActualClockinDate = base.Columns["ActualClockinDate"];
                this.columnLunchStatus = base.Columns["LunchStatus"];
                this.columnActLunchOutTime = base.Columns["ActLunchOutTime"];
                this.columnLunchOutTime = base.Columns["LunchOutTime"];
                this.columnActLunchInTime = base.Columns["ActLunchInTime"];
                this.columnLunchInTime = base.Columns["LunchInTime"];
                this.columnClockOutTime = base.Columns["ClockOutTime"];
                this.columnDspClockOutTime = base.Columns["DspClockOutTime"];
                this.columnActualClockOutTime = base.Columns["ActualClockOutTime"];
                this.columnPayHours = base.Columns["PayHours"];
                this.columnFeedPayroll = base.Columns["FeedPayroll"];
                this.columnTransferredToPayroll = base.Columns["TransferredToPayroll"];
                this.columnLaborCollection = base.Columns["LaborCollection"];
                this.columnTranSet = base.Columns["TranSet"];
                this.columnActiveTrans = base.Columns["ActiveTrans"];
                this.columnChkLink = base.Columns["ChkLink"];
                this.columnBatchTotalHrsDisp = base.Columns["BatchTotalHrsDisp"];
                this.columnBatchHrsRemainDisp = base.Columns["BatchHrsRemainDisp"];
                this.columnBatchHrsRemainPctDisp = base.Columns["BatchHrsRemainPctDisp"];
                this.columnBatchSplitHrsMethod = base.Columns["BatchSplitHrsMethod"];
                this.columnBatchAssignTo = base.Columns["BatchAssignTo"];
                this.columnBatchComplete = base.Columns["BatchComplete"];
                this.columnBatchStartHrs = base.Columns["BatchStartHrs"];
                this.columnBatchEndHrs = base.Columns["BatchEndHrs"];
                this.columnBatchTotalHrs = base.Columns["BatchTotalHrs"];
                this.columnBatchHrsRemain = base.Columns["BatchHrsRemain"];
                this.columnBatchHrsRemainPct = base.Columns["BatchHrsRemainPct"];
                this.columnSysRevID = base.Columns["SysRevID"];
                this.columnSysRowID = base.Columns["SysRowID"];
                this.columnImported = base.Columns["Imported"];
                this.columnImportDate = base.Columns["ImportDate"];
                this.columnBatchMode = base.Columns["BatchMode"];
                this.columnHCMPayHoursCalcType = base.Columns["HCMPayHoursCalcType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnCompany = new global::System.Data.DataColumn("Company", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany);
                this.columnEmployeeNum = new global::System.Data.DataColumn("EmployeeNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeNum);
                this.columnLaborHedSeq = new global::System.Data.DataColumn("LaborHedSeq", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaborHedSeq);
                this.columnPayrollDate = new global::System.Data.DataColumn("PayrollDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayrollDate);
                this.columnShift = new global::System.Data.DataColumn("Shift", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShift);
                this.columnClockInDate = new global::System.Data.DataColumn("ClockInDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClockInDate);
                this.columnClockInTime = new global::System.Data.DataColumn("ClockInTime", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClockInTime);
                this.columnDspClockInTime = new global::System.Data.DataColumn("DspClockInTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDspClockInTime);
                this.columnActualClockInTime = new global::System.Data.DataColumn("ActualClockInTime", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualClockInTime);
                this.columnActualClockinDate = new global::System.Data.DataColumn("ActualClockinDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualClockinDate);
                this.columnLunchStatus = new global::System.Data.DataColumn("LunchStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLunchStatus);
                this.columnActLunchOutTime = new global::System.Data.DataColumn("ActLunchOutTime", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActLunchOutTime);
                this.columnLunchOutTime = new global::System.Data.DataColumn("LunchOutTime", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLunchOutTime);
                this.columnActLunchInTime = new global::System.Data.DataColumn("ActLunchInTime", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActLunchInTime);
                this.columnLunchInTime = new global::System.Data.DataColumn("LunchInTime", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLunchInTime);
                this.columnClockOutTime = new global::System.Data.DataColumn("ClockOutTime", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClockOutTime);
                this.columnDspClockOutTime = new global::System.Data.DataColumn("DspClockOutTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDspClockOutTime);
                this.columnActualClockOutTime = new global::System.Data.DataColumn("ActualClockOutTime", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualClockOutTime);
                this.columnPayHours = new global::System.Data.DataColumn("PayHours", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayHours);
                this.columnFeedPayroll = new global::System.Data.DataColumn("FeedPayroll", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeedPayroll);
                this.columnTransferredToPayroll = new global::System.Data.DataColumn("TransferredToPayroll", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransferredToPayroll);
                this.columnLaborCollection = new global::System.Data.DataColumn("LaborCollection", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaborCollection);
                this.columnTranSet = new global::System.Data.DataColumn("TranSet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTranSet);
                this.columnActiveTrans = new global::System.Data.DataColumn("ActiveTrans", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActiveTrans);
                this.columnChkLink = new global::System.Data.DataColumn("ChkLink", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChkLink);
                this.columnBatchTotalHrsDisp = new global::System.Data.DataColumn("BatchTotalHrsDisp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchTotalHrsDisp);
                this.columnBatchHrsRemainDisp = new global::System.Data.DataColumn("BatchHrsRemainDisp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchHrsRemainDisp);
                this.columnBatchHrsRemainPctDisp = new global::System.Data.DataColumn("BatchHrsRemainPctDisp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchHrsRemainPctDisp);
                this.columnBatchSplitHrsMethod = new global::System.Data.DataColumn("BatchSplitHrsMethod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchSplitHrsMethod);
                this.columnBatchAssignTo = new global::System.Data.DataColumn("BatchAssignTo", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchAssignTo);
                this.columnBatchComplete = new global::System.Data.DataColumn("BatchComplete", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchComplete);
                this.columnBatchStartHrs = new global::System.Data.DataColumn("BatchStartHrs", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchStartHrs);
                this.columnBatchEndHrs = new global::System.Data.DataColumn("BatchEndHrs", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchEndHrs);
                this.columnBatchTotalHrs = new global::System.Data.DataColumn("BatchTotalHrs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchTotalHrs);
                this.columnBatchHrsRemain = new global::System.Data.DataColumn("BatchHrsRemain", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchHrsRemain);
                this.columnBatchHrsRemainPct = new global::System.Data.DataColumn("BatchHrsRemainPct", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchHrsRemainPct);
                this.columnSysRevID = new global::System.Data.DataColumn("SysRevID", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSysRevID);
                this.columnSysRowID = new global::System.Data.DataColumn("SysRowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSysRowID);
                this.columnImported = new global::System.Data.DataColumn("Imported", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImported);
                this.columnImportDate = new global::System.Data.DataColumn("ImportDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImportDate);
                this.columnBatchMode = new global::System.Data.DataColumn("BatchMode", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchMode);
                this.columnHCMPayHoursCalcType = new global::System.Data.DataColumn("HCMPayHoursCalcType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHCMPayHoursCalcType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCompany,
                                this.columnLaborHedSeq}, true));
                this.columnCompany.AllowDBNull = false;
                this.columnCompany.MaxLength = 8;
                this.columnEmployeeNum.AllowDBNull = false;
                this.columnEmployeeNum.MaxLength = 8;
                this.columnLaborHedSeq.AllowDBNull = false;
                this.columnShift.AllowDBNull = false;
                this.columnClockInTime.AllowDBNull = false;
                this.columnDspClockInTime.AllowDBNull = false;
                this.columnDspClockInTime.MaxLength = 5;
                this.columnActualClockInTime.AllowDBNull = false;
                this.columnLunchStatus.AllowDBNull = false;
                this.columnLunchStatus.MaxLength = 2;
                this.columnActLunchOutTime.AllowDBNull = false;
                this.columnLunchOutTime.AllowDBNull = false;
                this.columnActLunchInTime.AllowDBNull = false;
                this.columnLunchInTime.AllowDBNull = false;
                this.columnClockOutTime.AllowDBNull = false;
                this.columnDspClockOutTime.AllowDBNull = false;
                this.columnDspClockOutTime.MaxLength = 5;
                this.columnActualClockOutTime.AllowDBNull = false;
                this.columnPayHours.AllowDBNull = false;
                this.columnFeedPayroll.AllowDBNull = false;
                this.columnTransferredToPayroll.AllowDBNull = false;
                this.columnLaborCollection.AllowDBNull = false;
                this.columnTranSet.AllowDBNull = false;
                this.columnTranSet.MaxLength = 8;
                this.columnActiveTrans.AllowDBNull = false;
                this.columnChkLink.AllowDBNull = false;
                this.columnChkLink.MaxLength = 100;
                this.columnBatchTotalHrsDisp.AllowDBNull = false;
                this.columnBatchTotalHrsDisp.MaxLength = 50;
                this.columnBatchHrsRemainDisp.AllowDBNull = false;
                this.columnBatchHrsRemainDisp.MaxLength = 50;
                this.columnBatchHrsRemainPctDisp.AllowDBNull = false;
                this.columnBatchHrsRemainPctDisp.MaxLength = 50;
                this.columnBatchSplitHrsMethod.AllowDBNull = false;
                this.columnBatchSplitHrsMethod.MaxLength = 50;
                this.columnBatchAssignTo.AllowDBNull = false;
                this.columnBatchComplete.AllowDBNull = false;
                this.columnBatchTotalHrs.AllowDBNull = false;
                this.columnBatchHrsRemain.AllowDBNull = false;
                this.columnBatchHrsRemainPct.AllowDBNull = false;
                this.columnSysRevID.ReadOnly = true;
                this.columnSysRowID.AllowDBNull = false;
                this.columnImported.AllowDBNull = false;
                this.columnBatchMode.AllowDBNull = false;
                this.columnHCMPayHoursCalcType.AllowDBNull = false;
                this.columnHCMPayHoursCalcType.MaxLength = 3;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LaborHedRow NewLaborHedRow() {
                return ((LaborHedRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LaborHedRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LaborHedRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LaborHedRowChanged != null)) {
                    this.LaborHedRowChanged(this, new LaborHedRowChangeEvent(((LaborHedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LaborHedRowChanging != null)) {
                    this.LaborHedRowChanging(this, new LaborHedRowChangeEvent(((LaborHedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LaborHedRowDeleted != null)) {
                    this.LaborHedRowDeleted(this, new LaborHedRowChangeEvent(((LaborHedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LaborHedRowDeleting != null)) {
                    this.LaborHedRowDeleting(this, new LaborHedRowChangeEvent(((LaborHedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveLaborHedRow(LaborHedRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds ds = new ds();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LaborHedDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LaborDtlDataTable : global::System.Data.TypedTableBase<LaborDtlRow> {
            
            private global::System.Data.DataColumn columnCompany;
            
            private global::System.Data.DataColumn columnEmployeeNum;
            
            private global::System.Data.DataColumn columnLaborHedSeq;
            
            private global::System.Data.DataColumn columnLaborDtlSeq;
            
            private global::System.Data.DataColumn columnLaborType;
            
            private global::System.Data.DataColumn columnLaborTypePseudo;
            
            private global::System.Data.DataColumn columnReWork;
            
            private global::System.Data.DataColumn columnReworkReasonCode;
            
            private global::System.Data.DataColumn columnJobNum;
            
            private global::System.Data.DataColumn columnAssemblySeq;
            
            private global::System.Data.DataColumn columnOprSeq;
            
            private global::System.Data.DataColumn columnJCDept;
            
            private global::System.Data.DataColumn columnResourceGrpID;
            
            private global::System.Data.DataColumn columnOpCode;
            
            private global::System.Data.DataColumn columnLaborHrs;
            
            private global::System.Data.DataColumn columnBurdenHrs;
            
            private global::System.Data.DataColumn columnLaborQty;
            
            private global::System.Data.DataColumn columnScrapQty;
            
            private global::System.Data.DataColumn columnScrapReasonCode;
            
            private global::System.Data.DataColumn columnSetupPctComplete;
            
            private global::System.Data.DataColumn columnComplete;
            
            private global::System.Data.DataColumn columnIndirectCode;
            
            private global::System.Data.DataColumn columnLaborNote;
            
            private global::System.Data.DataColumn columnExpenseCode;
            
            private global::System.Data.DataColumn columnLaborCollection;
            
            private global::System.Data.DataColumn columnAppliedToSchedule;
            
            private global::System.Data.DataColumn columnClockInMInute;
            
            private global::System.Data.DataColumn columnClockOutMinute;
            
            private global::System.Data.DataColumn columnClockInDate;
            
            private global::System.Data.DataColumn columnClockinTime;
            
            private global::System.Data.DataColumn columnClockOutTime;
            
            private global::System.Data.DataColumn columnActiveTrans;
            
            private global::System.Data.DataColumn columnOverRidePayRate;
            
            private global::System.Data.DataColumn columnLaborRate;
            
            private global::System.Data.DataColumn columnBurdenRate;
            
            private global::System.Data.DataColumn columnDspClockInTime;
            
            private global::System.Data.DataColumn columnDspClockOutTime;
            
            private global::System.Data.DataColumn columnResourceID;
            
            private global::System.Data.DataColumn columnOpComplete;
            
            private global::System.Data.DataColumn columnEarnedHrs;
            
            private global::System.Data.DataColumn columnAddedOper;
            
            private global::System.Data.DataColumn columnPayrollDate;
            
            private global::System.Data.DataColumn columnPostedToGL;
            
            private global::System.Data.DataColumn columnFiscalYear;
            
            private global::System.Data.DataColumn columnFiscalPeriod;
            
            private global::System.Data.DataColumn columnJournalNum;
            
            private global::System.Data.DataColumn columnGLTrans;
            
            private global::System.Data.DataColumn columnJournalCode;
            
            private global::System.Data.DataColumn columnInspectionPending;
            
            private global::System.Data.DataColumn columnCallNum;
            
            private global::System.Data.DataColumn columnCallLine;
            
            private global::System.Data.DataColumn columnServNum;
            
            private global::System.Data.DataColumn columnServCode;
            
            private global::System.Data.DataColumn columnResReasonCode;
            
            private global::System.Data.DataColumn columnWipPosted;
            
            private global::System.Data.DataColumn columnDiscrepQty;
            
            private global::System.Data.DataColumn columnDiscrpRsnCode;
            
            private global::System.Data.DataColumn columnParentLaborDtlSeq;
            
            private global::System.Data.DataColumn columnLaborEntryMethod;
            
            private global::System.Data.DataColumn columnFiscalYearSuffix;
            
            private global::System.Data.DataColumn columnFiscalCalendarID;
            
            private global::System.Data.DataColumn columnBFLaborReq;
            
            private global::System.Data.DataColumn columnABTUID;
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnPhaseID;
            
            private global::System.Data.DataColumn columnRoleCd;
            
            private global::System.Data.DataColumn columnTimeTypCd;
            
            private global::System.Data.DataColumn columnPBInvNum;
            
            private global::System.Data.DataColumn columnPMUID;
            
            private global::System.Data.DataColumn columnTaskSetID;
            
            private global::System.Data.DataColumn columnApprovedDate;
            
            private global::System.Data.DataColumn columnClaimRef;
            
            private global::System.Data.DataColumn columnQuickEntryCode;
            
            private global::System.Data.DataColumn columnTimeStatus;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreateDate;
            
            private global::System.Data.DataColumn columnCreateTime;
            
            private global::System.Data.DataColumn columnChangedBy;
            
            private global::System.Data.DataColumn columnChangeDate;
            
            private global::System.Data.DataColumn columnChangeTime;
            
            private global::System.Data.DataColumn columnActiveTaskID;
            
            private global::System.Data.DataColumn columnLastTaskID;
            
            private global::System.Data.DataColumn columnCreatedViaTEWeekView;
            
            private global::System.Data.DataColumn columnCurrentWFStageID;
            
            private global::System.Data.DataColumn columnWFGroupID;
            
            private global::System.Data.DataColumn columnWFComplete;
            
            private global::System.Data.DataColumn columnApprovalRequired;
            
            private global::System.Data.DataColumn columnSubmittedBy;
            
            private global::System.Data.DataColumn columnPBRateFrom;
            
            private global::System.Data.DataColumn columnPBCurrencyCode;
            
            private global::System.Data.DataColumn columnPBHours;
            
            private global::System.Data.DataColumn columnPBChargeRate;
            
            private global::System.Data.DataColumn columnPBChargeAmt;
            
            private global::System.Data.DataColumn columnDocPBChargeRate;
            
            private global::System.Data.DataColumn columnRpt1PBChargeRate;
            
            private global::System.Data.DataColumn columnRpt2PBChargeRate;
            
            private global::System.Data.DataColumn columnRpt3PBChargeRate;
            
            private global::System.Data.DataColumn columnDocPBChargeAmt;
            
            private global::System.Data.DataColumn columnRpt1PBChargeAmt;
            
            private global::System.Data.DataColumn columnRpt2PBChargeAmt;
            
            private global::System.Data.DataColumn columnRpt3PBChargeAmt;
            
            private global::System.Data.DataColumn columnShift;
            
            private global::System.Data.DataColumn columnActID;
            
            private global::System.Data.DataColumn columnDtailID;
            
            private global::System.Data.DataColumn columnProjProcessed;
            
            private global::System.Data.DataColumn columnAsOfDate;
            
            private global::System.Data.DataColumn columnAsOfSeq;
            
            private global::System.Data.DataColumn columnJDFInputFiles;
            
            private global::System.Data.DataColumn columnJDFNumberOfPages;
            
            private global::System.Data.DataColumn columnBatchWasSaved;
            
            private global::System.Data.DataColumn columnAssignToBatch;
            
            private global::System.Data.DataColumn columnBatchComplete;
            
            private global::System.Data.DataColumn columnBatchRequestMove;
            
            private global::System.Data.DataColumn columnBatchPrint;
            
            private global::System.Data.DataColumn columnBatchLaborHrs;
            
            private global::System.Data.DataColumn columnBatchPctOfTotHrs;
            
            private global::System.Data.DataColumn columnBatchQty;
            
            private global::System.Data.DataColumn columnBatchTotalExpectedHrs;
            
            private global::System.Data.DataColumn columnJDFOpCompleted;
            
            private global::System.Data.DataColumn columnSysRevID;
            
            private global::System.Data.DataColumn columnSysRowID;
            
            private global::System.Data.DataColumn columnDowntime;
            
            private global::System.Data.DataColumn columnRefJobNum;
            
            private global::System.Data.DataColumn columnRefAssemblySeq;
            
            private global::System.Data.DataColumn columnRefOprSeq;
            
            private global::System.Data.DataColumn columnImported;
            
            private global::System.Data.DataColumn columnImportDate;
            
            private global::System.Data.DataColumn columnTimeAutoSubmit;
            
            private global::System.Data.DataColumn columnBatchMode;
            
            private global::System.Data.DataColumn columnBillServiceRate;
            
            private global::System.Data.DataColumn columnHCMPayHours;
            
            private global::System.Data.DataColumn columnEpicorFSA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LaborDtlDataTable() {
                this.TableName = "LaborDtl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal LaborDtlDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected LaborDtlDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CompanyColumn {
                get {
                    return this.columnCompany;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EmployeeNumColumn {
                get {
                    return this.columnEmployeeNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LaborHedSeqColumn {
                get {
                    return this.columnLaborHedSeq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LaborDtlSeqColumn {
                get {
                    return this.columnLaborDtlSeq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LaborTypeColumn {
                get {
                    return this.columnLaborType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LaborTypePseudoColumn {
                get {
                    return this.columnLaborTypePseudo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ReWorkColumn {
                get {
                    return this.columnReWork;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ReworkReasonCodeColumn {
                get {
                    return this.columnReworkReasonCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn JobNumColumn {
                get {
                    return this.columnJobNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AssemblySeqColumn {
                get {
                    return this.columnAssemblySeq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OprSeqColumn {
                get {
                    return this.columnOprSeq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn JCDeptColumn {
                get {
                    return this.columnJCDept;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ResourceGrpIDColumn {
                get {
                    return this.columnResourceGrpID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OpCodeColumn {
                get {
                    return this.columnOpCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LaborHrsColumn {
                get {
                    return this.columnLaborHrs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BurdenHrsColumn {
                get {
                    return this.columnBurdenHrs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LaborQtyColumn {
                get {
                    return this.columnLaborQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ScrapQtyColumn {
                get {
                    return this.columnScrapQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ScrapReasonCodeColumn {
                get {
                    return this.columnScrapReasonCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SetupPctCompleteColumn {
                get {
                    return this.columnSetupPctComplete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CompleteColumn {
                get {
                    return this.columnComplete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IndirectCodeColumn {
                get {
                    return this.columnIndirectCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LaborNoteColumn {
                get {
                    return this.columnLaborNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ExpenseCodeColumn {
                get {
                    return this.columnExpenseCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LaborCollectionColumn {
                get {
                    return this.columnLaborCollection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AppliedToScheduleColumn {
                get {
                    return this.columnAppliedToSchedule;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ClockInMInuteColumn {
                get {
                    return this.columnClockInMInute;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ClockOutMinuteColumn {
                get {
                    return this.columnClockOutMinute;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ClockInDateColumn {
                get {
                    return this.columnClockInDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ClockinTimeColumn {
                get {
                    return this.columnClockinTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ClockOutTimeColumn {
                get {
                    return this.columnClockOutTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ActiveTransColumn {
                get {
                    return this.columnActiveTrans;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OverRidePayRateColumn {
                get {
                    return this.columnOverRidePayRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LaborRateColumn {
                get {
                    return this.columnLaborRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BurdenRateColumn {
                get {
                    return this.columnBurdenRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DspClockInTimeColumn {
                get {
                    return this.columnDspClockInTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DspClockOutTimeColumn {
                get {
                    return this.columnDspClockOutTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ResourceIDColumn {
                get {
                    return this.columnResourceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OpCompleteColumn {
                get {
                    return this.columnOpComplete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EarnedHrsColumn {
                get {
                    return this.columnEarnedHrs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AddedOperColumn {
                get {
                    return this.columnAddedOper;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PayrollDateColumn {
                get {
                    return this.columnPayrollDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PostedToGLColumn {
                get {
                    return this.columnPostedToGL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FiscalYearColumn {
                get {
                    return this.columnFiscalYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FiscalPeriodColumn {
                get {
                    return this.columnFiscalPeriod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn JournalNumColumn {
                get {
                    return this.columnJournalNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GLTransColumn {
                get {
                    return this.columnGLTrans;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn JournalCodeColumn {
                get {
                    return this.columnJournalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InspectionPendingColumn {
                get {
                    return this.columnInspectionPending;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CallNumColumn {
                get {
                    return this.columnCallNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CallLineColumn {
                get {
                    return this.columnCallLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ServNumColumn {
                get {
                    return this.columnServNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ServCodeColumn {
                get {
                    return this.columnServCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ResReasonCodeColumn {
                get {
                    return this.columnResReasonCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WipPostedColumn {
                get {
                    return this.columnWipPosted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DiscrepQtyColumn {
                get {
                    return this.columnDiscrepQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DiscrpRsnCodeColumn {
                get {
                    return this.columnDiscrpRsnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ParentLaborDtlSeqColumn {
                get {
                    return this.columnParentLaborDtlSeq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LaborEntryMethodColumn {
                get {
                    return this.columnLaborEntryMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FiscalYearSuffixColumn {
                get {
                    return this.columnFiscalYearSuffix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FiscalCalendarIDColumn {
                get {
                    return this.columnFiscalCalendarID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BFLaborReqColumn {
                get {
                    return this.columnBFLaborReq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ABTUIDColumn {
                get {
                    return this.columnABTUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PhaseIDColumn {
                get {
                    return this.columnPhaseID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RoleCdColumn {
                get {
                    return this.columnRoleCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TimeTypCdColumn {
                get {
                    return this.columnTimeTypCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PBInvNumColumn {
                get {
                    return this.columnPBInvNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PMUIDColumn {
                get {
                    return this.columnPMUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TaskSetIDColumn {
                get {
                    return this.columnTaskSetID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ApprovedDateColumn {
                get {
                    return this.columnApprovedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ClaimRefColumn {
                get {
                    return this.columnClaimRef;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QuickEntryCodeColumn {
                get {
                    return this.columnQuickEntryCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TimeStatusColumn {
                get {
                    return this.columnTimeStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreateDateColumn {
                get {
                    return this.columnCreateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreateTimeColumn {
                get {
                    return this.columnCreateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ChangedByColumn {
                get {
                    return this.columnChangedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ChangeDateColumn {
                get {
                    return this.columnChangeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ChangeTimeColumn {
                get {
                    return this.columnChangeTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ActiveTaskIDColumn {
                get {
                    return this.columnActiveTaskID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LastTaskIDColumn {
                get {
                    return this.columnLastTaskID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreatedViaTEWeekViewColumn {
                get {
                    return this.columnCreatedViaTEWeekView;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CurrentWFStageIDColumn {
                get {
                    return this.columnCurrentWFStageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WFGroupIDColumn {
                get {
                    return this.columnWFGroupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WFCompleteColumn {
                get {
                    return this.columnWFComplete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ApprovalRequiredColumn {
                get {
                    return this.columnApprovalRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SubmittedByColumn {
                get {
                    return this.columnSubmittedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PBRateFromColumn {
                get {
                    return this.columnPBRateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PBCurrencyCodeColumn {
                get {
                    return this.columnPBCurrencyCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PBHoursColumn {
                get {
                    return this.columnPBHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PBChargeRateColumn {
                get {
                    return this.columnPBChargeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PBChargeAmtColumn {
                get {
                    return this.columnPBChargeAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DocPBChargeRateColumn {
                get {
                    return this.columnDocPBChargeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Rpt1PBChargeRateColumn {
                get {
                    return this.columnRpt1PBChargeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Rpt2PBChargeRateColumn {
                get {
                    return this.columnRpt2PBChargeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Rpt3PBChargeRateColumn {
                get {
                    return this.columnRpt3PBChargeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DocPBChargeAmtColumn {
                get {
                    return this.columnDocPBChargeAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Rpt1PBChargeAmtColumn {
                get {
                    return this.columnRpt1PBChargeAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Rpt2PBChargeAmtColumn {
                get {
                    return this.columnRpt2PBChargeAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Rpt3PBChargeAmtColumn {
                get {
                    return this.columnRpt3PBChargeAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ShiftColumn {
                get {
                    return this.columnShift;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ActIDColumn {
                get {
                    return this.columnActID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DtailIDColumn {
                get {
                    return this.columnDtailID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ProjProcessedColumn {
                get {
                    return this.columnProjProcessed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AsOfDateColumn {
                get {
                    return this.columnAsOfDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AsOfSeqColumn {
                get {
                    return this.columnAsOfSeq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn JDFInputFilesColumn {
                get {
                    return this.columnJDFInputFiles;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn JDFNumberOfPagesColumn {
                get {
                    return this.columnJDFNumberOfPages;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BatchWasSavedColumn {
                get {
                    return this.columnBatchWasSaved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AssignToBatchColumn {
                get {
                    return this.columnAssignToBatch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BatchCompleteColumn {
                get {
                    return this.columnBatchComplete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BatchRequestMoveColumn {
                get {
                    return this.columnBatchRequestMove;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BatchPrintColumn {
                get {
                    return this.columnBatchPrint;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BatchLaborHrsColumn {
                get {
                    return this.columnBatchLaborHrs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BatchPctOfTotHrsColumn {
                get {
                    return this.columnBatchPctOfTotHrs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BatchQtyColumn {
                get {
                    return this.columnBatchQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BatchTotalExpectedHrsColumn {
                get {
                    return this.columnBatchTotalExpectedHrs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn JDFOpCompletedColumn {
                get {
                    return this.columnJDFOpCompleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SysRevIDColumn {
                get {
                    return this.columnSysRevID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SysRowIDColumn {
                get {
                    return this.columnSysRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DowntimeColumn {
                get {
                    return this.columnDowntime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RefJobNumColumn {
                get {
                    return this.columnRefJobNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RefAssemblySeqColumn {
                get {
                    return this.columnRefAssemblySeq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RefOprSeqColumn {
                get {
                    return this.columnRefOprSeq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ImportedColumn {
                get {
                    return this.columnImported;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ImportDateColumn {
                get {
                    return this.columnImportDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TimeAutoSubmitColumn {
                get {
                    return this.columnTimeAutoSubmit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BatchModeColumn {
                get {
                    return this.columnBatchMode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BillServiceRateColumn {
                get {
                    return this.columnBillServiceRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HCMPayHoursColumn {
                get {
                    return this.columnHCMPayHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EpicorFSAColumn {
                get {
                    return this.columnEpicorFSA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LaborDtlRow this[int index] {
                get {
                    return ((LaborDtlRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LaborDtlRowChangeEventHandler LaborDtlRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LaborDtlRowChangeEventHandler LaborDtlRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LaborDtlRowChangeEventHandler LaborDtlRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LaborDtlRowChangeEventHandler LaborDtlRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddLaborDtlRow(LaborDtlRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LaborDtlRow AddLaborDtlRow(
                        string Company, 
                        string EmployeeNum, 
                        int LaborHedSeq, 
                        int LaborDtlSeq, 
                        string LaborType, 
                        string LaborTypePseudo, 
                        bool ReWork, 
                        string ReworkReasonCode, 
                        string JobNum, 
                        int AssemblySeq, 
                        int OprSeq, 
                        string JCDept, 
                        string ResourceGrpID, 
                        string OpCode, 
                        decimal LaborHrs, 
                        decimal BurdenHrs, 
                        decimal LaborQty, 
                        decimal ScrapQty, 
                        string ScrapReasonCode, 
                        int SetupPctComplete, 
                        bool Complete, 
                        string IndirectCode, 
                        string LaborNote, 
                        string ExpenseCode, 
                        bool LaborCollection, 
                        bool AppliedToSchedule, 
                        int ClockInMInute, 
                        int ClockOutMinute, 
                        System.DateTime ClockInDate, 
                        decimal ClockinTime, 
                        decimal ClockOutTime, 
                        bool ActiveTrans, 
                        decimal OverRidePayRate, 
                        decimal LaborRate, 
                        decimal BurdenRate, 
                        string DspClockInTime, 
                        string DspClockOutTime, 
                        string ResourceID, 
                        bool OpComplete, 
                        decimal EarnedHrs, 
                        bool AddedOper, 
                        System.DateTime PayrollDate, 
                        bool PostedToGL, 
                        int FiscalYear, 
                        int FiscalPeriod, 
                        int JournalNum, 
                        bool GLTrans, 
                        string JournalCode, 
                        bool InspectionPending, 
                        int CallNum, 
                        int CallLine, 
                        int ServNum, 
                        string ServCode, 
                        string ResReasonCode, 
                        bool WipPosted, 
                        decimal DiscrepQty, 
                        string DiscrpRsnCode, 
                        int ParentLaborDtlSeq, 
                        string LaborEntryMethod, 
                        string FiscalYearSuffix, 
                        string FiscalCalendarID, 
                        bool BFLaborReq, 
                        string ABTUID, 
                        string ProjectID, 
                        string PhaseID, 
                        string RoleCd, 
                        string TimeTypCd, 
                        int PBInvNum, 
                        int PMUID, 
                        string TaskSetID, 
                        System.DateTime ApprovedDate, 
                        string ClaimRef, 
                        string QuickEntryCode, 
                        string TimeStatus, 
                        string CreatedBy, 
                        System.DateTime CreateDate, 
                        int CreateTime, 
                        string ChangedBy, 
                        System.DateTime ChangeDate, 
                        int ChangeTime, 
                        string ActiveTaskID, 
                        string LastTaskID, 
                        bool CreatedViaTEWeekView, 
                        string CurrentWFStageID, 
                        string WFGroupID, 
                        bool WFComplete, 
                        bool ApprovalRequired, 
                        string SubmittedBy, 
                        string PBRateFrom, 
                        string PBCurrencyCode, 
                        decimal PBHours, 
                        decimal PBChargeRate, 
                        decimal PBChargeAmt, 
                        decimal DocPBChargeRate, 
                        decimal Rpt1PBChargeRate, 
                        decimal Rpt2PBChargeRate, 
                        decimal Rpt3PBChargeRate, 
                        decimal DocPBChargeAmt, 
                        decimal Rpt1PBChargeAmt, 
                        decimal Rpt2PBChargeAmt, 
                        decimal Rpt3PBChargeAmt, 
                        int Shift, 
                        int ActID, 
                        int DtailID, 
                        bool ProjProcessed, 
                        System.DateTime AsOfDate, 
                        int AsOfSeq, 
                        string JDFInputFiles, 
                        string JDFNumberOfPages, 
                        string BatchWasSaved, 
                        bool AssignToBatch, 
                        bool BatchComplete, 
                        bool BatchRequestMove, 
                        bool BatchPrint, 
                        decimal BatchLaborHrs, 
                        decimal BatchPctOfTotHrs, 
                        decimal BatchQty, 
                        decimal BatchTotalExpectedHrs, 
                        string JDFOpCompleted, 
                        byte[] SysRevID, 
                        System.Guid SysRowID, 
                        bool Downtime, 
                        string RefJobNum, 
                        int RefAssemblySeq, 
                        int RefOprSeq, 
                        bool Imported, 
                        System.DateTime ImportDate, 
                        bool TimeAutoSubmit, 
                        bool BatchMode, 
                        decimal BillServiceRate, 
                        decimal HCMPayHours, 
                        bool EpicorFSA) {
                LaborDtlRow rowLaborDtlRow = ((LaborDtlRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Company,
                        EmployeeNum,
                        LaborHedSeq,
                        LaborDtlSeq,
                        LaborType,
                        LaborTypePseudo,
                        ReWork,
                        ReworkReasonCode,
                        JobNum,
                        AssemblySeq,
                        OprSeq,
                        JCDept,
                        ResourceGrpID,
                        OpCode,
                        LaborHrs,
                        BurdenHrs,
                        LaborQty,
                        ScrapQty,
                        ScrapReasonCode,
                        SetupPctComplete,
                        Complete,
                        IndirectCode,
                        LaborNote,
                        ExpenseCode,
                        LaborCollection,
                        AppliedToSchedule,
                        ClockInMInute,
                        ClockOutMinute,
                        ClockInDate,
                        ClockinTime,
                        ClockOutTime,
                        ActiveTrans,
                        OverRidePayRate,
                        LaborRate,
                        BurdenRate,
                        DspClockInTime,
                        DspClockOutTime,
                        ResourceID,
                        OpComplete,
                        EarnedHrs,
                        AddedOper,
                        PayrollDate,
                        PostedToGL,
                        FiscalYear,
                        FiscalPeriod,
                        JournalNum,
                        GLTrans,
                        JournalCode,
                        InspectionPending,
                        CallNum,
                        CallLine,
                        ServNum,
                        ServCode,
                        ResReasonCode,
                        WipPosted,
                        DiscrepQty,
                        DiscrpRsnCode,
                        ParentLaborDtlSeq,
                        LaborEntryMethod,
                        FiscalYearSuffix,
                        FiscalCalendarID,
                        BFLaborReq,
                        ABTUID,
                        ProjectID,
                        PhaseID,
                        RoleCd,
                        TimeTypCd,
                        PBInvNum,
                        PMUID,
                        TaskSetID,
                        ApprovedDate,
                        ClaimRef,
                        QuickEntryCode,
                        TimeStatus,
                        CreatedBy,
                        CreateDate,
                        CreateTime,
                        ChangedBy,
                        ChangeDate,
                        ChangeTime,
                        ActiveTaskID,
                        LastTaskID,
                        CreatedViaTEWeekView,
                        CurrentWFStageID,
                        WFGroupID,
                        WFComplete,
                        ApprovalRequired,
                        SubmittedBy,
                        PBRateFrom,
                        PBCurrencyCode,
                        PBHours,
                        PBChargeRate,
                        PBChargeAmt,
                        DocPBChargeRate,
                        Rpt1PBChargeRate,
                        Rpt2PBChargeRate,
                        Rpt3PBChargeRate,
                        DocPBChargeAmt,
                        Rpt1PBChargeAmt,
                        Rpt2PBChargeAmt,
                        Rpt3PBChargeAmt,
                        Shift,
                        ActID,
                        DtailID,
                        ProjProcessed,
                        AsOfDate,
                        AsOfSeq,
                        JDFInputFiles,
                        JDFNumberOfPages,
                        BatchWasSaved,
                        AssignToBatch,
                        BatchComplete,
                        BatchRequestMove,
                        BatchPrint,
                        BatchLaborHrs,
                        BatchPctOfTotHrs,
                        BatchQty,
                        BatchTotalExpectedHrs,
                        JDFOpCompleted,
                        SysRevID,
                        SysRowID,
                        Downtime,
                        RefJobNum,
                        RefAssemblySeq,
                        RefOprSeq,
                        Imported,
                        ImportDate,
                        TimeAutoSubmit,
                        BatchMode,
                        BillServiceRate,
                        HCMPayHours,
                        EpicorFSA};
                rowLaborDtlRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLaborDtlRow);
                return rowLaborDtlRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LaborDtlRow FindByCompanyLaborHedSeqLaborDtlSeq(string Company, int LaborHedSeq, int LaborDtlSeq) {
                return ((LaborDtlRow)(this.Rows.Find(new object[] {
                            Company,
                            LaborHedSeq,
                            LaborDtlSeq})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LaborDtlDataTable cln = ((LaborDtlDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LaborDtlDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnCompany = base.Columns["Company"];
                this.columnEmployeeNum = base.Columns["EmployeeNum"];
                this.columnLaborHedSeq = base.Columns["LaborHedSeq"];
                this.columnLaborDtlSeq = base.Columns["LaborDtlSeq"];
                this.columnLaborType = base.Columns["LaborType"];
                this.columnLaborTypePseudo = base.Columns["LaborTypePseudo"];
                this.columnReWork = base.Columns["ReWork"];
                this.columnReworkReasonCode = base.Columns["ReworkReasonCode"];
                this.columnJobNum = base.Columns["JobNum"];
                this.columnAssemblySeq = base.Columns["AssemblySeq"];
                this.columnOprSeq = base.Columns["OprSeq"];
                this.columnJCDept = base.Columns["JCDept"];
                this.columnResourceGrpID = base.Columns["ResourceGrpID"];
                this.columnOpCode = base.Columns["OpCode"];
                this.columnLaborHrs = base.Columns["LaborHrs"];
                this.columnBurdenHrs = base.Columns["BurdenHrs"];
                this.columnLaborQty = base.Columns["LaborQty"];
                this.columnScrapQty = base.Columns["ScrapQty"];
                this.columnScrapReasonCode = base.Columns["ScrapReasonCode"];
                this.columnSetupPctComplete = base.Columns["SetupPctComplete"];
                this.columnComplete = base.Columns["Complete"];
                this.columnIndirectCode = base.Columns["IndirectCode"];
                this.columnLaborNote = base.Columns["LaborNote"];
                this.columnExpenseCode = base.Columns["ExpenseCode"];
                this.columnLaborCollection = base.Columns["LaborCollection"];
                this.columnAppliedToSchedule = base.Columns["AppliedToSchedule"];
                this.columnClockInMInute = base.Columns["ClockInMInute"];
                this.columnClockOutMinute = base.Columns["ClockOutMinute"];
                this.columnClockInDate = base.Columns["ClockInDate"];
                this.columnClockinTime = base.Columns["ClockinTime"];
                this.columnClockOutTime = base.Columns["ClockOutTime"];
                this.columnActiveTrans = base.Columns["ActiveTrans"];
                this.columnOverRidePayRate = base.Columns["OverRidePayRate"];
                this.columnLaborRate = base.Columns["LaborRate"];
                this.columnBurdenRate = base.Columns["BurdenRate"];
                this.columnDspClockInTime = base.Columns["DspClockInTime"];
                this.columnDspClockOutTime = base.Columns["DspClockOutTime"];
                this.columnResourceID = base.Columns["ResourceID"];
                this.columnOpComplete = base.Columns["OpComplete"];
                this.columnEarnedHrs = base.Columns["EarnedHrs"];
                this.columnAddedOper = base.Columns["AddedOper"];
                this.columnPayrollDate = base.Columns["PayrollDate"];
                this.columnPostedToGL = base.Columns["PostedToGL"];
                this.columnFiscalYear = base.Columns["FiscalYear"];
                this.columnFiscalPeriod = base.Columns["FiscalPeriod"];
                this.columnJournalNum = base.Columns["JournalNum"];
                this.columnGLTrans = base.Columns["GLTrans"];
                this.columnJournalCode = base.Columns["JournalCode"];
                this.columnInspectionPending = base.Columns["InspectionPending"];
                this.columnCallNum = base.Columns["CallNum"];
                this.columnCallLine = base.Columns["CallLine"];
                this.columnServNum = base.Columns["ServNum"];
                this.columnServCode = base.Columns["ServCode"];
                this.columnResReasonCode = base.Columns["ResReasonCode"];
                this.columnWipPosted = base.Columns["WipPosted"];
                this.columnDiscrepQty = base.Columns["DiscrepQty"];
                this.columnDiscrpRsnCode = base.Columns["DiscrpRsnCode"];
                this.columnParentLaborDtlSeq = base.Columns["ParentLaborDtlSeq"];
                this.columnLaborEntryMethod = base.Columns["LaborEntryMethod"];
                this.columnFiscalYearSuffix = base.Columns["FiscalYearSuffix"];
                this.columnFiscalCalendarID = base.Columns["FiscalCalendarID"];
                this.columnBFLaborReq = base.Columns["BFLaborReq"];
                this.columnABTUID = base.Columns["ABTUID"];
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnPhaseID = base.Columns["PhaseID"];
                this.columnRoleCd = base.Columns["RoleCd"];
                this.columnTimeTypCd = base.Columns["TimeTypCd"];
                this.columnPBInvNum = base.Columns["PBInvNum"];
                this.columnPMUID = base.Columns["PMUID"];
                this.columnTaskSetID = base.Columns["TaskSetID"];
                this.columnApprovedDate = base.Columns["ApprovedDate"];
                this.columnClaimRef = base.Columns["ClaimRef"];
                this.columnQuickEntryCode = base.Columns["QuickEntryCode"];
                this.columnTimeStatus = base.Columns["TimeStatus"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreateDate = base.Columns["CreateDate"];
                this.columnCreateTime = base.Columns["CreateTime"];
                this.columnChangedBy = base.Columns["ChangedBy"];
                this.columnChangeDate = base.Columns["ChangeDate"];
                this.columnChangeTime = base.Columns["ChangeTime"];
                this.columnActiveTaskID = base.Columns["ActiveTaskID"];
                this.columnLastTaskID = base.Columns["LastTaskID"];
                this.columnCreatedViaTEWeekView = base.Columns["CreatedViaTEWeekView"];
                this.columnCurrentWFStageID = base.Columns["CurrentWFStageID"];
                this.columnWFGroupID = base.Columns["WFGroupID"];
                this.columnWFComplete = base.Columns["WFComplete"];
                this.columnApprovalRequired = base.Columns["ApprovalRequired"];
                this.columnSubmittedBy = base.Columns["SubmittedBy"];
                this.columnPBRateFrom = base.Columns["PBRateFrom"];
                this.columnPBCurrencyCode = base.Columns["PBCurrencyCode"];
                this.columnPBHours = base.Columns["PBHours"];
                this.columnPBChargeRate = base.Columns["PBChargeRate"];
                this.columnPBChargeAmt = base.Columns["PBChargeAmt"];
                this.columnDocPBChargeRate = base.Columns["DocPBChargeRate"];
                this.columnRpt1PBChargeRate = base.Columns["Rpt1PBChargeRate"];
                this.columnRpt2PBChargeRate = base.Columns["Rpt2PBChargeRate"];
                this.columnRpt3PBChargeRate = base.Columns["Rpt3PBChargeRate"];
                this.columnDocPBChargeAmt = base.Columns["DocPBChargeAmt"];
                this.columnRpt1PBChargeAmt = base.Columns["Rpt1PBChargeAmt"];
                this.columnRpt2PBChargeAmt = base.Columns["Rpt2PBChargeAmt"];
                this.columnRpt3PBChargeAmt = base.Columns["Rpt3PBChargeAmt"];
                this.columnShift = base.Columns["Shift"];
                this.columnActID = base.Columns["ActID"];
                this.columnDtailID = base.Columns["DtailID"];
                this.columnProjProcessed = base.Columns["ProjProcessed"];
                this.columnAsOfDate = base.Columns["AsOfDate"];
                this.columnAsOfSeq = base.Columns["AsOfSeq"];
                this.columnJDFInputFiles = base.Columns["JDFInputFiles"];
                this.columnJDFNumberOfPages = base.Columns["JDFNumberOfPages"];
                this.columnBatchWasSaved = base.Columns["BatchWasSaved"];
                this.columnAssignToBatch = base.Columns["AssignToBatch"];
                this.columnBatchComplete = base.Columns["BatchComplete"];
                this.columnBatchRequestMove = base.Columns["BatchRequestMove"];
                this.columnBatchPrint = base.Columns["BatchPrint"];
                this.columnBatchLaborHrs = base.Columns["BatchLaborHrs"];
                this.columnBatchPctOfTotHrs = base.Columns["BatchPctOfTotHrs"];
                this.columnBatchQty = base.Columns["BatchQty"];
                this.columnBatchTotalExpectedHrs = base.Columns["BatchTotalExpectedHrs"];
                this.columnJDFOpCompleted = base.Columns["JDFOpCompleted"];
                this.columnSysRevID = base.Columns["SysRevID"];
                this.columnSysRowID = base.Columns["SysRowID"];
                this.columnDowntime = base.Columns["Downtime"];
                this.columnRefJobNum = base.Columns["RefJobNum"];
                this.columnRefAssemblySeq = base.Columns["RefAssemblySeq"];
                this.columnRefOprSeq = base.Columns["RefOprSeq"];
                this.columnImported = base.Columns["Imported"];
                this.columnImportDate = base.Columns["ImportDate"];
                this.columnTimeAutoSubmit = base.Columns["TimeAutoSubmit"];
                this.columnBatchMode = base.Columns["BatchMode"];
                this.columnBillServiceRate = base.Columns["BillServiceRate"];
                this.columnHCMPayHours = base.Columns["HCMPayHours"];
                this.columnEpicorFSA = base.Columns["EpicorFSA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnCompany = new global::System.Data.DataColumn("Company", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany);
                this.columnEmployeeNum = new global::System.Data.DataColumn("EmployeeNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeNum);
                this.columnLaborHedSeq = new global::System.Data.DataColumn("LaborHedSeq", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaborHedSeq);
                this.columnLaborDtlSeq = new global::System.Data.DataColumn("LaborDtlSeq", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaborDtlSeq);
                this.columnLaborType = new global::System.Data.DataColumn("LaborType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaborType);
                this.columnLaborTypePseudo = new global::System.Data.DataColumn("LaborTypePseudo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaborTypePseudo);
                this.columnReWork = new global::System.Data.DataColumn("ReWork", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReWork);
                this.columnReworkReasonCode = new global::System.Data.DataColumn("ReworkReasonCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReworkReasonCode);
                this.columnJobNum = new global::System.Data.DataColumn("JobNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobNum);
                this.columnAssemblySeq = new global::System.Data.DataColumn("AssemblySeq", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssemblySeq);
                this.columnOprSeq = new global::System.Data.DataColumn("OprSeq", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOprSeq);
                this.columnJCDept = new global::System.Data.DataColumn("JCDept", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJCDept);
                this.columnResourceGrpID = new global::System.Data.DataColumn("ResourceGrpID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResourceGrpID);
                this.columnOpCode = new global::System.Data.DataColumn("OpCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpCode);
                this.columnLaborHrs = new global::System.Data.DataColumn("LaborHrs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaborHrs);
                this.columnBurdenHrs = new global::System.Data.DataColumn("BurdenHrs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBurdenHrs);
                this.columnLaborQty = new global::System.Data.DataColumn("LaborQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaborQty);
                this.columnScrapQty = new global::System.Data.DataColumn("ScrapQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScrapQty);
                this.columnScrapReasonCode = new global::System.Data.DataColumn("ScrapReasonCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScrapReasonCode);
                this.columnSetupPctComplete = new global::System.Data.DataColumn("SetupPctComplete", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSetupPctComplete);
                this.columnComplete = new global::System.Data.DataColumn("Complete", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComplete);
                this.columnIndirectCode = new global::System.Data.DataColumn("IndirectCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndirectCode);
                this.columnLaborNote = new global::System.Data.DataColumn("LaborNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaborNote);
                this.columnExpenseCode = new global::System.Data.DataColumn("ExpenseCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpenseCode);
                this.columnLaborCollection = new global::System.Data.DataColumn("LaborCollection", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaborCollection);
                this.columnAppliedToSchedule = new global::System.Data.DataColumn("AppliedToSchedule", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppliedToSchedule);
                this.columnClockInMInute = new global::System.Data.DataColumn("ClockInMInute", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClockInMInute);
                this.columnClockOutMinute = new global::System.Data.DataColumn("ClockOutMinute", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClockOutMinute);
                this.columnClockInDate = new global::System.Data.DataColumn("ClockInDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClockInDate);
                this.columnClockinTime = new global::System.Data.DataColumn("ClockinTime", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClockinTime);
                this.columnClockOutTime = new global::System.Data.DataColumn("ClockOutTime", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClockOutTime);
                this.columnActiveTrans = new global::System.Data.DataColumn("ActiveTrans", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActiveTrans);
                this.columnOverRidePayRate = new global::System.Data.DataColumn("OverRidePayRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverRidePayRate);
                this.columnLaborRate = new global::System.Data.DataColumn("LaborRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaborRate);
                this.columnBurdenRate = new global::System.Data.DataColumn("BurdenRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBurdenRate);
                this.columnDspClockInTime = new global::System.Data.DataColumn("DspClockInTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDspClockInTime);
                this.columnDspClockOutTime = new global::System.Data.DataColumn("DspClockOutTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDspClockOutTime);
                this.columnResourceID = new global::System.Data.DataColumn("ResourceID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResourceID);
                this.columnOpComplete = new global::System.Data.DataColumn("OpComplete", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpComplete);
                this.columnEarnedHrs = new global::System.Data.DataColumn("EarnedHrs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEarnedHrs);
                this.columnAddedOper = new global::System.Data.DataColumn("AddedOper", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddedOper);
                this.columnPayrollDate = new global::System.Data.DataColumn("PayrollDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayrollDate);
                this.columnPostedToGL = new global::System.Data.DataColumn("PostedToGL", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostedToGL);
                this.columnFiscalYear = new global::System.Data.DataColumn("FiscalYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiscalYear);
                this.columnFiscalPeriod = new global::System.Data.DataColumn("FiscalPeriod", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiscalPeriod);
                this.columnJournalNum = new global::System.Data.DataColumn("JournalNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJournalNum);
                this.columnGLTrans = new global::System.Data.DataColumn("GLTrans", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGLTrans);
                this.columnJournalCode = new global::System.Data.DataColumn("JournalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJournalCode);
                this.columnInspectionPending = new global::System.Data.DataColumn("InspectionPending", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInspectionPending);
                this.columnCallNum = new global::System.Data.DataColumn("CallNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallNum);
                this.columnCallLine = new global::System.Data.DataColumn("CallLine", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallLine);
                this.columnServNum = new global::System.Data.DataColumn("ServNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServNum);
                this.columnServCode = new global::System.Data.DataColumn("ServCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServCode);
                this.columnResReasonCode = new global::System.Data.DataColumn("ResReasonCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResReasonCode);
                this.columnWipPosted = new global::System.Data.DataColumn("WipPosted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWipPosted);
                this.columnDiscrepQty = new global::System.Data.DataColumn("DiscrepQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscrepQty);
                this.columnDiscrpRsnCode = new global::System.Data.DataColumn("DiscrpRsnCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscrpRsnCode);
                this.columnParentLaborDtlSeq = new global::System.Data.DataColumn("ParentLaborDtlSeq", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentLaborDtlSeq);
                this.columnLaborEntryMethod = new global::System.Data.DataColumn("LaborEntryMethod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaborEntryMethod);
                this.columnFiscalYearSuffix = new global::System.Data.DataColumn("FiscalYearSuffix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiscalYearSuffix);
                this.columnFiscalCalendarID = new global::System.Data.DataColumn("FiscalCalendarID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiscalCalendarID);
                this.columnBFLaborReq = new global::System.Data.DataColumn("BFLaborReq", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBFLaborReq);
                this.columnABTUID = new global::System.Data.DataColumn("ABTUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnABTUID);
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnPhaseID = new global::System.Data.DataColumn("PhaseID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhaseID);
                this.columnRoleCd = new global::System.Data.DataColumn("RoleCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoleCd);
                this.columnTimeTypCd = new global::System.Data.DataColumn("TimeTypCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeTypCd);
                this.columnPBInvNum = new global::System.Data.DataColumn("PBInvNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPBInvNum);
                this.columnPMUID = new global::System.Data.DataColumn("PMUID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMUID);
                this.columnTaskSetID = new global::System.Data.DataColumn("TaskSetID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaskSetID);
                this.columnApprovedDate = new global::System.Data.DataColumn("ApprovedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovedDate);
                this.columnClaimRef = new global::System.Data.DataColumn("ClaimRef", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClaimRef);
                this.columnQuickEntryCode = new global::System.Data.DataColumn("QuickEntryCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuickEntryCode);
                this.columnTimeStatus = new global::System.Data.DataColumn("TimeStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeStatus);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreateDate = new global::System.Data.DataColumn("CreateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDate);
                this.columnCreateTime = new global::System.Data.DataColumn("CreateTime", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateTime);
                this.columnChangedBy = new global::System.Data.DataColumn("ChangedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangedBy);
                this.columnChangeDate = new global::System.Data.DataColumn("ChangeDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangeDate);
                this.columnChangeTime = new global::System.Data.DataColumn("ChangeTime", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangeTime);
                this.columnActiveTaskID = new global::System.Data.DataColumn("ActiveTaskID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActiveTaskID);
                this.columnLastTaskID = new global::System.Data.DataColumn("LastTaskID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastTaskID);
                this.columnCreatedViaTEWeekView = new global::System.Data.DataColumn("CreatedViaTEWeekView", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedViaTEWeekView);
                this.columnCurrentWFStageID = new global::System.Data.DataColumn("CurrentWFStageID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentWFStageID);
                this.columnWFGroupID = new global::System.Data.DataColumn("WFGroupID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWFGroupID);
                this.columnWFComplete = new global::System.Data.DataColumn("WFComplete", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWFComplete);
                this.columnApprovalRequired = new global::System.Data.DataColumn("ApprovalRequired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalRequired);
                this.columnSubmittedBy = new global::System.Data.DataColumn("SubmittedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubmittedBy);
                this.columnPBRateFrom = new global::System.Data.DataColumn("PBRateFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPBRateFrom);
                this.columnPBCurrencyCode = new global::System.Data.DataColumn("PBCurrencyCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPBCurrencyCode);
                this.columnPBHours = new global::System.Data.DataColumn("PBHours", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPBHours);
                this.columnPBChargeRate = new global::System.Data.DataColumn("PBChargeRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPBChargeRate);
                this.columnPBChargeAmt = new global::System.Data.DataColumn("PBChargeAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPBChargeAmt);
                this.columnDocPBChargeRate = new global::System.Data.DataColumn("DocPBChargeRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocPBChargeRate);
                this.columnRpt1PBChargeRate = new global::System.Data.DataColumn("Rpt1PBChargeRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRpt1PBChargeRate);
                this.columnRpt2PBChargeRate = new global::System.Data.DataColumn("Rpt2PBChargeRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRpt2PBChargeRate);
                this.columnRpt3PBChargeRate = new global::System.Data.DataColumn("Rpt3PBChargeRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRpt3PBChargeRate);
                this.columnDocPBChargeAmt = new global::System.Data.DataColumn("DocPBChargeAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocPBChargeAmt);
                this.columnRpt1PBChargeAmt = new global::System.Data.DataColumn("Rpt1PBChargeAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRpt1PBChargeAmt);
                this.columnRpt2PBChargeAmt = new global::System.Data.DataColumn("Rpt2PBChargeAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRpt2PBChargeAmt);
                this.columnRpt3PBChargeAmt = new global::System.Data.DataColumn("Rpt3PBChargeAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRpt3PBChargeAmt);
                this.columnShift = new global::System.Data.DataColumn("Shift", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShift);
                this.columnActID = new global::System.Data.DataColumn("ActID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActID);
                this.columnDtailID = new global::System.Data.DataColumn("DtailID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDtailID);
                this.columnProjProcessed = new global::System.Data.DataColumn("ProjProcessed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjProcessed);
                this.columnAsOfDate = new global::System.Data.DataColumn("AsOfDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAsOfDate);
                this.columnAsOfSeq = new global::System.Data.DataColumn("AsOfSeq", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAsOfSeq);
                this.columnJDFInputFiles = new global::System.Data.DataColumn("JDFInputFiles", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJDFInputFiles);
                this.columnJDFNumberOfPages = new global::System.Data.DataColumn("JDFNumberOfPages", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJDFNumberOfPages);
                this.columnBatchWasSaved = new global::System.Data.DataColumn("BatchWasSaved", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchWasSaved);
                this.columnAssignToBatch = new global::System.Data.DataColumn("AssignToBatch", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssignToBatch);
                this.columnBatchComplete = new global::System.Data.DataColumn("BatchComplete", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchComplete);
                this.columnBatchRequestMove = new global::System.Data.DataColumn("BatchRequestMove", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchRequestMove);
                this.columnBatchPrint = new global::System.Data.DataColumn("BatchPrint", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchPrint);
                this.columnBatchLaborHrs = new global::System.Data.DataColumn("BatchLaborHrs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchLaborHrs);
                this.columnBatchPctOfTotHrs = new global::System.Data.DataColumn("BatchPctOfTotHrs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchPctOfTotHrs);
                this.columnBatchQty = new global::System.Data.DataColumn("BatchQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchQty);
                this.columnBatchTotalExpectedHrs = new global::System.Data.DataColumn("BatchTotalExpectedHrs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchTotalExpectedHrs);
                this.columnJDFOpCompleted = new global::System.Data.DataColumn("JDFOpCompleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJDFOpCompleted);
                this.columnSysRevID = new global::System.Data.DataColumn("SysRevID", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSysRevID);
                this.columnSysRowID = new global::System.Data.DataColumn("SysRowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSysRowID);
                this.columnDowntime = new global::System.Data.DataColumn("Downtime", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDowntime);
                this.columnRefJobNum = new global::System.Data.DataColumn("RefJobNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefJobNum);
                this.columnRefAssemblySeq = new global::System.Data.DataColumn("RefAssemblySeq", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefAssemblySeq);
                this.columnRefOprSeq = new global::System.Data.DataColumn("RefOprSeq", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefOprSeq);
                this.columnImported = new global::System.Data.DataColumn("Imported", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImported);
                this.columnImportDate = new global::System.Data.DataColumn("ImportDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImportDate);
                this.columnTimeAutoSubmit = new global::System.Data.DataColumn("TimeAutoSubmit", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeAutoSubmit);
                this.columnBatchMode = new global::System.Data.DataColumn("BatchMode", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchMode);
                this.columnBillServiceRate = new global::System.Data.DataColumn("BillServiceRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillServiceRate);
                this.columnHCMPayHours = new global::System.Data.DataColumn("HCMPayHours", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHCMPayHours);
                this.columnEpicorFSA = new global::System.Data.DataColumn("EpicorFSA", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEpicorFSA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCompany,
                                this.columnLaborHedSeq,
                                this.columnLaborDtlSeq}, true));
                this.columnCompany.AllowDBNull = false;
                this.columnCompany.MaxLength = 8;
                this.columnEmployeeNum.AllowDBNull = false;
                this.columnEmployeeNum.MaxLength = 8;
                this.columnLaborHedSeq.AllowDBNull = false;
                this.columnLaborDtlSeq.AllowDBNull = false;
                this.columnLaborType.AllowDBNull = false;
                this.columnLaborType.MaxLength = 2;
                this.columnLaborTypePseudo.AllowDBNull = false;
                this.columnLaborTypePseudo.MaxLength = 2;
                this.columnReWork.AllowDBNull = false;
                this.columnReworkReasonCode.AllowDBNull = false;
                this.columnReworkReasonCode.MaxLength = 8;
                this.columnJobNum.AllowDBNull = false;
                this.columnJobNum.MaxLength = 14;
                this.columnAssemblySeq.AllowDBNull = false;
                this.columnOprSeq.AllowDBNull = false;
                this.columnJCDept.AllowDBNull = false;
                this.columnJCDept.MaxLength = 8;
                this.columnResourceGrpID.AllowDBNull = false;
                this.columnResourceGrpID.MaxLength = 8;
                this.columnOpCode.AllowDBNull = false;
                this.columnOpCode.MaxLength = 8;
                this.columnLaborHrs.AllowDBNull = false;
                this.columnBurdenHrs.AllowDBNull = false;
                this.columnLaborQty.AllowDBNull = false;
                this.columnScrapQty.AllowDBNull = false;
                this.columnScrapReasonCode.AllowDBNull = false;
                this.columnScrapReasonCode.MaxLength = 8;
                this.columnSetupPctComplete.AllowDBNull = false;
                this.columnComplete.AllowDBNull = false;
                this.columnIndirectCode.AllowDBNull = false;
                this.columnIndirectCode.MaxLength = 4;
                this.columnLaborNote.AllowDBNull = false;
                this.columnLaborNote.MaxLength = 2147483647;
                this.columnExpenseCode.AllowDBNull = false;
                this.columnExpenseCode.MaxLength = 16;
                this.columnLaborCollection.AllowDBNull = false;
                this.columnAppliedToSchedule.AllowDBNull = false;
                this.columnClockInMInute.AllowDBNull = false;
                this.columnClockOutMinute.AllowDBNull = false;
                this.columnClockinTime.AllowDBNull = false;
                this.columnClockOutTime.AllowDBNull = false;
                this.columnActiveTrans.AllowDBNull = false;
                this.columnOverRidePayRate.AllowDBNull = false;
                this.columnLaborRate.AllowDBNull = false;
                this.columnBurdenRate.AllowDBNull = false;
                this.columnDspClockInTime.AllowDBNull = false;
                this.columnDspClockInTime.MaxLength = 5;
                this.columnDspClockOutTime.AllowDBNull = false;
                this.columnDspClockOutTime.MaxLength = 5;
                this.columnResourceID.AllowDBNull = false;
                this.columnResourceID.MaxLength = 12;
                this.columnOpComplete.AllowDBNull = false;
                this.columnEarnedHrs.AllowDBNull = false;
                this.columnAddedOper.AllowDBNull = false;
                this.columnPostedToGL.AllowDBNull = false;
                this.columnFiscalYear.AllowDBNull = false;
                this.columnFiscalPeriod.AllowDBNull = false;
                this.columnJournalNum.AllowDBNull = false;
                this.columnGLTrans.AllowDBNull = false;
                this.columnJournalCode.AllowDBNull = false;
                this.columnJournalCode.MaxLength = 4;
                this.columnInspectionPending.AllowDBNull = false;
                this.columnCallNum.AllowDBNull = false;
                this.columnCallLine.AllowDBNull = false;
                this.columnServNum.AllowDBNull = false;
                this.columnServCode.AllowDBNull = false;
                this.columnServCode.MaxLength = 8;
                this.columnResReasonCode.AllowDBNull = false;
                this.columnResReasonCode.MaxLength = 8;
                this.columnWipPosted.AllowDBNull = false;
                this.columnDiscrepQty.AllowDBNull = false;
                this.columnDiscrpRsnCode.AllowDBNull = false;
                this.columnDiscrpRsnCode.MaxLength = 8;
                this.columnParentLaborDtlSeq.AllowDBNull = false;
                this.columnLaborEntryMethod.AllowDBNull = false;
                this.columnLaborEntryMethod.MaxLength = 2;
                this.columnFiscalYearSuffix.AllowDBNull = false;
                this.columnFiscalYearSuffix.MaxLength = 8;
                this.columnFiscalCalendarID.AllowDBNull = false;
                this.columnFiscalCalendarID.MaxLength = 12;
                this.columnBFLaborReq.AllowDBNull = false;
                this.columnABTUID.AllowDBNull = false;
                this.columnABTUID.MaxLength = 36;
                this.columnProjectID.AllowDBNull = false;
                this.columnProjectID.MaxLength = 25;
                this.columnPhaseID.AllowDBNull = false;
                this.columnPhaseID.MaxLength = 12;
                this.columnRoleCd.AllowDBNull = false;
                this.columnRoleCd.MaxLength = 20;
                this.columnTimeTypCd.AllowDBNull = false;
                this.columnTimeTypCd.MaxLength = 10;
                this.columnPBInvNum.AllowDBNull = false;
                this.columnPMUID.AllowDBNull = false;
                this.columnTaskSetID.AllowDBNull = false;
                this.columnTaskSetID.MaxLength = 8;
                this.columnClaimRef.AllowDBNull = false;
                this.columnClaimRef.MaxLength = 30;
                this.columnQuickEntryCode.AllowDBNull = false;
                this.columnQuickEntryCode.MaxLength = 8;
                this.columnTimeStatus.AllowDBNull = false;
                this.columnTimeStatus.MaxLength = 2;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 75;
                this.columnCreateTime.AllowDBNull = false;
                this.columnChangedBy.AllowDBNull = false;
                this.columnChangedBy.MaxLength = 75;
                this.columnChangeTime.AllowDBNull = false;
                this.columnActiveTaskID.AllowDBNull = false;
                this.columnActiveTaskID.MaxLength = 8;
                this.columnLastTaskID.AllowDBNull = false;
                this.columnLastTaskID.MaxLength = 8;
                this.columnCreatedViaTEWeekView.AllowDBNull = false;
                this.columnCurrentWFStageID.AllowDBNull = false;
                this.columnCurrentWFStageID.MaxLength = 8;
                this.columnWFGroupID.AllowDBNull = false;
                this.columnWFGroupID.MaxLength = 8;
                this.columnWFComplete.AllowDBNull = false;
                this.columnApprovalRequired.AllowDBNull = false;
                this.columnSubmittedBy.AllowDBNull = false;
                this.columnSubmittedBy.MaxLength = 75;
                this.columnPBRateFrom.AllowDBNull = false;
                this.columnPBRateFrom.MaxLength = 4;
                this.columnPBCurrencyCode.AllowDBNull = false;
                this.columnPBCurrencyCode.MaxLength = 4;
                this.columnPBHours.AllowDBNull = false;
                this.columnPBChargeRate.AllowDBNull = false;
                this.columnPBChargeAmt.AllowDBNull = false;
                this.columnDocPBChargeRate.AllowDBNull = false;
                this.columnRpt1PBChargeRate.AllowDBNull = false;
                this.columnRpt2PBChargeRate.AllowDBNull = false;
                this.columnRpt3PBChargeRate.AllowDBNull = false;
                this.columnDocPBChargeAmt.AllowDBNull = false;
                this.columnRpt1PBChargeAmt.AllowDBNull = false;
                this.columnRpt2PBChargeAmt.AllowDBNull = false;
                this.columnRpt3PBChargeAmt.AllowDBNull = false;
                this.columnShift.AllowDBNull = false;
                this.columnActID.AllowDBNull = false;
                this.columnDtailID.AllowDBNull = false;
                this.columnProjProcessed.AllowDBNull = false;
                this.columnAsOfSeq.AllowDBNull = false;
                this.columnJDFInputFiles.AllowDBNull = false;
                this.columnJDFInputFiles.MaxLength = 2147483647;
                this.columnJDFNumberOfPages.AllowDBNull = false;
                this.columnJDFNumberOfPages.MaxLength = 100;
                this.columnBatchWasSaved.AllowDBNull = false;
                this.columnBatchWasSaved.MaxLength = 100;
                this.columnAssignToBatch.AllowDBNull = false;
                this.columnBatchComplete.AllowDBNull = false;
                this.columnBatchRequestMove.AllowDBNull = false;
                this.columnBatchPrint.AllowDBNull = false;
                this.columnBatchLaborHrs.AllowDBNull = false;
                this.columnBatchPctOfTotHrs.AllowDBNull = false;
                this.columnBatchQty.AllowDBNull = false;
                this.columnBatchTotalExpectedHrs.AllowDBNull = false;
                this.columnJDFOpCompleted.AllowDBNull = false;
                this.columnJDFOpCompleted.MaxLength = 50;
                this.columnSysRevID.ReadOnly = true;
                this.columnSysRowID.AllowDBNull = false;
                this.columnDowntime.AllowDBNull = false;
                this.columnRefJobNum.AllowDBNull = false;
                this.columnRefJobNum.MaxLength = 14;
                this.columnRefAssemblySeq.AllowDBNull = false;
                this.columnRefOprSeq.AllowDBNull = false;
                this.columnImported.AllowDBNull = false;
                this.columnTimeAutoSubmit.AllowDBNull = false;
                this.columnBatchMode.AllowDBNull = false;
                this.columnBillServiceRate.AllowDBNull = false;
                this.columnHCMPayHours.AllowDBNull = false;
                this.columnEpicorFSA.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LaborDtlRow NewLaborDtlRow() {
                return ((LaborDtlRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LaborDtlRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LaborDtlRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LaborDtlRowChanged != null)) {
                    this.LaborDtlRowChanged(this, new LaborDtlRowChangeEvent(((LaborDtlRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LaborDtlRowChanging != null)) {
                    this.LaborDtlRowChanging(this, new LaborDtlRowChangeEvent(((LaborDtlRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LaborDtlRowDeleted != null)) {
                    this.LaborDtlRowDeleted(this, new LaborDtlRowChangeEvent(((LaborDtlRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LaborDtlRowDeleting != null)) {
                    this.LaborDtlRowDeleting(this, new LaborDtlRowChangeEvent(((LaborDtlRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveLaborDtlRow(LaborDtlRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds ds = new ds();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LaborDtlDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LaborHedRow : global::System.Data.DataRow {
            
            private LaborHedDataTable tableLaborHed;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal LaborHedRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLaborHed = ((LaborHedDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Company {
                get {
                    return ((string)(this[this.tableLaborHed.CompanyColumn]));
                }
                set {
                    this[this.tableLaborHed.CompanyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EmployeeNum {
                get {
                    return ((string)(this[this.tableLaborHed.EmployeeNumColumn]));
                }
                set {
                    this[this.tableLaborHed.EmployeeNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int LaborHedSeq {
                get {
                    return ((int)(this[this.tableLaborHed.LaborHedSeqColumn]));
                }
                set {
                    this[this.tableLaborHed.LaborHedSeqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PayrollDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLaborHed.PayrollDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LaborHed”中列“PayrollDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLaborHed.PayrollDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Shift {
                get {
                    return ((int)(this[this.tableLaborHed.ShiftColumn]));
                }
                set {
                    this[this.tableLaborHed.ShiftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ClockInDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLaborHed.ClockInDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LaborHed”中列“ClockInDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLaborHed.ClockInDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ClockInTime {
                get {
                    return ((decimal)(this[this.tableLaborHed.ClockInTimeColumn]));
                }
                set {
                    this[this.tableLaborHed.ClockInTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DspClockInTime {
                get {
                    return ((string)(this[this.tableLaborHed.DspClockInTimeColumn]));
                }
                set {
                    this[this.tableLaborHed.DspClockInTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ActualClockInTime {
                get {
                    return ((decimal)(this[this.tableLaborHed.ActualClockInTimeColumn]));
                }
                set {
                    this[this.tableLaborHed.ActualClockInTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ActualClockinDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLaborHed.ActualClockinDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LaborHed”中列“ActualClockinDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLaborHed.ActualClockinDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LunchStatus {
                get {
                    return ((string)(this[this.tableLaborHed.LunchStatusColumn]));
                }
                set {
                    this[this.tableLaborHed.LunchStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ActLunchOutTime {
                get {
                    return ((decimal)(this[this.tableLaborHed.ActLunchOutTimeColumn]));
                }
                set {
                    this[this.tableLaborHed.ActLunchOutTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal LunchOutTime {
                get {
                    return ((decimal)(this[this.tableLaborHed.LunchOutTimeColumn]));
                }
                set {
                    this[this.tableLaborHed.LunchOutTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ActLunchInTime {
                get {
                    return ((decimal)(this[this.tableLaborHed.ActLunchInTimeColumn]));
                }
                set {
                    this[this.tableLaborHed.ActLunchInTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal LunchInTime {
                get {
                    return ((decimal)(this[this.tableLaborHed.LunchInTimeColumn]));
                }
                set {
                    this[this.tableLaborHed.LunchInTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ClockOutTime {
                get {
                    return ((decimal)(this[this.tableLaborHed.ClockOutTimeColumn]));
                }
                set {
                    this[this.tableLaborHed.ClockOutTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DspClockOutTime {
                get {
                    return ((string)(this[this.tableLaborHed.DspClockOutTimeColumn]));
                }
                set {
                    this[this.tableLaborHed.DspClockOutTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ActualClockOutTime {
                get {
                    return ((decimal)(this[this.tableLaborHed.ActualClockOutTimeColumn]));
                }
                set {
                    this[this.tableLaborHed.ActualClockOutTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PayHours {
                get {
                    return ((decimal)(this[this.tableLaborHed.PayHoursColumn]));
                }
                set {
                    this[this.tableLaborHed.PayHoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool FeedPayroll {
                get {
                    return ((bool)(this[this.tableLaborHed.FeedPayrollColumn]));
                }
                set {
                    this[this.tableLaborHed.FeedPayrollColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool TransferredToPayroll {
                get {
                    return ((bool)(this[this.tableLaborHed.TransferredToPayrollColumn]));
                }
                set {
                    this[this.tableLaborHed.TransferredToPayrollColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool LaborCollection {
                get {
                    return ((bool)(this[this.tableLaborHed.LaborCollectionColumn]));
                }
                set {
                    this[this.tableLaborHed.LaborCollectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TranSet {
                get {
                    return ((string)(this[this.tableLaborHed.TranSetColumn]));
                }
                set {
                    this[this.tableLaborHed.TranSetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ActiveTrans {
                get {
                    return ((bool)(this[this.tableLaborHed.ActiveTransColumn]));
                }
                set {
                    this[this.tableLaborHed.ActiveTransColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ChkLink {
                get {
                    return ((string)(this[this.tableLaborHed.ChkLinkColumn]));
                }
                set {
                    this[this.tableLaborHed.ChkLinkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BatchTotalHrsDisp {
                get {
                    return ((string)(this[this.tableLaborHed.BatchTotalHrsDispColumn]));
                }
                set {
                    this[this.tableLaborHed.BatchTotalHrsDispColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BatchHrsRemainDisp {
                get {
                    return ((string)(this[this.tableLaborHed.BatchHrsRemainDispColumn]));
                }
                set {
                    this[this.tableLaborHed.BatchHrsRemainDispColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BatchHrsRemainPctDisp {
                get {
                    return ((string)(this[this.tableLaborHed.BatchHrsRemainPctDispColumn]));
                }
                set {
                    this[this.tableLaborHed.BatchHrsRemainPctDispColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BatchSplitHrsMethod {
                get {
                    return ((string)(this[this.tableLaborHed.BatchSplitHrsMethodColumn]));
                }
                set {
                    this[this.tableLaborHed.BatchSplitHrsMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool BatchAssignTo {
                get {
                    return ((bool)(this[this.tableLaborHed.BatchAssignToColumn]));
                }
                set {
                    this[this.tableLaborHed.BatchAssignToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool BatchComplete {
                get {
                    return ((bool)(this[this.tableLaborHed.BatchCompleteColumn]));
                }
                set {
                    this[this.tableLaborHed.BatchCompleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime BatchStartHrs {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLaborHed.BatchStartHrsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LaborHed”中列“BatchStartHrs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLaborHed.BatchStartHrsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime BatchEndHrs {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLaborHed.BatchEndHrsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LaborHed”中列“BatchEndHrs”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLaborHed.BatchEndHrsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal BatchTotalHrs {
                get {
                    return ((decimal)(this[this.tableLaborHed.BatchTotalHrsColumn]));
                }
                set {
                    this[this.tableLaborHed.BatchTotalHrsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal BatchHrsRemain {
                get {
                    return ((decimal)(this[this.tableLaborHed.BatchHrsRemainColumn]));
                }
                set {
                    this[this.tableLaborHed.BatchHrsRemainColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal BatchHrsRemainPct {
                get {
                    return ((decimal)(this[this.tableLaborHed.BatchHrsRemainPctColumn]));
                }
                set {
                    this[this.tableLaborHed.BatchHrsRemainPctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] SysRevID {
                get {
                    try {
                        return ((byte[])(this[this.tableLaborHed.SysRevIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LaborHed”中列“SysRevID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLaborHed.SysRevIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.Guid SysRowID {
                get {
                    return ((global::System.Guid)(this[this.tableLaborHed.SysRowIDColumn]));
                }
                set {
                    this[this.tableLaborHed.SysRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Imported {
                get {
                    return ((bool)(this[this.tableLaborHed.ImportedColumn]));
                }
                set {
                    this[this.tableLaborHed.ImportedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ImportDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLaborHed.ImportDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LaborHed”中列“ImportDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLaborHed.ImportDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool BatchMode {
                get {
                    return ((bool)(this[this.tableLaborHed.BatchModeColumn]));
                }
                set {
                    this[this.tableLaborHed.BatchModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string HCMPayHoursCalcType {
                get {
                    return ((string)(this[this.tableLaborHed.HCMPayHoursCalcTypeColumn]));
                }
                set {
                    this[this.tableLaborHed.HCMPayHoursCalcTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPayrollDateNull() {
                return this.IsNull(this.tableLaborHed.PayrollDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPayrollDateNull() {
                this[this.tableLaborHed.PayrollDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsClockInDateNull() {
                return this.IsNull(this.tableLaborHed.ClockInDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetClockInDateNull() {
                this[this.tableLaborHed.ClockInDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsActualClockinDateNull() {
                return this.IsNull(this.tableLaborHed.ActualClockinDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetActualClockinDateNull() {
                this[this.tableLaborHed.ActualClockinDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBatchStartHrsNull() {
                return this.IsNull(this.tableLaborHed.BatchStartHrsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBatchStartHrsNull() {
                this[this.tableLaborHed.BatchStartHrsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBatchEndHrsNull() {
                return this.IsNull(this.tableLaborHed.BatchEndHrsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBatchEndHrsNull() {
                this[this.tableLaborHed.BatchEndHrsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSysRevIDNull() {
                return this.IsNull(this.tableLaborHed.SysRevIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSysRevIDNull() {
                this[this.tableLaborHed.SysRevIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsImportDateNull() {
                return this.IsNull(this.tableLaborHed.ImportDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetImportDateNull() {
                this[this.tableLaborHed.ImportDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LaborDtlRow : global::System.Data.DataRow {
            
            private LaborDtlDataTable tableLaborDtl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal LaborDtlRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLaborDtl = ((LaborDtlDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Company {
                get {
                    return ((string)(this[this.tableLaborDtl.CompanyColumn]));
                }
                set {
                    this[this.tableLaborDtl.CompanyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EmployeeNum {
                get {
                    return ((string)(this[this.tableLaborDtl.EmployeeNumColumn]));
                }
                set {
                    this[this.tableLaborDtl.EmployeeNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int LaborHedSeq {
                get {
                    return ((int)(this[this.tableLaborDtl.LaborHedSeqColumn]));
                }
                set {
                    this[this.tableLaborDtl.LaborHedSeqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int LaborDtlSeq {
                get {
                    return ((int)(this[this.tableLaborDtl.LaborDtlSeqColumn]));
                }
                set {
                    this[this.tableLaborDtl.LaborDtlSeqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LaborType {
                get {
                    return ((string)(this[this.tableLaborDtl.LaborTypeColumn]));
                }
                set {
                    this[this.tableLaborDtl.LaborTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LaborTypePseudo {
                get {
                    return ((string)(this[this.tableLaborDtl.LaborTypePseudoColumn]));
                }
                set {
                    this[this.tableLaborDtl.LaborTypePseudoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ReWork {
                get {
                    return ((bool)(this[this.tableLaborDtl.ReWorkColumn]));
                }
                set {
                    this[this.tableLaborDtl.ReWorkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ReworkReasonCode {
                get {
                    return ((string)(this[this.tableLaborDtl.ReworkReasonCodeColumn]));
                }
                set {
                    this[this.tableLaborDtl.ReworkReasonCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string JobNum {
                get {
                    return ((string)(this[this.tableLaborDtl.JobNumColumn]));
                }
                set {
                    this[this.tableLaborDtl.JobNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int AssemblySeq {
                get {
                    return ((int)(this[this.tableLaborDtl.AssemblySeqColumn]));
                }
                set {
                    this[this.tableLaborDtl.AssemblySeqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int OprSeq {
                get {
                    return ((int)(this[this.tableLaborDtl.OprSeqColumn]));
                }
                set {
                    this[this.tableLaborDtl.OprSeqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string JCDept {
                get {
                    return ((string)(this[this.tableLaborDtl.JCDeptColumn]));
                }
                set {
                    this[this.tableLaborDtl.JCDeptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ResourceGrpID {
                get {
                    return ((string)(this[this.tableLaborDtl.ResourceGrpIDColumn]));
                }
                set {
                    this[this.tableLaborDtl.ResourceGrpIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OpCode {
                get {
                    return ((string)(this[this.tableLaborDtl.OpCodeColumn]));
                }
                set {
                    this[this.tableLaborDtl.OpCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal LaborHrs {
                get {
                    return ((decimal)(this[this.tableLaborDtl.LaborHrsColumn]));
                }
                set {
                    this[this.tableLaborDtl.LaborHrsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal BurdenHrs {
                get {
                    return ((decimal)(this[this.tableLaborDtl.BurdenHrsColumn]));
                }
                set {
                    this[this.tableLaborDtl.BurdenHrsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal LaborQty {
                get {
                    return ((decimal)(this[this.tableLaborDtl.LaborQtyColumn]));
                }
                set {
                    this[this.tableLaborDtl.LaborQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ScrapQty {
                get {
                    return ((decimal)(this[this.tableLaborDtl.ScrapQtyColumn]));
                }
                set {
                    this[this.tableLaborDtl.ScrapQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ScrapReasonCode {
                get {
                    return ((string)(this[this.tableLaborDtl.ScrapReasonCodeColumn]));
                }
                set {
                    this[this.tableLaborDtl.ScrapReasonCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SetupPctComplete {
                get {
                    return ((int)(this[this.tableLaborDtl.SetupPctCompleteColumn]));
                }
                set {
                    this[this.tableLaborDtl.SetupPctCompleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Complete {
                get {
                    return ((bool)(this[this.tableLaborDtl.CompleteColumn]));
                }
                set {
                    this[this.tableLaborDtl.CompleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string IndirectCode {
                get {
                    return ((string)(this[this.tableLaborDtl.IndirectCodeColumn]));
                }
                set {
                    this[this.tableLaborDtl.IndirectCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LaborNote {
                get {
                    return ((string)(this[this.tableLaborDtl.LaborNoteColumn]));
                }
                set {
                    this[this.tableLaborDtl.LaborNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ExpenseCode {
                get {
                    return ((string)(this[this.tableLaborDtl.ExpenseCodeColumn]));
                }
                set {
                    this[this.tableLaborDtl.ExpenseCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool LaborCollection {
                get {
                    return ((bool)(this[this.tableLaborDtl.LaborCollectionColumn]));
                }
                set {
                    this[this.tableLaborDtl.LaborCollectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool AppliedToSchedule {
                get {
                    return ((bool)(this[this.tableLaborDtl.AppliedToScheduleColumn]));
                }
                set {
                    this[this.tableLaborDtl.AppliedToScheduleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ClockInMInute {
                get {
                    return ((int)(this[this.tableLaborDtl.ClockInMInuteColumn]));
                }
                set {
                    this[this.tableLaborDtl.ClockInMInuteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ClockOutMinute {
                get {
                    return ((int)(this[this.tableLaborDtl.ClockOutMinuteColumn]));
                }
                set {
                    this[this.tableLaborDtl.ClockOutMinuteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ClockInDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLaborDtl.ClockInDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LaborDtl”中列“ClockInDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLaborDtl.ClockInDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ClockinTime {
                get {
                    return ((decimal)(this[this.tableLaborDtl.ClockinTimeColumn]));
                }
                set {
                    this[this.tableLaborDtl.ClockinTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ClockOutTime {
                get {
                    return ((decimal)(this[this.tableLaborDtl.ClockOutTimeColumn]));
                }
                set {
                    this[this.tableLaborDtl.ClockOutTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ActiveTrans {
                get {
                    return ((bool)(this[this.tableLaborDtl.ActiveTransColumn]));
                }
                set {
                    this[this.tableLaborDtl.ActiveTransColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal OverRidePayRate {
                get {
                    return ((decimal)(this[this.tableLaborDtl.OverRidePayRateColumn]));
                }
                set {
                    this[this.tableLaborDtl.OverRidePayRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal LaborRate {
                get {
                    return ((decimal)(this[this.tableLaborDtl.LaborRateColumn]));
                }
                set {
                    this[this.tableLaborDtl.LaborRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal BurdenRate {
                get {
                    return ((decimal)(this[this.tableLaborDtl.BurdenRateColumn]));
                }
                set {
                    this[this.tableLaborDtl.BurdenRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DspClockInTime {
                get {
                    return ((string)(this[this.tableLaborDtl.DspClockInTimeColumn]));
                }
                set {
                    this[this.tableLaborDtl.DspClockInTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DspClockOutTime {
                get {
                    return ((string)(this[this.tableLaborDtl.DspClockOutTimeColumn]));
                }
                set {
                    this[this.tableLaborDtl.DspClockOutTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ResourceID {
                get {
                    return ((string)(this[this.tableLaborDtl.ResourceIDColumn]));
                }
                set {
                    this[this.tableLaborDtl.ResourceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool OpComplete {
                get {
                    return ((bool)(this[this.tableLaborDtl.OpCompleteColumn]));
                }
                set {
                    this[this.tableLaborDtl.OpCompleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EarnedHrs {
                get {
                    return ((decimal)(this[this.tableLaborDtl.EarnedHrsColumn]));
                }
                set {
                    this[this.tableLaborDtl.EarnedHrsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool AddedOper {
                get {
                    return ((bool)(this[this.tableLaborDtl.AddedOperColumn]));
                }
                set {
                    this[this.tableLaborDtl.AddedOperColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PayrollDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLaborDtl.PayrollDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LaborDtl”中列“PayrollDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLaborDtl.PayrollDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool PostedToGL {
                get {
                    return ((bool)(this[this.tableLaborDtl.PostedToGLColumn]));
                }
                set {
                    this[this.tableLaborDtl.PostedToGLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int FiscalYear {
                get {
                    return ((int)(this[this.tableLaborDtl.FiscalYearColumn]));
                }
                set {
                    this[this.tableLaborDtl.FiscalYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int FiscalPeriod {
                get {
                    return ((int)(this[this.tableLaborDtl.FiscalPeriodColumn]));
                }
                set {
                    this[this.tableLaborDtl.FiscalPeriodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int JournalNum {
                get {
                    return ((int)(this[this.tableLaborDtl.JournalNumColumn]));
                }
                set {
                    this[this.tableLaborDtl.JournalNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool GLTrans {
                get {
                    return ((bool)(this[this.tableLaborDtl.GLTransColumn]));
                }
                set {
                    this[this.tableLaborDtl.GLTransColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string JournalCode {
                get {
                    return ((string)(this[this.tableLaborDtl.JournalCodeColumn]));
                }
                set {
                    this[this.tableLaborDtl.JournalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool InspectionPending {
                get {
                    return ((bool)(this[this.tableLaborDtl.InspectionPendingColumn]));
                }
                set {
                    this[this.tableLaborDtl.InspectionPendingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int CallNum {
                get {
                    return ((int)(this[this.tableLaborDtl.CallNumColumn]));
                }
                set {
                    this[this.tableLaborDtl.CallNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int CallLine {
                get {
                    return ((int)(this[this.tableLaborDtl.CallLineColumn]));
                }
                set {
                    this[this.tableLaborDtl.CallLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ServNum {
                get {
                    return ((int)(this[this.tableLaborDtl.ServNumColumn]));
                }
                set {
                    this[this.tableLaborDtl.ServNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ServCode {
                get {
                    return ((string)(this[this.tableLaborDtl.ServCodeColumn]));
                }
                set {
                    this[this.tableLaborDtl.ServCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ResReasonCode {
                get {
                    return ((string)(this[this.tableLaborDtl.ResReasonCodeColumn]));
                }
                set {
                    this[this.tableLaborDtl.ResReasonCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool WipPosted {
                get {
                    return ((bool)(this[this.tableLaborDtl.WipPostedColumn]));
                }
                set {
                    this[this.tableLaborDtl.WipPostedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal DiscrepQty {
                get {
                    return ((decimal)(this[this.tableLaborDtl.DiscrepQtyColumn]));
                }
                set {
                    this[this.tableLaborDtl.DiscrepQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DiscrpRsnCode {
                get {
                    return ((string)(this[this.tableLaborDtl.DiscrpRsnCodeColumn]));
                }
                set {
                    this[this.tableLaborDtl.DiscrpRsnCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ParentLaborDtlSeq {
                get {
                    return ((int)(this[this.tableLaborDtl.ParentLaborDtlSeqColumn]));
                }
                set {
                    this[this.tableLaborDtl.ParentLaborDtlSeqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LaborEntryMethod {
                get {
                    return ((string)(this[this.tableLaborDtl.LaborEntryMethodColumn]));
                }
                set {
                    this[this.tableLaborDtl.LaborEntryMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FiscalYearSuffix {
                get {
                    return ((string)(this[this.tableLaborDtl.FiscalYearSuffixColumn]));
                }
                set {
                    this[this.tableLaborDtl.FiscalYearSuffixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FiscalCalendarID {
                get {
                    return ((string)(this[this.tableLaborDtl.FiscalCalendarIDColumn]));
                }
                set {
                    this[this.tableLaborDtl.FiscalCalendarIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool BFLaborReq {
                get {
                    return ((bool)(this[this.tableLaborDtl.BFLaborReqColumn]));
                }
                set {
                    this[this.tableLaborDtl.BFLaborReqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ABTUID {
                get {
                    return ((string)(this[this.tableLaborDtl.ABTUIDColumn]));
                }
                set {
                    this[this.tableLaborDtl.ABTUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ProjectID {
                get {
                    return ((string)(this[this.tableLaborDtl.ProjectIDColumn]));
                }
                set {
                    this[this.tableLaborDtl.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PhaseID {
                get {
                    return ((string)(this[this.tableLaborDtl.PhaseIDColumn]));
                }
                set {
                    this[this.tableLaborDtl.PhaseIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RoleCd {
                get {
                    return ((string)(this[this.tableLaborDtl.RoleCdColumn]));
                }
                set {
                    this[this.tableLaborDtl.RoleCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TimeTypCd {
                get {
                    return ((string)(this[this.tableLaborDtl.TimeTypCdColumn]));
                }
                set {
                    this[this.tableLaborDtl.TimeTypCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int PBInvNum {
                get {
                    return ((int)(this[this.tableLaborDtl.PBInvNumColumn]));
                }
                set {
                    this[this.tableLaborDtl.PBInvNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int PMUID {
                get {
                    return ((int)(this[this.tableLaborDtl.PMUIDColumn]));
                }
                set {
                    this[this.tableLaborDtl.PMUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TaskSetID {
                get {
                    return ((string)(this[this.tableLaborDtl.TaskSetIDColumn]));
                }
                set {
                    this[this.tableLaborDtl.TaskSetIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ApprovedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLaborDtl.ApprovedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LaborDtl”中列“ApprovedDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLaborDtl.ApprovedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ClaimRef {
                get {
                    return ((string)(this[this.tableLaborDtl.ClaimRefColumn]));
                }
                set {
                    this[this.tableLaborDtl.ClaimRefColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string QuickEntryCode {
                get {
                    return ((string)(this[this.tableLaborDtl.QuickEntryCodeColumn]));
                }
                set {
                    this[this.tableLaborDtl.QuickEntryCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TimeStatus {
                get {
                    return ((string)(this[this.tableLaborDtl.TimeStatusColumn]));
                }
                set {
                    this[this.tableLaborDtl.TimeStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableLaborDtl.CreatedByColumn]));
                }
                set {
                    this[this.tableLaborDtl.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime CreateDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLaborDtl.CreateDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LaborDtl”中列“CreateDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLaborDtl.CreateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int CreateTime {
                get {
                    return ((int)(this[this.tableLaborDtl.CreateTimeColumn]));
                }
                set {
                    this[this.tableLaborDtl.CreateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ChangedBy {
                get {
                    return ((string)(this[this.tableLaborDtl.ChangedByColumn]));
                }
                set {
                    this[this.tableLaborDtl.ChangedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ChangeDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLaborDtl.ChangeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LaborDtl”中列“ChangeDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLaborDtl.ChangeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ChangeTime {
                get {
                    return ((int)(this[this.tableLaborDtl.ChangeTimeColumn]));
                }
                set {
                    this[this.tableLaborDtl.ChangeTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ActiveTaskID {
                get {
                    return ((string)(this[this.tableLaborDtl.ActiveTaskIDColumn]));
                }
                set {
                    this[this.tableLaborDtl.ActiveTaskIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LastTaskID {
                get {
                    return ((string)(this[this.tableLaborDtl.LastTaskIDColumn]));
                }
                set {
                    this[this.tableLaborDtl.LastTaskIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool CreatedViaTEWeekView {
                get {
                    return ((bool)(this[this.tableLaborDtl.CreatedViaTEWeekViewColumn]));
                }
                set {
                    this[this.tableLaborDtl.CreatedViaTEWeekViewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CurrentWFStageID {
                get {
                    return ((string)(this[this.tableLaborDtl.CurrentWFStageIDColumn]));
                }
                set {
                    this[this.tableLaborDtl.CurrentWFStageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string WFGroupID {
                get {
                    return ((string)(this[this.tableLaborDtl.WFGroupIDColumn]));
                }
                set {
                    this[this.tableLaborDtl.WFGroupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool WFComplete {
                get {
                    return ((bool)(this[this.tableLaborDtl.WFCompleteColumn]));
                }
                set {
                    this[this.tableLaborDtl.WFCompleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ApprovalRequired {
                get {
                    return ((bool)(this[this.tableLaborDtl.ApprovalRequiredColumn]));
                }
                set {
                    this[this.tableLaborDtl.ApprovalRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SubmittedBy {
                get {
                    return ((string)(this[this.tableLaborDtl.SubmittedByColumn]));
                }
                set {
                    this[this.tableLaborDtl.SubmittedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PBRateFrom {
                get {
                    return ((string)(this[this.tableLaborDtl.PBRateFromColumn]));
                }
                set {
                    this[this.tableLaborDtl.PBRateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PBCurrencyCode {
                get {
                    return ((string)(this[this.tableLaborDtl.PBCurrencyCodeColumn]));
                }
                set {
                    this[this.tableLaborDtl.PBCurrencyCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PBHours {
                get {
                    return ((decimal)(this[this.tableLaborDtl.PBHoursColumn]));
                }
                set {
                    this[this.tableLaborDtl.PBHoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PBChargeRate {
                get {
                    return ((decimal)(this[this.tableLaborDtl.PBChargeRateColumn]));
                }
                set {
                    this[this.tableLaborDtl.PBChargeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PBChargeAmt {
                get {
                    return ((decimal)(this[this.tableLaborDtl.PBChargeAmtColumn]));
                }
                set {
                    this[this.tableLaborDtl.PBChargeAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal DocPBChargeRate {
                get {
                    return ((decimal)(this[this.tableLaborDtl.DocPBChargeRateColumn]));
                }
                set {
                    this[this.tableLaborDtl.DocPBChargeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Rpt1PBChargeRate {
                get {
                    return ((decimal)(this[this.tableLaborDtl.Rpt1PBChargeRateColumn]));
                }
                set {
                    this[this.tableLaborDtl.Rpt1PBChargeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Rpt2PBChargeRate {
                get {
                    return ((decimal)(this[this.tableLaborDtl.Rpt2PBChargeRateColumn]));
                }
                set {
                    this[this.tableLaborDtl.Rpt2PBChargeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Rpt3PBChargeRate {
                get {
                    return ((decimal)(this[this.tableLaborDtl.Rpt3PBChargeRateColumn]));
                }
                set {
                    this[this.tableLaborDtl.Rpt3PBChargeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal DocPBChargeAmt {
                get {
                    return ((decimal)(this[this.tableLaborDtl.DocPBChargeAmtColumn]));
                }
                set {
                    this[this.tableLaborDtl.DocPBChargeAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Rpt1PBChargeAmt {
                get {
                    return ((decimal)(this[this.tableLaborDtl.Rpt1PBChargeAmtColumn]));
                }
                set {
                    this[this.tableLaborDtl.Rpt1PBChargeAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Rpt2PBChargeAmt {
                get {
                    return ((decimal)(this[this.tableLaborDtl.Rpt2PBChargeAmtColumn]));
                }
                set {
                    this[this.tableLaborDtl.Rpt2PBChargeAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Rpt3PBChargeAmt {
                get {
                    return ((decimal)(this[this.tableLaborDtl.Rpt3PBChargeAmtColumn]));
                }
                set {
                    this[this.tableLaborDtl.Rpt3PBChargeAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Shift {
                get {
                    return ((int)(this[this.tableLaborDtl.ShiftColumn]));
                }
                set {
                    this[this.tableLaborDtl.ShiftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ActID {
                get {
                    return ((int)(this[this.tableLaborDtl.ActIDColumn]));
                }
                set {
                    this[this.tableLaborDtl.ActIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int DtailID {
                get {
                    return ((int)(this[this.tableLaborDtl.DtailIDColumn]));
                }
                set {
                    this[this.tableLaborDtl.DtailIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ProjProcessed {
                get {
                    return ((bool)(this[this.tableLaborDtl.ProjProcessedColumn]));
                }
                set {
                    this[this.tableLaborDtl.ProjProcessedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime AsOfDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLaborDtl.AsOfDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LaborDtl”中列“AsOfDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLaborDtl.AsOfDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int AsOfSeq {
                get {
                    return ((int)(this[this.tableLaborDtl.AsOfSeqColumn]));
                }
                set {
                    this[this.tableLaborDtl.AsOfSeqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string JDFInputFiles {
                get {
                    return ((string)(this[this.tableLaborDtl.JDFInputFilesColumn]));
                }
                set {
                    this[this.tableLaborDtl.JDFInputFilesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string JDFNumberOfPages {
                get {
                    return ((string)(this[this.tableLaborDtl.JDFNumberOfPagesColumn]));
                }
                set {
                    this[this.tableLaborDtl.JDFNumberOfPagesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BatchWasSaved {
                get {
                    return ((string)(this[this.tableLaborDtl.BatchWasSavedColumn]));
                }
                set {
                    this[this.tableLaborDtl.BatchWasSavedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool AssignToBatch {
                get {
                    return ((bool)(this[this.tableLaborDtl.AssignToBatchColumn]));
                }
                set {
                    this[this.tableLaborDtl.AssignToBatchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool BatchComplete {
                get {
                    return ((bool)(this[this.tableLaborDtl.BatchCompleteColumn]));
                }
                set {
                    this[this.tableLaborDtl.BatchCompleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool BatchRequestMove {
                get {
                    return ((bool)(this[this.tableLaborDtl.BatchRequestMoveColumn]));
                }
                set {
                    this[this.tableLaborDtl.BatchRequestMoveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool BatchPrint {
                get {
                    return ((bool)(this[this.tableLaborDtl.BatchPrintColumn]));
                }
                set {
                    this[this.tableLaborDtl.BatchPrintColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal BatchLaborHrs {
                get {
                    return ((decimal)(this[this.tableLaborDtl.BatchLaborHrsColumn]));
                }
                set {
                    this[this.tableLaborDtl.BatchLaborHrsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal BatchPctOfTotHrs {
                get {
                    return ((decimal)(this[this.tableLaborDtl.BatchPctOfTotHrsColumn]));
                }
                set {
                    this[this.tableLaborDtl.BatchPctOfTotHrsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal BatchQty {
                get {
                    return ((decimal)(this[this.tableLaborDtl.BatchQtyColumn]));
                }
                set {
                    this[this.tableLaborDtl.BatchQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal BatchTotalExpectedHrs {
                get {
                    return ((decimal)(this[this.tableLaborDtl.BatchTotalExpectedHrsColumn]));
                }
                set {
                    this[this.tableLaborDtl.BatchTotalExpectedHrsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string JDFOpCompleted {
                get {
                    return ((string)(this[this.tableLaborDtl.JDFOpCompletedColumn]));
                }
                set {
                    this[this.tableLaborDtl.JDFOpCompletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] SysRevID {
                get {
                    try {
                        return ((byte[])(this[this.tableLaborDtl.SysRevIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LaborDtl”中列“SysRevID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLaborDtl.SysRevIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.Guid SysRowID {
                get {
                    return ((global::System.Guid)(this[this.tableLaborDtl.SysRowIDColumn]));
                }
                set {
                    this[this.tableLaborDtl.SysRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Downtime {
                get {
                    return ((bool)(this[this.tableLaborDtl.DowntimeColumn]));
                }
                set {
                    this[this.tableLaborDtl.DowntimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RefJobNum {
                get {
                    return ((string)(this[this.tableLaborDtl.RefJobNumColumn]));
                }
                set {
                    this[this.tableLaborDtl.RefJobNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int RefAssemblySeq {
                get {
                    return ((int)(this[this.tableLaborDtl.RefAssemblySeqColumn]));
                }
                set {
                    this[this.tableLaborDtl.RefAssemblySeqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int RefOprSeq {
                get {
                    return ((int)(this[this.tableLaborDtl.RefOprSeqColumn]));
                }
                set {
                    this[this.tableLaborDtl.RefOprSeqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Imported {
                get {
                    return ((bool)(this[this.tableLaborDtl.ImportedColumn]));
                }
                set {
                    this[this.tableLaborDtl.ImportedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ImportDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLaborDtl.ImportDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LaborDtl”中列“ImportDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLaborDtl.ImportDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool TimeAutoSubmit {
                get {
                    return ((bool)(this[this.tableLaborDtl.TimeAutoSubmitColumn]));
                }
                set {
                    this[this.tableLaborDtl.TimeAutoSubmitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool BatchMode {
                get {
                    return ((bool)(this[this.tableLaborDtl.BatchModeColumn]));
                }
                set {
                    this[this.tableLaborDtl.BatchModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal BillServiceRate {
                get {
                    return ((decimal)(this[this.tableLaborDtl.BillServiceRateColumn]));
                }
                set {
                    this[this.tableLaborDtl.BillServiceRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal HCMPayHours {
                get {
                    return ((decimal)(this[this.tableLaborDtl.HCMPayHoursColumn]));
                }
                set {
                    this[this.tableLaborDtl.HCMPayHoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool EpicorFSA {
                get {
                    return ((bool)(this[this.tableLaborDtl.EpicorFSAColumn]));
                }
                set {
                    this[this.tableLaborDtl.EpicorFSAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsClockInDateNull() {
                return this.IsNull(this.tableLaborDtl.ClockInDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetClockInDateNull() {
                this[this.tableLaborDtl.ClockInDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPayrollDateNull() {
                return this.IsNull(this.tableLaborDtl.PayrollDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPayrollDateNull() {
                this[this.tableLaborDtl.PayrollDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsApprovedDateNull() {
                return this.IsNull(this.tableLaborDtl.ApprovedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetApprovedDateNull() {
                this[this.tableLaborDtl.ApprovedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCreateDateNull() {
                return this.IsNull(this.tableLaborDtl.CreateDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCreateDateNull() {
                this[this.tableLaborDtl.CreateDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsChangeDateNull() {
                return this.IsNull(this.tableLaborDtl.ChangeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetChangeDateNull() {
                this[this.tableLaborDtl.ChangeDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAsOfDateNull() {
                return this.IsNull(this.tableLaborDtl.AsOfDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAsOfDateNull() {
                this[this.tableLaborDtl.AsOfDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSysRevIDNull() {
                return this.IsNull(this.tableLaborDtl.SysRevIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSysRevIDNull() {
                this[this.tableLaborDtl.SysRevIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsImportDateNull() {
                return this.IsNull(this.tableLaborDtl.ImportDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetImportDateNull() {
                this[this.tableLaborDtl.ImportDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class LaborHedRowChangeEvent : global::System.EventArgs {
            
            private LaborHedRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LaborHedRowChangeEvent(LaborHedRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LaborHedRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class LaborDtlRowChangeEvent : global::System.EventArgs {
            
            private LaborDtlRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LaborDtlRowChangeEvent(LaborDtlRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LaborDtlRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace WebApplication3.data.dsTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LaborHedTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public LaborHedTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LaborHed";
            tableMapping.ColumnMappings.Add("Company", "Company");
            tableMapping.ColumnMappings.Add("EmployeeNum", "EmployeeNum");
            tableMapping.ColumnMappings.Add("LaborHedSeq", "LaborHedSeq");
            tableMapping.ColumnMappings.Add("PayrollDate", "PayrollDate");
            tableMapping.ColumnMappings.Add("Shift", "Shift");
            tableMapping.ColumnMappings.Add("ClockInDate", "ClockInDate");
            tableMapping.ColumnMappings.Add("ClockInTime", "ClockInTime");
            tableMapping.ColumnMappings.Add("DspClockInTime", "DspClockInTime");
            tableMapping.ColumnMappings.Add("ActualClockInTime", "ActualClockInTime");
            tableMapping.ColumnMappings.Add("ActualClockinDate", "ActualClockinDate");
            tableMapping.ColumnMappings.Add("LunchStatus", "LunchStatus");
            tableMapping.ColumnMappings.Add("ActLunchOutTime", "ActLunchOutTime");
            tableMapping.ColumnMappings.Add("LunchOutTime", "LunchOutTime");
            tableMapping.ColumnMappings.Add("ActLunchInTime", "ActLunchInTime");
            tableMapping.ColumnMappings.Add("LunchInTime", "LunchInTime");
            tableMapping.ColumnMappings.Add("ClockOutTime", "ClockOutTime");
            tableMapping.ColumnMappings.Add("DspClockOutTime", "DspClockOutTime");
            tableMapping.ColumnMappings.Add("ActualClockOutTime", "ActualClockOutTime");
            tableMapping.ColumnMappings.Add("PayHours", "PayHours");
            tableMapping.ColumnMappings.Add("FeedPayroll", "FeedPayroll");
            tableMapping.ColumnMappings.Add("TransferredToPayroll", "TransferredToPayroll");
            tableMapping.ColumnMappings.Add("LaborCollection", "LaborCollection");
            tableMapping.ColumnMappings.Add("TranSet", "TranSet");
            tableMapping.ColumnMappings.Add("ActiveTrans", "ActiveTrans");
            tableMapping.ColumnMappings.Add("ChkLink", "ChkLink");
            tableMapping.ColumnMappings.Add("BatchTotalHrsDisp", "BatchTotalHrsDisp");
            tableMapping.ColumnMappings.Add("BatchHrsRemainDisp", "BatchHrsRemainDisp");
            tableMapping.ColumnMappings.Add("BatchHrsRemainPctDisp", "BatchHrsRemainPctDisp");
            tableMapping.ColumnMappings.Add("BatchSplitHrsMethod", "BatchSplitHrsMethod");
            tableMapping.ColumnMappings.Add("BatchAssignTo", "BatchAssignTo");
            tableMapping.ColumnMappings.Add("BatchComplete", "BatchComplete");
            tableMapping.ColumnMappings.Add("BatchStartHrs", "BatchStartHrs");
            tableMapping.ColumnMappings.Add("BatchEndHrs", "BatchEndHrs");
            tableMapping.ColumnMappings.Add("BatchTotalHrs", "BatchTotalHrs");
            tableMapping.ColumnMappings.Add("BatchHrsRemain", "BatchHrsRemain");
            tableMapping.ColumnMappings.Add("BatchHrsRemainPct", "BatchHrsRemainPct");
            tableMapping.ColumnMappings.Add("SysRevID", "SysRevID");
            tableMapping.ColumnMappings.Add("SysRowID", "SysRowID");
            tableMapping.ColumnMappings.Add("Imported", "Imported");
            tableMapping.ColumnMappings.Add("ImportDate", "ImportDate");
            tableMapping.ColumnMappings.Add("BatchMode", "BatchMode");
            tableMapping.ColumnMappings.Add("HCMPayHoursCalcType", "HCMPayHoursCalcType");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Erp].[LaborHed] WHERE (([Company] = @Original_Company) AND ([LaborHe" +
                "dSeq] = @Original_LaborHedSeq))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Company", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LaborHedSeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaborHedSeq", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Erp].[LaborHed] ([Company], [EmployeeNum], [LaborHedSeq], [PayrollDate], [Shift], [ClockInDate], [ClockInTime], [DspClockInTime], [ActualClockInTime], [ActualClockinDate], [LunchStatus], [ActLunchOutTime], [LunchOutTime], [ActLunchInTime], [LunchInTime], [ClockOutTime], [DspClockOutTime], [ActualClockOutTime], [PayHours], [FeedPayroll], [TransferredToPayroll], [LaborCollection], [TranSet], [ActiveTrans], [ChkLink], [BatchTotalHrsDisp], [BatchHrsRemainDisp], [BatchHrsRemainPctDisp], [BatchSplitHrsMethod], [BatchAssignTo], [BatchComplete], [BatchStartHrs], [BatchEndHrs], [BatchTotalHrs], [BatchHrsRemain], [BatchHrsRemainPct], [SysRowID], [Imported], [ImportDate], [BatchMode], [HCMPayHoursCalcType]) VALUES (@Company, @EmployeeNum, @LaborHedSeq, @PayrollDate, @Shift, @ClockInDate, @ClockInTime, @DspClockInTime, @ActualClockInTime, @ActualClockinDate, @LunchStatus, @ActLunchOutTime, @LunchOutTime, @ActLunchInTime, @LunchInTime, @ClockOutTime, @DspClockOutTime, @ActualClockOutTime, @PayHours, @FeedPayroll, @TransferredToPayroll, @LaborCollection, @TranSet, @ActiveTrans, @ChkLink, @BatchTotalHrsDisp, @BatchHrsRemainDisp, @BatchHrsRemainPctDisp, @BatchSplitHrsMethod, @BatchAssignTo, @BatchComplete, @BatchStartHrs, @BatchEndHrs, @BatchTotalHrs, @BatchHrsRemain, @BatchHrsRemainPct, @SysRowID, @Imported, @ImportDate, @BatchMode, @HCMPayHoursCalcType)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Company", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeNum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaborHedSeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaborHedSeq", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayrollDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayrollDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shift", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shift", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClockInDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClockInDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClockInTime", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "ClockInTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DspClockInTime", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DspClockInTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActualClockInTime", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "ActualClockInTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActualClockinDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActualClockinDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LunchStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LunchStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActLunchOutTime", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "ActLunchOutTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LunchOutTime", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "LunchOutTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActLunchInTime", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "ActLunchInTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LunchInTime", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "LunchInTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClockOutTime", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "ClockOutTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DspClockOutTime", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DspClockOutTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActualClockOutTime", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "ActualClockOutTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayHours", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "PayHours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FeedPayroll", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FeedPayroll", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransferredToPayroll", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransferredToPayroll", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaborCollection", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaborCollection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TranSet", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TranSet", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActiveTrans", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActiveTrans", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChkLink", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChkLink", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchTotalHrsDisp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchTotalHrsDisp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchHrsRemainDisp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchHrsRemainDisp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchHrsRemainPctDisp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchHrsRemainPctDisp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchSplitHrsMethod", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchSplitHrsMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchAssignTo", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchAssignTo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchComplete", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchComplete", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchStartHrs", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchStartHrs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchEndHrs", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchEndHrs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchTotalHrs", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 5, "BatchTotalHrs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchHrsRemain", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 5, "BatchHrsRemain", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchHrsRemainPct", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 5, "BatchHrsRemainPct", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SysRowID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SysRowID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Imported", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Imported", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImportDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImportDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchMode", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchMode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HCMPayHoursCalcType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HCMPayHoursCalcType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Erp].[LaborHed] SET [Company] = @Company, [EmployeeNum] = @EmployeeNum, [LaborHedSeq] = @LaborHedSeq, [PayrollDate] = @PayrollDate, [Shift] = @Shift, [ClockInDate] = @ClockInDate, [ClockInTime] = @ClockInTime, [DspClockInTime] = @DspClockInTime, [ActualClockInTime] = @ActualClockInTime, [ActualClockinDate] = @ActualClockinDate, [LunchStatus] = @LunchStatus, [ActLunchOutTime] = @ActLunchOutTime, [LunchOutTime] = @LunchOutTime, [ActLunchInTime] = @ActLunchInTime, [LunchInTime] = @LunchInTime, [ClockOutTime] = @ClockOutTime, [DspClockOutTime] = @DspClockOutTime, [ActualClockOutTime] = @ActualClockOutTime, [PayHours] = @PayHours, [FeedPayroll] = @FeedPayroll, [TransferredToPayroll] = @TransferredToPayroll, [LaborCollection] = @LaborCollection, [TranSet] = @TranSet, [ActiveTrans] = @ActiveTrans, [ChkLink] = @ChkLink, [BatchTotalHrsDisp] = @BatchTotalHrsDisp, [BatchHrsRemainDisp] = @BatchHrsRemainDisp, [BatchHrsRemainPctDisp] = @BatchHrsRemainPctDisp, [BatchSplitHrsMethod] = @BatchSplitHrsMethod, [BatchAssignTo] = @BatchAssignTo, [BatchComplete] = @BatchComplete, [BatchStartHrs] = @BatchStartHrs, [BatchEndHrs] = @BatchEndHrs, [BatchTotalHrs] = @BatchTotalHrs, [BatchHrsRemain] = @BatchHrsRemain, [BatchHrsRemainPct] = @BatchHrsRemainPct, [SysRowID] = @SysRowID, [Imported] = @Imported, [ImportDate] = @ImportDate, [BatchMode] = @BatchMode, [HCMPayHoursCalcType] = @HCMPayHoursCalcType WHERE (([Company] = @Original_Company) AND ([LaborHedSeq] = @Original_LaborHedSeq))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Company", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeNum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaborHedSeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaborHedSeq", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayrollDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayrollDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shift", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shift", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClockInDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClockInDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClockInTime", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "ClockInTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DspClockInTime", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DspClockInTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActualClockInTime", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "ActualClockInTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActualClockinDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActualClockinDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LunchStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LunchStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActLunchOutTime", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "ActLunchOutTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LunchOutTime", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "LunchOutTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActLunchInTime", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "ActLunchInTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LunchInTime", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "LunchInTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClockOutTime", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "ClockOutTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DspClockOutTime", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DspClockOutTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActualClockOutTime", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "ActualClockOutTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayHours", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "PayHours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FeedPayroll", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FeedPayroll", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransferredToPayroll", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransferredToPayroll", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaborCollection", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaborCollection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TranSet", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TranSet", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActiveTrans", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActiveTrans", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChkLink", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChkLink", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchTotalHrsDisp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchTotalHrsDisp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchHrsRemainDisp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchHrsRemainDisp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchHrsRemainPctDisp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchHrsRemainPctDisp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchSplitHrsMethod", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchSplitHrsMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchAssignTo", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchAssignTo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchComplete", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchComplete", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchStartHrs", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchStartHrs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchEndHrs", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchEndHrs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchTotalHrs", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 5, "BatchTotalHrs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchHrsRemain", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 5, "BatchHrsRemain", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchHrsRemainPct", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 5, "BatchHrsRemainPct", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SysRowID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SysRowID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Imported", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Imported", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImportDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImportDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchMode", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchMode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HCMPayHoursCalcType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HCMPayHoursCalcType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Company", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LaborHedSeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaborHedSeq", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["EpicorERPTestConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Company, EmployeeNum, LaborHedSeq, PayrollDate, Shift, ClockInDate, ClockInTime, DspClockInTime, ActualClockInTime, ActualClockinDate, LunchStatus, ActLunchOutTime, LunchOutTime, ActLunchInTime, LunchInTime, ClockOutTime, DspClockOutTime, ActualClockOutTime, PayHours, FeedPayroll, TransferredToPayroll, LaborCollection, TranSet, ActiveTrans, ChkLink, BatchTotalHrsDisp, BatchHrsRemainDisp, BatchHrsRemainPctDisp, BatchSplitHrsMethod, BatchAssignTo, BatchComplete, BatchStartHrs, BatchEndHrs, BatchTotalHrs, BatchHrsRemain, BatchHrsRemainPct, SysRevID, SysRowID, Imported, ImportDate, BatchMode, HCMPayHoursCalcType FROM Erp.LaborHed";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds.LaborHedDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds.LaborHedDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ds.LaborHedDataTable dataTable = new ds.LaborHedDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds.LaborHedDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds dataSet) {
            return this.Adapter.Update(dataSet, "LaborHed");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_Company, int Original_LaborHedSeq) {
            if ((Original_Company == null)) {
                throw new global::System.ArgumentNullException("Original_Company");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Company));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_LaborHedSeq));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Company, 
                    string EmployeeNum, 
                    int LaborHedSeq, 
                    global::System.Nullable<global::System.DateTime> PayrollDate, 
                    int Shift, 
                    global::System.Nullable<global::System.DateTime> ClockInDate, 
                    decimal ClockInTime, 
                    string DspClockInTime, 
                    decimal ActualClockInTime, 
                    global::System.Nullable<global::System.DateTime> ActualClockinDate, 
                    string LunchStatus, 
                    decimal ActLunchOutTime, 
                    decimal LunchOutTime, 
                    decimal ActLunchInTime, 
                    decimal LunchInTime, 
                    decimal ClockOutTime, 
                    string DspClockOutTime, 
                    decimal ActualClockOutTime, 
                    decimal PayHours, 
                    bool FeedPayroll, 
                    bool TransferredToPayroll, 
                    bool LaborCollection, 
                    string TranSet, 
                    bool ActiveTrans, 
                    string ChkLink, 
                    string BatchTotalHrsDisp, 
                    string BatchHrsRemainDisp, 
                    string BatchHrsRemainPctDisp, 
                    string BatchSplitHrsMethod, 
                    bool BatchAssignTo, 
                    bool BatchComplete, 
                    global::System.Nullable<global::System.DateTime> BatchStartHrs, 
                    global::System.Nullable<global::System.DateTime> BatchEndHrs, 
                    decimal BatchTotalHrs, 
                    decimal BatchHrsRemain, 
                    decimal BatchHrsRemainPct, 
                    System.Guid SysRowID, 
                    bool Imported, 
                    global::System.Nullable<global::System.DateTime> ImportDate, 
                    bool BatchMode, 
                    string HCMPayHoursCalcType) {
            if ((Company == null)) {
                throw new global::System.ArgumentNullException("Company");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Company));
            }
            if ((EmployeeNum == null)) {
                throw new global::System.ArgumentNullException("EmployeeNum");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(EmployeeNum));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(LaborHedSeq));
            if ((PayrollDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(PayrollDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(Shift));
            if ((ClockInDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(ClockInDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(ClockInTime));
            if ((DspClockInTime == null)) {
                throw new global::System.ArgumentNullException("DspClockInTime");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(DspClockInTime));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(ActualClockInTime));
            if ((ActualClockinDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(ActualClockinDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((LunchStatus == null)) {
                throw new global::System.ArgumentNullException("LunchStatus");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(LunchStatus));
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(ActLunchOutTime));
            this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(LunchOutTime));
            this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(ActLunchInTime));
            this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(LunchInTime));
            this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(ClockOutTime));
            if ((DspClockOutTime == null)) {
                throw new global::System.ArgumentNullException("DspClockOutTime");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(DspClockOutTime));
            }
            this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(ActualClockOutTime));
            this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(PayHours));
            this.Adapter.InsertCommand.Parameters[19].Value = ((bool)(FeedPayroll));
            this.Adapter.InsertCommand.Parameters[20].Value = ((bool)(TransferredToPayroll));
            this.Adapter.InsertCommand.Parameters[21].Value = ((bool)(LaborCollection));
            if ((TranSet == null)) {
                throw new global::System.ArgumentNullException("TranSet");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(TranSet));
            }
            this.Adapter.InsertCommand.Parameters[23].Value = ((bool)(ActiveTrans));
            if ((ChkLink == null)) {
                throw new global::System.ArgumentNullException("ChkLink");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(ChkLink));
            }
            if ((BatchTotalHrsDisp == null)) {
                throw new global::System.ArgumentNullException("BatchTotalHrsDisp");
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(BatchTotalHrsDisp));
            }
            if ((BatchHrsRemainDisp == null)) {
                throw new global::System.ArgumentNullException("BatchHrsRemainDisp");
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(BatchHrsRemainDisp));
            }
            if ((BatchHrsRemainPctDisp == null)) {
                throw new global::System.ArgumentNullException("BatchHrsRemainPctDisp");
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(BatchHrsRemainPctDisp));
            }
            if ((BatchSplitHrsMethod == null)) {
                throw new global::System.ArgumentNullException("BatchSplitHrsMethod");
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(BatchSplitHrsMethod));
            }
            this.Adapter.InsertCommand.Parameters[29].Value = ((bool)(BatchAssignTo));
            this.Adapter.InsertCommand.Parameters[30].Value = ((bool)(BatchComplete));
            if ((BatchStartHrs.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((System.DateTime)(BatchStartHrs.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((BatchEndHrs.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((System.DateTime)(BatchEndHrs.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[33].Value = ((decimal)(BatchTotalHrs));
            this.Adapter.InsertCommand.Parameters[34].Value = ((decimal)(BatchHrsRemain));
            this.Adapter.InsertCommand.Parameters[35].Value = ((decimal)(BatchHrsRemainPct));
            this.Adapter.InsertCommand.Parameters[36].Value = ((System.Guid)(SysRowID));
            this.Adapter.InsertCommand.Parameters[37].Value = ((bool)(Imported));
            if ((ImportDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((System.DateTime)(ImportDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[39].Value = ((bool)(BatchMode));
            if ((HCMPayHoursCalcType == null)) {
                throw new global::System.ArgumentNullException("HCMPayHoursCalcType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(HCMPayHoursCalcType));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Company, 
                    string EmployeeNum, 
                    int LaborHedSeq, 
                    global::System.Nullable<global::System.DateTime> PayrollDate, 
                    int Shift, 
                    global::System.Nullable<global::System.DateTime> ClockInDate, 
                    decimal ClockInTime, 
                    string DspClockInTime, 
                    decimal ActualClockInTime, 
                    global::System.Nullable<global::System.DateTime> ActualClockinDate, 
                    string LunchStatus, 
                    decimal ActLunchOutTime, 
                    decimal LunchOutTime, 
                    decimal ActLunchInTime, 
                    decimal LunchInTime, 
                    decimal ClockOutTime, 
                    string DspClockOutTime, 
                    decimal ActualClockOutTime, 
                    decimal PayHours, 
                    bool FeedPayroll, 
                    bool TransferredToPayroll, 
                    bool LaborCollection, 
                    string TranSet, 
                    bool ActiveTrans, 
                    string ChkLink, 
                    string BatchTotalHrsDisp, 
                    string BatchHrsRemainDisp, 
                    string BatchHrsRemainPctDisp, 
                    string BatchSplitHrsMethod, 
                    bool BatchAssignTo, 
                    bool BatchComplete, 
                    global::System.Nullable<global::System.DateTime> BatchStartHrs, 
                    global::System.Nullable<global::System.DateTime> BatchEndHrs, 
                    decimal BatchTotalHrs, 
                    decimal BatchHrsRemain, 
                    decimal BatchHrsRemainPct, 
                    System.Guid SysRowID, 
                    bool Imported, 
                    global::System.Nullable<global::System.DateTime> ImportDate, 
                    bool BatchMode, 
                    string HCMPayHoursCalcType, 
                    string Original_Company, 
                    int Original_LaborHedSeq) {
            if ((Company == null)) {
                throw new global::System.ArgumentNullException("Company");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Company));
            }
            if ((EmployeeNum == null)) {
                throw new global::System.ArgumentNullException("EmployeeNum");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(EmployeeNum));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(LaborHedSeq));
            if ((PayrollDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(PayrollDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Shift));
            if ((ClockInDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(ClockInDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(ClockInTime));
            if ((DspClockInTime == null)) {
                throw new global::System.ArgumentNullException("DspClockInTime");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(DspClockInTime));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(ActualClockInTime));
            if ((ActualClockinDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(ActualClockinDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((LunchStatus == null)) {
                throw new global::System.ArgumentNullException("LunchStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(LunchStatus));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(ActLunchOutTime));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(LunchOutTime));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(ActLunchInTime));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(LunchInTime));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(ClockOutTime));
            if ((DspClockOutTime == null)) {
                throw new global::System.ArgumentNullException("DspClockOutTime");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(DspClockOutTime));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(ActualClockOutTime));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(PayHours));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((bool)(FeedPayroll));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(TransferredToPayroll));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((bool)(LaborCollection));
            if ((TranSet == null)) {
                throw new global::System.ArgumentNullException("TranSet");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(TranSet));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((bool)(ActiveTrans));
            if ((ChkLink == null)) {
                throw new global::System.ArgumentNullException("ChkLink");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(ChkLink));
            }
            if ((BatchTotalHrsDisp == null)) {
                throw new global::System.ArgumentNullException("BatchTotalHrsDisp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(BatchTotalHrsDisp));
            }
            if ((BatchHrsRemainDisp == null)) {
                throw new global::System.ArgumentNullException("BatchHrsRemainDisp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(BatchHrsRemainDisp));
            }
            if ((BatchHrsRemainPctDisp == null)) {
                throw new global::System.ArgumentNullException("BatchHrsRemainPctDisp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(BatchHrsRemainPctDisp));
            }
            if ((BatchSplitHrsMethod == null)) {
                throw new global::System.ArgumentNullException("BatchSplitHrsMethod");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(BatchSplitHrsMethod));
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(BatchAssignTo));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((bool)(BatchComplete));
            if ((BatchStartHrs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((System.DateTime)(BatchStartHrs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((BatchEndHrs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((System.DateTime)(BatchEndHrs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(BatchTotalHrs));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(BatchHrsRemain));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(BatchHrsRemainPct));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((System.Guid)(SysRowID));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((bool)(Imported));
            if ((ImportDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((System.DateTime)(ImportDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[39].Value = ((bool)(BatchMode));
            if ((HCMPayHoursCalcType == null)) {
                throw new global::System.ArgumentNullException("HCMPayHoursCalcType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(HCMPayHoursCalcType));
            }
            if ((Original_Company == null)) {
                throw new global::System.ArgumentNullException("Original_Company");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_Company));
            }
            this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(Original_LaborHedSeq));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string EmployeeNum, 
                    global::System.Nullable<global::System.DateTime> PayrollDate, 
                    int Shift, 
                    global::System.Nullable<global::System.DateTime> ClockInDate, 
                    decimal ClockInTime, 
                    string DspClockInTime, 
                    decimal ActualClockInTime, 
                    global::System.Nullable<global::System.DateTime> ActualClockinDate, 
                    string LunchStatus, 
                    decimal ActLunchOutTime, 
                    decimal LunchOutTime, 
                    decimal ActLunchInTime, 
                    decimal LunchInTime, 
                    decimal ClockOutTime, 
                    string DspClockOutTime, 
                    decimal ActualClockOutTime, 
                    decimal PayHours, 
                    bool FeedPayroll, 
                    bool TransferredToPayroll, 
                    bool LaborCollection, 
                    string TranSet, 
                    bool ActiveTrans, 
                    string ChkLink, 
                    string BatchTotalHrsDisp, 
                    string BatchHrsRemainDisp, 
                    string BatchHrsRemainPctDisp, 
                    string BatchSplitHrsMethod, 
                    bool BatchAssignTo, 
                    bool BatchComplete, 
                    global::System.Nullable<global::System.DateTime> BatchStartHrs, 
                    global::System.Nullable<global::System.DateTime> BatchEndHrs, 
                    decimal BatchTotalHrs, 
                    decimal BatchHrsRemain, 
                    decimal BatchHrsRemainPct, 
                    System.Guid SysRowID, 
                    bool Imported, 
                    global::System.Nullable<global::System.DateTime> ImportDate, 
                    bool BatchMode, 
                    string HCMPayHoursCalcType, 
                    string Original_Company, 
                    int Original_LaborHedSeq) {
            return this.Update(Original_Company, EmployeeNum, Original_LaborHedSeq, PayrollDate, Shift, ClockInDate, ClockInTime, DspClockInTime, ActualClockInTime, ActualClockinDate, LunchStatus, ActLunchOutTime, LunchOutTime, ActLunchInTime, LunchInTime, ClockOutTime, DspClockOutTime, ActualClockOutTime, PayHours, FeedPayroll, TransferredToPayroll, LaborCollection, TranSet, ActiveTrans, ChkLink, BatchTotalHrsDisp, BatchHrsRemainDisp, BatchHrsRemainPctDisp, BatchSplitHrsMethod, BatchAssignTo, BatchComplete, BatchStartHrs, BatchEndHrs, BatchTotalHrs, BatchHrsRemain, BatchHrsRemainPct, SysRowID, Imported, ImportDate, BatchMode, HCMPayHoursCalcType, Original_Company, Original_LaborHedSeq);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LaborDtlTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public LaborDtlTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LaborDtl";
            tableMapping.ColumnMappings.Add("Company", "Company");
            tableMapping.ColumnMappings.Add("EmployeeNum", "EmployeeNum");
            tableMapping.ColumnMappings.Add("LaborHedSeq", "LaborHedSeq");
            tableMapping.ColumnMappings.Add("LaborDtlSeq", "LaborDtlSeq");
            tableMapping.ColumnMappings.Add("LaborType", "LaborType");
            tableMapping.ColumnMappings.Add("LaborTypePseudo", "LaborTypePseudo");
            tableMapping.ColumnMappings.Add("ReWork", "ReWork");
            tableMapping.ColumnMappings.Add("ReworkReasonCode", "ReworkReasonCode");
            tableMapping.ColumnMappings.Add("JobNum", "JobNum");
            tableMapping.ColumnMappings.Add("AssemblySeq", "AssemblySeq");
            tableMapping.ColumnMappings.Add("OprSeq", "OprSeq");
            tableMapping.ColumnMappings.Add("JCDept", "JCDept");
            tableMapping.ColumnMappings.Add("ResourceGrpID", "ResourceGrpID");
            tableMapping.ColumnMappings.Add("OpCode", "OpCode");
            tableMapping.ColumnMappings.Add("LaborHrs", "LaborHrs");
            tableMapping.ColumnMappings.Add("BurdenHrs", "BurdenHrs");
            tableMapping.ColumnMappings.Add("LaborQty", "LaborQty");
            tableMapping.ColumnMappings.Add("ScrapQty", "ScrapQty");
            tableMapping.ColumnMappings.Add("ScrapReasonCode", "ScrapReasonCode");
            tableMapping.ColumnMappings.Add("SetupPctComplete", "SetupPctComplete");
            tableMapping.ColumnMappings.Add("Complete", "Complete");
            tableMapping.ColumnMappings.Add("IndirectCode", "IndirectCode");
            tableMapping.ColumnMappings.Add("LaborNote", "LaborNote");
            tableMapping.ColumnMappings.Add("ExpenseCode", "ExpenseCode");
            tableMapping.ColumnMappings.Add("LaborCollection", "LaborCollection");
            tableMapping.ColumnMappings.Add("AppliedToSchedule", "AppliedToSchedule");
            tableMapping.ColumnMappings.Add("ClockInMInute", "ClockInMInute");
            tableMapping.ColumnMappings.Add("ClockOutMinute", "ClockOutMinute");
            tableMapping.ColumnMappings.Add("ClockInDate", "ClockInDate");
            tableMapping.ColumnMappings.Add("ClockinTime", "ClockinTime");
            tableMapping.ColumnMappings.Add("ClockOutTime", "ClockOutTime");
            tableMapping.ColumnMappings.Add("ActiveTrans", "ActiveTrans");
            tableMapping.ColumnMappings.Add("OverRidePayRate", "OverRidePayRate");
            tableMapping.ColumnMappings.Add("LaborRate", "LaborRate");
            tableMapping.ColumnMappings.Add("BurdenRate", "BurdenRate");
            tableMapping.ColumnMappings.Add("DspClockInTime", "DspClockInTime");
            tableMapping.ColumnMappings.Add("DspClockOutTime", "DspClockOutTime");
            tableMapping.ColumnMappings.Add("ResourceID", "ResourceID");
            tableMapping.ColumnMappings.Add("OpComplete", "OpComplete");
            tableMapping.ColumnMappings.Add("EarnedHrs", "EarnedHrs");
            tableMapping.ColumnMappings.Add("AddedOper", "AddedOper");
            tableMapping.ColumnMappings.Add("PayrollDate", "PayrollDate");
            tableMapping.ColumnMappings.Add("PostedToGL", "PostedToGL");
            tableMapping.ColumnMappings.Add("FiscalYear", "FiscalYear");
            tableMapping.ColumnMappings.Add("FiscalPeriod", "FiscalPeriod");
            tableMapping.ColumnMappings.Add("JournalNum", "JournalNum");
            tableMapping.ColumnMappings.Add("GLTrans", "GLTrans");
            tableMapping.ColumnMappings.Add("JournalCode", "JournalCode");
            tableMapping.ColumnMappings.Add("InspectionPending", "InspectionPending");
            tableMapping.ColumnMappings.Add("CallNum", "CallNum");
            tableMapping.ColumnMappings.Add("CallLine", "CallLine");
            tableMapping.ColumnMappings.Add("ServNum", "ServNum");
            tableMapping.ColumnMappings.Add("ServCode", "ServCode");
            tableMapping.ColumnMappings.Add("ResReasonCode", "ResReasonCode");
            tableMapping.ColumnMappings.Add("WipPosted", "WipPosted");
            tableMapping.ColumnMappings.Add("DiscrepQty", "DiscrepQty");
            tableMapping.ColumnMappings.Add("DiscrpRsnCode", "DiscrpRsnCode");
            tableMapping.ColumnMappings.Add("ParentLaborDtlSeq", "ParentLaborDtlSeq");
            tableMapping.ColumnMappings.Add("LaborEntryMethod", "LaborEntryMethod");
            tableMapping.ColumnMappings.Add("FiscalYearSuffix", "FiscalYearSuffix");
            tableMapping.ColumnMappings.Add("FiscalCalendarID", "FiscalCalendarID");
            tableMapping.ColumnMappings.Add("BFLaborReq", "BFLaborReq");
            tableMapping.ColumnMappings.Add("ABTUID", "ABTUID");
            tableMapping.ColumnMappings.Add("ProjectID", "ProjectID");
            tableMapping.ColumnMappings.Add("PhaseID", "PhaseID");
            tableMapping.ColumnMappings.Add("RoleCd", "RoleCd");
            tableMapping.ColumnMappings.Add("TimeTypCd", "TimeTypCd");
            tableMapping.ColumnMappings.Add("PBInvNum", "PBInvNum");
            tableMapping.ColumnMappings.Add("PMUID", "PMUID");
            tableMapping.ColumnMappings.Add("TaskSetID", "TaskSetID");
            tableMapping.ColumnMappings.Add("ApprovedDate", "ApprovedDate");
            tableMapping.ColumnMappings.Add("ClaimRef", "ClaimRef");
            tableMapping.ColumnMappings.Add("QuickEntryCode", "QuickEntryCode");
            tableMapping.ColumnMappings.Add("TimeStatus", "TimeStatus");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("CreateDate", "CreateDate");
            tableMapping.ColumnMappings.Add("CreateTime", "CreateTime");
            tableMapping.ColumnMappings.Add("ChangedBy", "ChangedBy");
            tableMapping.ColumnMappings.Add("ChangeDate", "ChangeDate");
            tableMapping.ColumnMappings.Add("ChangeTime", "ChangeTime");
            tableMapping.ColumnMappings.Add("ActiveTaskID", "ActiveTaskID");
            tableMapping.ColumnMappings.Add("LastTaskID", "LastTaskID");
            tableMapping.ColumnMappings.Add("CreatedViaTEWeekView", "CreatedViaTEWeekView");
            tableMapping.ColumnMappings.Add("CurrentWFStageID", "CurrentWFStageID");
            tableMapping.ColumnMappings.Add("WFGroupID", "WFGroupID");
            tableMapping.ColumnMappings.Add("WFComplete", "WFComplete");
            tableMapping.ColumnMappings.Add("ApprovalRequired", "ApprovalRequired");
            tableMapping.ColumnMappings.Add("SubmittedBy", "SubmittedBy");
            tableMapping.ColumnMappings.Add("PBRateFrom", "PBRateFrom");
            tableMapping.ColumnMappings.Add("PBCurrencyCode", "PBCurrencyCode");
            tableMapping.ColumnMappings.Add("PBHours", "PBHours");
            tableMapping.ColumnMappings.Add("PBChargeRate", "PBChargeRate");
            tableMapping.ColumnMappings.Add("PBChargeAmt", "PBChargeAmt");
            tableMapping.ColumnMappings.Add("DocPBChargeRate", "DocPBChargeRate");
            tableMapping.ColumnMappings.Add("Rpt1PBChargeRate", "Rpt1PBChargeRate");
            tableMapping.ColumnMappings.Add("Rpt2PBChargeRate", "Rpt2PBChargeRate");
            tableMapping.ColumnMappings.Add("Rpt3PBChargeRate", "Rpt3PBChargeRate");
            tableMapping.ColumnMappings.Add("DocPBChargeAmt", "DocPBChargeAmt");
            tableMapping.ColumnMappings.Add("Rpt1PBChargeAmt", "Rpt1PBChargeAmt");
            tableMapping.ColumnMappings.Add("Rpt2PBChargeAmt", "Rpt2PBChargeAmt");
            tableMapping.ColumnMappings.Add("Rpt3PBChargeAmt", "Rpt3PBChargeAmt");
            tableMapping.ColumnMappings.Add("Shift", "Shift");
            tableMapping.ColumnMappings.Add("ActID", "ActID");
            tableMapping.ColumnMappings.Add("DtailID", "DtailID");
            tableMapping.ColumnMappings.Add("ProjProcessed", "ProjProcessed");
            tableMapping.ColumnMappings.Add("AsOfDate", "AsOfDate");
            tableMapping.ColumnMappings.Add("AsOfSeq", "AsOfSeq");
            tableMapping.ColumnMappings.Add("JDFInputFiles", "JDFInputFiles");
            tableMapping.ColumnMappings.Add("JDFNumberOfPages", "JDFNumberOfPages");
            tableMapping.ColumnMappings.Add("BatchWasSaved", "BatchWasSaved");
            tableMapping.ColumnMappings.Add("AssignToBatch", "AssignToBatch");
            tableMapping.ColumnMappings.Add("BatchComplete", "BatchComplete");
            tableMapping.ColumnMappings.Add("BatchRequestMove", "BatchRequestMove");
            tableMapping.ColumnMappings.Add("BatchPrint", "BatchPrint");
            tableMapping.ColumnMappings.Add("BatchLaborHrs", "BatchLaborHrs");
            tableMapping.ColumnMappings.Add("BatchPctOfTotHrs", "BatchPctOfTotHrs");
            tableMapping.ColumnMappings.Add("BatchQty", "BatchQty");
            tableMapping.ColumnMappings.Add("BatchTotalExpectedHrs", "BatchTotalExpectedHrs");
            tableMapping.ColumnMappings.Add("JDFOpCompleted", "JDFOpCompleted");
            tableMapping.ColumnMappings.Add("SysRevID", "SysRevID");
            tableMapping.ColumnMappings.Add("SysRowID", "SysRowID");
            tableMapping.ColumnMappings.Add("Downtime", "Downtime");
            tableMapping.ColumnMappings.Add("RefJobNum", "RefJobNum");
            tableMapping.ColumnMappings.Add("RefAssemblySeq", "RefAssemblySeq");
            tableMapping.ColumnMappings.Add("RefOprSeq", "RefOprSeq");
            tableMapping.ColumnMappings.Add("Imported", "Imported");
            tableMapping.ColumnMappings.Add("ImportDate", "ImportDate");
            tableMapping.ColumnMappings.Add("TimeAutoSubmit", "TimeAutoSubmit");
            tableMapping.ColumnMappings.Add("BatchMode", "BatchMode");
            tableMapping.ColumnMappings.Add("BillServiceRate", "BillServiceRate");
            tableMapping.ColumnMappings.Add("HCMPayHours", "HCMPayHours");
            tableMapping.ColumnMappings.Add("EpicorFSA", "EpicorFSA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Erp].[LaborDtl] WHERE (([Company] = @Original_Company) AND ([LaborHe" +
                "dSeq] = @Original_LaborHedSeq) AND ([LaborDtlSeq] = @Original_LaborDtlSeq))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Company", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LaborHedSeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaborHedSeq", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LaborDtlSeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaborDtlSeq", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [Erp].[LaborDtl] ([Company], [EmployeeNum], [LaborHedSeq], [LaborDtlS" +
                "eq], [LaborType], [LaborTypePseudo], [ReWork], [ReworkReasonCode], [JobNum], [As" +
                "semblySeq], [OprSeq], [JCDept], [ResourceGrpID], [OpCode], [LaborHrs], [BurdenHr" +
                "s], [LaborQty], [ScrapQty], [ScrapReasonCode], [SetupPctComplete], [Complete], [" +
                "IndirectCode], [LaborNote], [ExpenseCode], [LaborCollection], [AppliedToSchedule" +
                "], [ClockInMInute], [ClockOutMinute], [ClockInDate], [ClockinTime], [ClockOutTim" +
                "e], [ActiveTrans], [OverRidePayRate], [LaborRate], [BurdenRate], [DspClockInTime" +
                "], [DspClockOutTime], [ResourceID], [OpComplete], [EarnedHrs], [AddedOper], [Pay" +
                "rollDate], [PostedToGL], [FiscalYear], [FiscalPeriod], [JournalNum], [GLTrans], " +
                "[JournalCode], [InspectionPending], [CallNum], [CallLine], [ServNum], [ServCode]" +
                ", [ResReasonCode], [WipPosted], [DiscrepQty], [DiscrpRsnCode], [ParentLaborDtlSe" +
                "q], [LaborEntryMethod], [FiscalYearSuffix], [FiscalCalendarID], [BFLaborReq], [A" +
                "BTUID], [ProjectID], [PhaseID], [RoleCd], [TimeTypCd], [PBInvNum], [PMUID], [Tas" +
                "kSetID], [ApprovedDate], [ClaimRef], [QuickEntryCode], [TimeStatus], [CreatedBy]" +
                ", [CreateDate], [CreateTime], [ChangedBy], [ChangeDate], [ChangeTime], [ActiveTa" +
                "skID], [LastTaskID], [CreatedViaTEWeekView], [CurrentWFStageID], [WFGroupID], [W" +
                "FComplete], [ApprovalRequired], [SubmittedBy], [PBRateFrom], [PBCurrencyCode], [" +
                "PBHours], [PBChargeRate], [PBChargeAmt], [DocPBChargeRate], [Rpt1PBChargeRate], " +
                "[Rpt2PBChargeRate], [Rpt3PBChargeRate], [DocPBChargeAmt], [Rpt1PBChargeAmt], [Rp" +
                "t2PBChargeAmt], [Rpt3PBChargeAmt], [Shift], [ActID], [DtailID], [ProjProcessed]," +
                " [AsOfDate], [AsOfSeq], [JDFInputFiles], [JDFNumberOfPages], [BatchWasSaved], [A" +
                "ssignToBatch], [BatchComplete], [BatchRequestMove], [BatchPrint], [BatchLaborHrs" +
                "], [BatchPctOfTotHrs], [BatchQty], [BatchTotalExpectedHrs], [JDFOpCompleted], [S" +
                "ysRowID], [Downtime], [RefJobNum], [RefAssemblySeq], [RefOprSeq], [Imported], [I" +
                "mportDate], [TimeAutoSubmit], [BatchMode], [BillServiceRate], [HCMPayHours], [Ep" +
                "icorFSA]) VALUES (@Company, @EmployeeNum, @LaborHedSeq, @LaborDtlSeq, @LaborType" +
                ", @LaborTypePseudo, @ReWork, @ReworkReasonCode, @JobNum, @AssemblySeq, @OprSeq, " +
                "@JCDept, @ResourceGrpID, @OpCode, @LaborHrs, @BurdenHrs, @LaborQty, @ScrapQty, @" +
                "ScrapReasonCode, @SetupPctComplete, @Complete, @IndirectCode, @LaborNote, @Expen" +
                "seCode, @LaborCollection, @AppliedToSchedule, @ClockInMInute, @ClockOutMinute, @" +
                "ClockInDate, @ClockinTime, @ClockOutTime, @ActiveTrans, @OverRidePayRate, @Labor" +
                "Rate, @BurdenRate, @DspClockInTime, @DspClockOutTime, @ResourceID, @OpComplete, " +
                "@EarnedHrs, @AddedOper, @PayrollDate, @PostedToGL, @FiscalYear, @FiscalPeriod, @" +
                "JournalNum, @GLTrans, @JournalCode, @InspectionPending, @CallNum, @CallLine, @Se" +
                "rvNum, @ServCode, @ResReasonCode, @WipPosted, @DiscrepQty, @DiscrpRsnCode, @Pare" +
                "ntLaborDtlSeq, @LaborEntryMethod, @FiscalYearSuffix, @FiscalCalendarID, @BFLabor" +
                "Req, @ABTUID, @ProjectID, @PhaseID, @RoleCd, @TimeTypCd, @PBInvNum, @PMUID, @Tas" +
                "kSetID, @ApprovedDate, @ClaimRef, @QuickEntryCode, @TimeStatus, @CreatedBy, @Cre" +
                "ateDate, @CreateTime, @ChangedBy, @ChangeDate, @ChangeTime, @ActiveTaskID, @Last" +
                "TaskID, @CreatedViaTEWeekView, @CurrentWFStageID, @WFGroupID, @WFComplete, @Appr" +
                "ovalRequired, @SubmittedBy, @PBRateFrom, @PBCurrencyCode, @PBHours, @PBChargeRat" +
                "e, @PBChargeAmt, @DocPBChargeRate, @Rpt1PBChargeRate, @Rpt2PBChargeRate, @Rpt3PB" +
                "ChargeRate, @DocPBChargeAmt, @Rpt1PBChargeAmt, @Rpt2PBChargeAmt, @Rpt3PBChargeAm" +
                "t, @Shift, @ActID, @DtailID, @ProjProcessed, @AsOfDate, @AsOfSeq, @JDFInputFiles" +
                ", @JDFNumberOfPages, @BatchWasSaved, @AssignToBatch, @BatchComplete, @BatchReque" +
                "stMove, @BatchPrint, @BatchLaborHrs, @BatchPctOfTotHrs, @BatchQty, @BatchTotalEx" +
                "pectedHrs, @JDFOpCompleted, @SysRowID, @Downtime, @RefJobNum, @RefAssemblySeq, @" +
                "RefOprSeq, @Imported, @ImportDate, @TimeAutoSubmit, @BatchMode, @BillServiceRate" +
                ", @HCMPayHours, @EpicorFSA)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Company", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeNum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaborHedSeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaborHedSeq", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaborDtlSeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaborDtlSeq", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaborType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaborType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaborTypePseudo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaborTypePseudo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReWork", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReWork", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReworkReasonCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReworkReasonCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobNum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AssemblySeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AssemblySeq", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OprSeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OprSeq", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JCDept", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JCDept", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResourceGrpID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResourceGrpID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OpCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OpCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaborHrs", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 11, 5, "LaborHrs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BurdenHrs", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 11, 5, "BurdenHrs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaborQty", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 22, 8, "LaborQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScrapQty", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 22, 8, "ScrapQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScrapReasonCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScrapReasonCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SetupPctComplete", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetupPctComplete", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Complete", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Complete", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndirectCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndirectCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaborNote", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaborNote", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExpenseCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpenseCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaborCollection", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaborCollection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AppliedToSchedule", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AppliedToSchedule", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClockInMInute", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClockInMInute", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClockOutMinute", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClockOutMinute", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClockInDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClockInDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClockinTime", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "ClockinTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClockOutTime", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "ClockOutTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActiveTrans", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActiveTrans", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OverRidePayRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 4, "OverRidePayRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaborRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 6, "LaborRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BurdenRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 6, "BurdenRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DspClockInTime", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DspClockInTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DspClockOutTime", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DspClockOutTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResourceID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResourceID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OpComplete", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OpComplete", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EarnedHrs", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "EarnedHrs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AddedOper", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AddedOper", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayrollDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayrollDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PostedToGL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostedToGL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FiscalYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FiscalYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FiscalPeriod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FiscalPeriod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JournalNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JournalNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GLTrans", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GLTrans", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JournalCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JournalCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InspectionPending", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InspectionPending", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CallNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CallNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CallLine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CallLine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResReasonCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResReasonCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WipPosted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WipPosted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DiscrepQty", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 22, 8, "DiscrepQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DiscrpRsnCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DiscrpRsnCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParentLaborDtlSeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentLaborDtlSeq", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaborEntryMethod", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaborEntryMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FiscalYearSuffix", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FiscalYearSuffix", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FiscalCalendarID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FiscalCalendarID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BFLaborReq", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BFLaborReq", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ABTUID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ABTUID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProjectID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhaseID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhaseID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RoleCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoleCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TimeTypCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeTypCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PBInvNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PBInvNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMUID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TaskSetID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TaskSetID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovedDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClaimRef", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClaimRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuickEntryCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuickEntryCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TimeStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChangedBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChangeDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangeDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChangeTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangeTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActiveTaskID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActiveTaskID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastTaskID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTaskID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedViaTEWeekView", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedViaTEWeekView", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrentWFStageID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrentWFStageID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WFGroupID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WFGroupID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WFComplete", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WFComplete", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalRequired", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalRequired", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubmittedBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubmittedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PBRateFrom", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PBRateFrom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PBCurrencyCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PBCurrencyCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PBHours", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "PBHours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PBChargeRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 3, "PBChargeRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PBChargeAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 3, "PBChargeAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DocPBChargeRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 3, "DocPBChargeRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rpt1PBChargeRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 3, "Rpt1PBChargeRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rpt2PBChargeRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 3, "Rpt2PBChargeRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rpt3PBChargeRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 3, "Rpt3PBChargeRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DocPBChargeAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 3, "DocPBChargeAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rpt1PBChargeAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 3, "Rpt1PBChargeAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rpt2PBChargeAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 3, "Rpt2PBChargeAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rpt3PBChargeAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 3, "Rpt3PBChargeAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shift", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shift", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DtailID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DtailID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProjProcessed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjProcessed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AsOfDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AsOfDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AsOfSeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AsOfSeq", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JDFInputFiles", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JDFInputFiles", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JDFNumberOfPages", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JDFNumberOfPages", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchWasSaved", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchWasSaved", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AssignToBatch", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AssignToBatch", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchComplete", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchComplete", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchRequestMove", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchRequestMove", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchPrint", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchPrint", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchLaborHrs", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 5, "BatchLaborHrs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchPctOfTotHrs", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 5, "BatchPctOfTotHrs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchQty", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 5, "BatchQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchTotalExpectedHrs", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 5, "BatchTotalExpectedHrs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JDFOpCompleted", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JDFOpCompleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SysRowID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SysRowID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Downtime", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Downtime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RefJobNum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefJobNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RefAssemblySeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefAssemblySeq", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RefOprSeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefOprSeq", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Imported", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Imported", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImportDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImportDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TimeAutoSubmit", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeAutoSubmit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchMode", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchMode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BillServiceRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 6, "BillServiceRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HCMPayHours", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "HCMPayHours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EpicorFSA", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EpicorFSA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [Erp].[LaborDtl] SET [Company] = @Company, [EmployeeNum] = @EmployeeNum, [" +
                "LaborHedSeq] = @LaborHedSeq, [LaborDtlSeq] = @LaborDtlSeq, [LaborType] = @LaborT" +
                "ype, [LaborTypePseudo] = @LaborTypePseudo, [ReWork] = @ReWork, [ReworkReasonCode" +
                "] = @ReworkReasonCode, [JobNum] = @JobNum, [AssemblySeq] = @AssemblySeq, [OprSeq" +
                "] = @OprSeq, [JCDept] = @JCDept, [ResourceGrpID] = @ResourceGrpID, [OpCode] = @O" +
                "pCode, [LaborHrs] = @LaborHrs, [BurdenHrs] = @BurdenHrs, [LaborQty] = @LaborQty," +
                " [ScrapQty] = @ScrapQty, [ScrapReasonCode] = @ScrapReasonCode, [SetupPctComplete" +
                "] = @SetupPctComplete, [Complete] = @Complete, [IndirectCode] = @IndirectCode, [" +
                "LaborNote] = @LaborNote, [ExpenseCode] = @ExpenseCode, [LaborCollection] = @Labo" +
                "rCollection, [AppliedToSchedule] = @AppliedToSchedule, [ClockInMInute] = @ClockI" +
                "nMInute, [ClockOutMinute] = @ClockOutMinute, [ClockInDate] = @ClockInDate, [Cloc" +
                "kinTime] = @ClockinTime, [ClockOutTime] = @ClockOutTime, [ActiveTrans] = @Active" +
                "Trans, [OverRidePayRate] = @OverRidePayRate, [LaborRate] = @LaborRate, [BurdenRa" +
                "te] = @BurdenRate, [DspClockInTime] = @DspClockInTime, [DspClockOutTime] = @DspC" +
                "lockOutTime, [ResourceID] = @ResourceID, [OpComplete] = @OpComplete, [EarnedHrs]" +
                " = @EarnedHrs, [AddedOper] = @AddedOper, [PayrollDate] = @PayrollDate, [PostedTo" +
                "GL] = @PostedToGL, [FiscalYear] = @FiscalYear, [FiscalPeriod] = @FiscalPeriod, [" +
                "JournalNum] = @JournalNum, [GLTrans] = @GLTrans, [JournalCode] = @JournalCode, [" +
                "InspectionPending] = @InspectionPending, [CallNum] = @CallNum, [CallLine] = @Cal" +
                "lLine, [ServNum] = @ServNum, [ServCode] = @ServCode, [ResReasonCode] = @ResReaso" +
                "nCode, [WipPosted] = @WipPosted, [DiscrepQty] = @DiscrepQty, [DiscrpRsnCode] = @" +
                "DiscrpRsnCode, [ParentLaborDtlSeq] = @ParentLaborDtlSeq, [LaborEntryMethod] = @L" +
                "aborEntryMethod, [FiscalYearSuffix] = @FiscalYearSuffix, [FiscalCalendarID] = @F" +
                "iscalCalendarID, [BFLaborReq] = @BFLaborReq, [ABTUID] = @ABTUID, [ProjectID] = @" +
                "ProjectID, [PhaseID] = @PhaseID, [RoleCd] = @RoleCd, [TimeTypCd] = @TimeTypCd, [" +
                "PBInvNum] = @PBInvNum, [PMUID] = @PMUID, [TaskSetID] = @TaskSetID, [ApprovedDate" +
                "] = @ApprovedDate, [ClaimRef] = @ClaimRef, [QuickEntryCode] = @QuickEntryCode, [" +
                "TimeStatus] = @TimeStatus, [CreatedBy] = @CreatedBy, [CreateDate] = @CreateDate," +
                " [CreateTime] = @CreateTime, [ChangedBy] = @ChangedBy, [ChangeDate] = @ChangeDat" +
                "e, [ChangeTime] = @ChangeTime, [ActiveTaskID] = @ActiveTaskID, [LastTaskID] = @L" +
                "astTaskID, [CreatedViaTEWeekView] = @CreatedViaTEWeekView, [CurrentWFStageID] = " +
                "@CurrentWFStageID, [WFGroupID] = @WFGroupID, [WFComplete] = @WFComplete, [Approv" +
                "alRequired] = @ApprovalRequired, [SubmittedBy] = @SubmittedBy, [PBRateFrom] = @P" +
                "BRateFrom, [PBCurrencyCode] = @PBCurrencyCode, [PBHours] = @PBHours, [PBChargeRa" +
                "te] = @PBChargeRate, [PBChargeAmt] = @PBChargeAmt, [DocPBChargeRate] = @DocPBCha" +
                "rgeRate, [Rpt1PBChargeRate] = @Rpt1PBChargeRate, [Rpt2PBChargeRate] = @Rpt2PBCha" +
                "rgeRate, [Rpt3PBChargeRate] = @Rpt3PBChargeRate, [DocPBChargeAmt] = @DocPBCharge" +
                "Amt, [Rpt1PBChargeAmt] = @Rpt1PBChargeAmt, [Rpt2PBChargeAmt] = @Rpt2PBChargeAmt," +
                " [Rpt3PBChargeAmt] = @Rpt3PBChargeAmt, [Shift] = @Shift, [ActID] = @ActID, [Dtai" +
                "lID] = @DtailID, [ProjProcessed] = @ProjProcessed, [AsOfDate] = @AsOfDate, [AsOf" +
                "Seq] = @AsOfSeq, [JDFInputFiles] = @JDFInputFiles, [JDFNumberOfPages] = @JDFNumb" +
                "erOfPages, [BatchWasSaved] = @BatchWasSaved, [AssignToBatch] = @AssignToBatch, [" +
                "BatchComplete] = @BatchComplete, [BatchRequestMove] = @BatchRequestMove, [BatchP" +
                "rint] = @BatchPrint, [BatchLaborHrs] = @BatchLaborHrs, [BatchPctOfTotHrs] = @Bat" +
                "chPctOfTotHrs, [BatchQty] = @BatchQty, [BatchTotalExpectedHrs] = @BatchTotalExpe" +
                "ctedHrs, [JDFOpCompleted] = @JDFOpCompleted, [SysRowID] = @SysRowID, [Downtime] " +
                "= @Downtime, [RefJobNum] = @RefJobNum, [RefAssemblySeq] = @RefAssemblySeq, [RefO" +
                "prSeq] = @RefOprSeq, [Imported] = @Imported, [ImportDate] = @ImportDate, [TimeAu" +
                "toSubmit] = @TimeAutoSubmit, [BatchMode] = @BatchMode, [BillServiceRate] = @Bill" +
                "ServiceRate, [HCMPayHours] = @HCMPayHours, [EpicorFSA] = @EpicorFSA WHERE (([Com" +
                "pany] = @Original_Company) AND ([LaborHedSeq] = @Original_LaborHedSeq) AND ([Lab" +
                "orDtlSeq] = @Original_LaborDtlSeq))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Company", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeNum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaborHedSeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaborHedSeq", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaborDtlSeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaborDtlSeq", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaborType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaborType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaborTypePseudo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaborTypePseudo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReWork", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReWork", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReworkReasonCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReworkReasonCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobNum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AssemblySeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AssemblySeq", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OprSeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OprSeq", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JCDept", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JCDept", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResourceGrpID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResourceGrpID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OpCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OpCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaborHrs", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 11, 5, "LaborHrs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BurdenHrs", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 11, 5, "BurdenHrs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaborQty", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 22, 8, "LaborQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScrapQty", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 22, 8, "ScrapQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScrapReasonCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScrapReasonCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SetupPctComplete", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetupPctComplete", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Complete", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Complete", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndirectCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IndirectCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaborNote", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaborNote", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExpenseCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpenseCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaborCollection", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaborCollection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AppliedToSchedule", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AppliedToSchedule", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClockInMInute", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClockInMInute", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClockOutMinute", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClockOutMinute", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClockInDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClockInDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClockinTime", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "ClockinTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClockOutTime", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "ClockOutTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActiveTrans", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActiveTrans", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OverRidePayRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 9, 4, "OverRidePayRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaborRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 6, "LaborRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BurdenRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 6, "BurdenRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DspClockInTime", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DspClockInTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DspClockOutTime", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DspClockOutTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResourceID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResourceID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OpComplete", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OpComplete", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EarnedHrs", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "EarnedHrs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AddedOper", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AddedOper", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayrollDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayrollDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PostedToGL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostedToGL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FiscalYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FiscalYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FiscalPeriod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FiscalPeriod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JournalNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JournalNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GLTrans", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GLTrans", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JournalCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JournalCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InspectionPending", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InspectionPending", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CallNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CallNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CallLine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CallLine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResReasonCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResReasonCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WipPosted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WipPosted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DiscrepQty", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 22, 8, "DiscrepQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DiscrpRsnCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DiscrpRsnCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParentLaborDtlSeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentLaborDtlSeq", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaborEntryMethod", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaborEntryMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FiscalYearSuffix", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FiscalYearSuffix", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FiscalCalendarID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FiscalCalendarID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BFLaborReq", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BFLaborReq", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ABTUID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ABTUID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProjectID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjectID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhaseID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhaseID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RoleCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoleCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TimeTypCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeTypCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PBInvNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PBInvNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMUID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TaskSetID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TaskSetID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovedDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClaimRef", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClaimRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuickEntryCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuickEntryCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TimeStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChangedBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChangeDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangeDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChangeTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChangeTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActiveTaskID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActiveTaskID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastTaskID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTaskID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedViaTEWeekView", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedViaTEWeekView", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrentWFStageID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrentWFStageID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WFGroupID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WFGroupID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WFComplete", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WFComplete", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalRequired", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalRequired", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubmittedBy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubmittedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PBRateFrom", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PBRateFrom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PBCurrencyCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PBCurrencyCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PBHours", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "PBHours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PBChargeRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 3, "PBChargeRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PBChargeAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 3, "PBChargeAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DocPBChargeRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 3, "DocPBChargeRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rpt1PBChargeRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 3, "Rpt1PBChargeRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rpt2PBChargeRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 3, "Rpt2PBChargeRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rpt3PBChargeRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 3, "Rpt3PBChargeRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DocPBChargeAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 3, "DocPBChargeAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rpt1PBChargeAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 3, "Rpt1PBChargeAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rpt2PBChargeAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 3, "Rpt2PBChargeAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rpt3PBChargeAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 3, "Rpt3PBChargeAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shift", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shift", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DtailID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DtailID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProjProcessed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProjProcessed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AsOfDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AsOfDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AsOfSeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AsOfSeq", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JDFInputFiles", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JDFInputFiles", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JDFNumberOfPages", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JDFNumberOfPages", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchWasSaved", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchWasSaved", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AssignToBatch", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AssignToBatch", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchComplete", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchComplete", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchRequestMove", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchRequestMove", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchPrint", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchPrint", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchLaborHrs", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 5, "BatchLaborHrs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchPctOfTotHrs", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 5, "BatchPctOfTotHrs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchQty", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 5, "BatchQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchTotalExpectedHrs", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 5, "BatchTotalExpectedHrs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JDFOpCompleted", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JDFOpCompleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SysRowID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SysRowID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Downtime", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Downtime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RefJobNum", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefJobNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RefAssemblySeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefAssemblySeq", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RefOprSeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefOprSeq", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Imported", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Imported", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImportDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImportDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TimeAutoSubmit", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeAutoSubmit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchMode", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchMode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BillServiceRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 6, "BillServiceRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HCMPayHours", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "HCMPayHours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EpicorFSA", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EpicorFSA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Company", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LaborHedSeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaborHedSeq", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LaborDtlSeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaborDtlSeq", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["EpicorERPTestConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Company, EmployeeNum, LaborHedSeq, LaborDtlSeq, LaborType, LaborTypePseudo" +
                ", ReWork, ReworkReasonCode, JobNum, AssemblySeq, OprSeq, JCDept, ResourceGrpID, " +
                "OpCode, LaborHrs, BurdenHrs, LaborQty, ScrapQty, ScrapReasonCode, SetupPctComple" +
                "te, Complete, IndirectCode, LaborNote, ExpenseCode, LaborCollection, AppliedToSc" +
                "hedule, ClockInMInute, ClockOutMinute, ClockInDate, ClockinTime, ClockOutTime, A" +
                "ctiveTrans, OverRidePayRate, LaborRate, BurdenRate, DspClockInTime, DspClockOutT" +
                "ime, ResourceID, OpComplete, EarnedHrs, AddedOper, PayrollDate, PostedToGL, Fisc" +
                "alYear, FiscalPeriod, JournalNum, GLTrans, JournalCode, InspectionPending, CallN" +
                "um, CallLine, ServNum, ServCode, ResReasonCode, WipPosted, DiscrepQty, DiscrpRsn" +
                "Code, ParentLaborDtlSeq, LaborEntryMethod, FiscalYearSuffix, FiscalCalendarID, B" +
                "FLaborReq, ABTUID, ProjectID, PhaseID, RoleCd, TimeTypCd, PBInvNum, PMUID, TaskS" +
                "etID, ApprovedDate, ClaimRef, QuickEntryCode, TimeStatus, CreatedBy, CreateDate," +
                " CreateTime, ChangedBy, ChangeDate, ChangeTime, ActiveTaskID, LastTaskID, Create" +
                "dViaTEWeekView, CurrentWFStageID, WFGroupID, WFComplete, ApprovalRequired, Submi" +
                "ttedBy, PBRateFrom, PBCurrencyCode, PBHours, PBChargeRate, PBChargeAmt, DocPBCha" +
                "rgeRate, Rpt1PBChargeRate, Rpt2PBChargeRate, Rpt3PBChargeRate, DocPBChargeAmt, R" +
                "pt1PBChargeAmt, Rpt2PBChargeAmt, Rpt3PBChargeAmt, Shift, ActID, DtailID, ProjPro" +
                "cessed, AsOfDate, AsOfSeq, JDFInputFiles, JDFNumberOfPages, BatchWasSaved, Assig" +
                "nToBatch, BatchComplete, BatchRequestMove, BatchPrint, BatchLaborHrs, BatchPctOf" +
                "TotHrs, BatchQty, BatchTotalExpectedHrs, JDFOpCompleted, SysRevID, SysRowID, Dow" +
                "ntime, RefJobNum, RefAssemblySeq, RefOprSeq, Imported, ImportDate, TimeAutoSubmi" +
                "t, BatchMode, BillServiceRate, HCMPayHours, EpicorFSA FROM Erp.LaborDtl";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds.LaborDtlDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds.LaborDtlDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ds.LaborDtlDataTable dataTable = new ds.LaborDtlDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds.LaborDtlDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds dataSet) {
            return this.Adapter.Update(dataSet, "LaborDtl");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_Company, int Original_LaborHedSeq, int Original_LaborDtlSeq) {
            if ((Original_Company == null)) {
                throw new global::System.ArgumentNullException("Original_Company");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Company));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_LaborHedSeq));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_LaborDtlSeq));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Company, 
                    string EmployeeNum, 
                    int LaborHedSeq, 
                    int LaborDtlSeq, 
                    string LaborType, 
                    string LaborTypePseudo, 
                    bool ReWork, 
                    string ReworkReasonCode, 
                    string JobNum, 
                    int AssemblySeq, 
                    int OprSeq, 
                    string JCDept, 
                    string ResourceGrpID, 
                    string OpCode, 
                    decimal LaborHrs, 
                    decimal BurdenHrs, 
                    decimal LaborQty, 
                    decimal ScrapQty, 
                    string ScrapReasonCode, 
                    int SetupPctComplete, 
                    bool Complete, 
                    string IndirectCode, 
                    string LaborNote, 
                    string ExpenseCode, 
                    bool LaborCollection, 
                    bool AppliedToSchedule, 
                    int ClockInMInute, 
                    int ClockOutMinute, 
                    global::System.Nullable<global::System.DateTime> ClockInDate, 
                    decimal ClockinTime, 
                    decimal ClockOutTime, 
                    bool ActiveTrans, 
                    decimal OverRidePayRate, 
                    decimal LaborRate, 
                    decimal BurdenRate, 
                    string DspClockInTime, 
                    string DspClockOutTime, 
                    string ResourceID, 
                    bool OpComplete, 
                    decimal EarnedHrs, 
                    bool AddedOper, 
                    global::System.Nullable<global::System.DateTime> PayrollDate, 
                    bool PostedToGL, 
                    int FiscalYear, 
                    int FiscalPeriod, 
                    int JournalNum, 
                    bool GLTrans, 
                    string JournalCode, 
                    bool InspectionPending, 
                    int CallNum, 
                    int CallLine, 
                    int ServNum, 
                    string ServCode, 
                    string ResReasonCode, 
                    bool WipPosted, 
                    decimal DiscrepQty, 
                    string DiscrpRsnCode, 
                    int ParentLaborDtlSeq, 
                    string LaborEntryMethod, 
                    string FiscalYearSuffix, 
                    string FiscalCalendarID, 
                    bool BFLaborReq, 
                    string ABTUID, 
                    string ProjectID, 
                    string PhaseID, 
                    string RoleCd, 
                    string TimeTypCd, 
                    int PBInvNum, 
                    int PMUID, 
                    string TaskSetID, 
                    global::System.Nullable<global::System.DateTime> ApprovedDate, 
                    string ClaimRef, 
                    string QuickEntryCode, 
                    string TimeStatus, 
                    string CreatedBy, 
                    global::System.Nullable<global::System.DateTime> CreateDate, 
                    int CreateTime, 
                    string ChangedBy, 
                    global::System.Nullable<global::System.DateTime> ChangeDate, 
                    int ChangeTime, 
                    string ActiveTaskID, 
                    string LastTaskID, 
                    bool CreatedViaTEWeekView, 
                    string CurrentWFStageID, 
                    string WFGroupID, 
                    bool WFComplete, 
                    bool ApprovalRequired, 
                    string SubmittedBy, 
                    string PBRateFrom, 
                    string PBCurrencyCode, 
                    decimal PBHours, 
                    decimal PBChargeRate, 
                    decimal PBChargeAmt, 
                    decimal DocPBChargeRate, 
                    decimal Rpt1PBChargeRate, 
                    decimal Rpt2PBChargeRate, 
                    decimal Rpt3PBChargeRate, 
                    decimal DocPBChargeAmt, 
                    decimal Rpt1PBChargeAmt, 
                    decimal Rpt2PBChargeAmt, 
                    decimal Rpt3PBChargeAmt, 
                    int Shift, 
                    int ActID, 
                    int DtailID, 
                    bool ProjProcessed, 
                    global::System.Nullable<global::System.DateTime> AsOfDate, 
                    int AsOfSeq, 
                    string JDFInputFiles, 
                    string JDFNumberOfPages, 
                    string BatchWasSaved, 
                    bool AssignToBatch, 
                    bool BatchComplete, 
                    bool BatchRequestMove, 
                    bool BatchPrint, 
                    decimal BatchLaborHrs, 
                    decimal BatchPctOfTotHrs, 
                    decimal BatchQty, 
                    decimal BatchTotalExpectedHrs, 
                    string JDFOpCompleted, 
                    System.Guid SysRowID, 
                    bool Downtime, 
                    string RefJobNum, 
                    int RefAssemblySeq, 
                    int RefOprSeq, 
                    bool Imported, 
                    global::System.Nullable<global::System.DateTime> ImportDate, 
                    bool TimeAutoSubmit, 
                    bool BatchMode, 
                    decimal BillServiceRate, 
                    decimal HCMPayHours, 
                    bool EpicorFSA) {
            if ((Company == null)) {
                throw new global::System.ArgumentNullException("Company");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Company));
            }
            if ((EmployeeNum == null)) {
                throw new global::System.ArgumentNullException("EmployeeNum");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(EmployeeNum));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(LaborHedSeq));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(LaborDtlSeq));
            if ((LaborType == null)) {
                throw new global::System.ArgumentNullException("LaborType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(LaborType));
            }
            if ((LaborTypePseudo == null)) {
                throw new global::System.ArgumentNullException("LaborTypePseudo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(LaborTypePseudo));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(ReWork));
            if ((ReworkReasonCode == null)) {
                throw new global::System.ArgumentNullException("ReworkReasonCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ReworkReasonCode));
            }
            if ((JobNum == null)) {
                throw new global::System.ArgumentNullException("JobNum");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(JobNum));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(AssemblySeq));
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(OprSeq));
            if ((JCDept == null)) {
                throw new global::System.ArgumentNullException("JCDept");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(JCDept));
            }
            if ((ResourceGrpID == null)) {
                throw new global::System.ArgumentNullException("ResourceGrpID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(ResourceGrpID));
            }
            if ((OpCode == null)) {
                throw new global::System.ArgumentNullException("OpCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(OpCode));
            }
            this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(LaborHrs));
            this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(BurdenHrs));
            this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(LaborQty));
            this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(ScrapQty));
            if ((ScrapReasonCode == null)) {
                throw new global::System.ArgumentNullException("ScrapReasonCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(ScrapReasonCode));
            }
            this.Adapter.InsertCommand.Parameters[19].Value = ((int)(SetupPctComplete));
            this.Adapter.InsertCommand.Parameters[20].Value = ((bool)(Complete));
            if ((IndirectCode == null)) {
                throw new global::System.ArgumentNullException("IndirectCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(IndirectCode));
            }
            if ((LaborNote == null)) {
                throw new global::System.ArgumentNullException("LaborNote");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(LaborNote));
            }
            if ((ExpenseCode == null)) {
                throw new global::System.ArgumentNullException("ExpenseCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(ExpenseCode));
            }
            this.Adapter.InsertCommand.Parameters[24].Value = ((bool)(LaborCollection));
            this.Adapter.InsertCommand.Parameters[25].Value = ((bool)(AppliedToSchedule));
            this.Adapter.InsertCommand.Parameters[26].Value = ((int)(ClockInMInute));
            this.Adapter.InsertCommand.Parameters[27].Value = ((int)(ClockOutMinute));
            if ((ClockInDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((System.DateTime)(ClockInDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(ClockinTime));
            this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(ClockOutTime));
            this.Adapter.InsertCommand.Parameters[31].Value = ((bool)(ActiveTrans));
            this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(OverRidePayRate));
            this.Adapter.InsertCommand.Parameters[33].Value = ((decimal)(LaborRate));
            this.Adapter.InsertCommand.Parameters[34].Value = ((decimal)(BurdenRate));
            if ((DspClockInTime == null)) {
                throw new global::System.ArgumentNullException("DspClockInTime");
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(DspClockInTime));
            }
            if ((DspClockOutTime == null)) {
                throw new global::System.ArgumentNullException("DspClockOutTime");
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(DspClockOutTime));
            }
            if ((ResourceID == null)) {
                throw new global::System.ArgumentNullException("ResourceID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(ResourceID));
            }
            this.Adapter.InsertCommand.Parameters[38].Value = ((bool)(OpComplete));
            this.Adapter.InsertCommand.Parameters[39].Value = ((decimal)(EarnedHrs));
            this.Adapter.InsertCommand.Parameters[40].Value = ((bool)(AddedOper));
            if ((PayrollDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((System.DateTime)(PayrollDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[42].Value = ((bool)(PostedToGL));
            this.Adapter.InsertCommand.Parameters[43].Value = ((int)(FiscalYear));
            this.Adapter.InsertCommand.Parameters[44].Value = ((int)(FiscalPeriod));
            this.Adapter.InsertCommand.Parameters[45].Value = ((int)(JournalNum));
            this.Adapter.InsertCommand.Parameters[46].Value = ((bool)(GLTrans));
            if ((JournalCode == null)) {
                throw new global::System.ArgumentNullException("JournalCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(JournalCode));
            }
            this.Adapter.InsertCommand.Parameters[48].Value = ((bool)(InspectionPending));
            this.Adapter.InsertCommand.Parameters[49].Value = ((int)(CallNum));
            this.Adapter.InsertCommand.Parameters[50].Value = ((int)(CallLine));
            this.Adapter.InsertCommand.Parameters[51].Value = ((int)(ServNum));
            if ((ServCode == null)) {
                throw new global::System.ArgumentNullException("ServCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(ServCode));
            }
            if ((ResReasonCode == null)) {
                throw new global::System.ArgumentNullException("ResReasonCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(ResReasonCode));
            }
            this.Adapter.InsertCommand.Parameters[54].Value = ((bool)(WipPosted));
            this.Adapter.InsertCommand.Parameters[55].Value = ((decimal)(DiscrepQty));
            if ((DiscrpRsnCode == null)) {
                throw new global::System.ArgumentNullException("DiscrpRsnCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(DiscrpRsnCode));
            }
            this.Adapter.InsertCommand.Parameters[57].Value = ((int)(ParentLaborDtlSeq));
            if ((LaborEntryMethod == null)) {
                throw new global::System.ArgumentNullException("LaborEntryMethod");
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = ((string)(LaborEntryMethod));
            }
            if ((FiscalYearSuffix == null)) {
                throw new global::System.ArgumentNullException("FiscalYearSuffix");
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(FiscalYearSuffix));
            }
            if ((FiscalCalendarID == null)) {
                throw new global::System.ArgumentNullException("FiscalCalendarID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = ((string)(FiscalCalendarID));
            }
            this.Adapter.InsertCommand.Parameters[61].Value = ((bool)(BFLaborReq));
            if ((ABTUID == null)) {
                throw new global::System.ArgumentNullException("ABTUID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = ((string)(ABTUID));
            }
            if ((ProjectID == null)) {
                throw new global::System.ArgumentNullException("ProjectID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = ((string)(ProjectID));
            }
            if ((PhaseID == null)) {
                throw new global::System.ArgumentNullException("PhaseID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = ((string)(PhaseID));
            }
            if ((RoleCd == null)) {
                throw new global::System.ArgumentNullException("RoleCd");
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = ((string)(RoleCd));
            }
            if ((TimeTypCd == null)) {
                throw new global::System.ArgumentNullException("TimeTypCd");
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = ((string)(TimeTypCd));
            }
            this.Adapter.InsertCommand.Parameters[67].Value = ((int)(PBInvNum));
            this.Adapter.InsertCommand.Parameters[68].Value = ((int)(PMUID));
            if ((TaskSetID == null)) {
                throw new global::System.ArgumentNullException("TaskSetID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = ((string)(TaskSetID));
            }
            if ((ApprovedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[70].Value = ((System.DateTime)(ApprovedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((ClaimRef == null)) {
                throw new global::System.ArgumentNullException("ClaimRef");
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = ((string)(ClaimRef));
            }
            if ((QuickEntryCode == null)) {
                throw new global::System.ArgumentNullException("QuickEntryCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = ((string)(QuickEntryCode));
            }
            if ((TimeStatus == null)) {
                throw new global::System.ArgumentNullException("TimeStatus");
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = ((string)(TimeStatus));
            }
            if ((CreatedBy == null)) {
                throw new global::System.ArgumentNullException("CreatedBy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = ((string)(CreatedBy));
            }
            if ((CreateDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[75].Value = ((System.DateTime)(CreateDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[76].Value = ((int)(CreateTime));
            if ((ChangedBy == null)) {
                throw new global::System.ArgumentNullException("ChangedBy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = ((string)(ChangedBy));
            }
            if ((ChangeDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[78].Value = ((System.DateTime)(ChangeDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[79].Value = ((int)(ChangeTime));
            if ((ActiveTaskID == null)) {
                throw new global::System.ArgumentNullException("ActiveTaskID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[80].Value = ((string)(ActiveTaskID));
            }
            if ((LastTaskID == null)) {
                throw new global::System.ArgumentNullException("LastTaskID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[81].Value = ((string)(LastTaskID));
            }
            this.Adapter.InsertCommand.Parameters[82].Value = ((bool)(CreatedViaTEWeekView));
            if ((CurrentWFStageID == null)) {
                throw new global::System.ArgumentNullException("CurrentWFStageID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[83].Value = ((string)(CurrentWFStageID));
            }
            if ((WFGroupID == null)) {
                throw new global::System.ArgumentNullException("WFGroupID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[84].Value = ((string)(WFGroupID));
            }
            this.Adapter.InsertCommand.Parameters[85].Value = ((bool)(WFComplete));
            this.Adapter.InsertCommand.Parameters[86].Value = ((bool)(ApprovalRequired));
            if ((SubmittedBy == null)) {
                throw new global::System.ArgumentNullException("SubmittedBy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[87].Value = ((string)(SubmittedBy));
            }
            if ((PBRateFrom == null)) {
                throw new global::System.ArgumentNullException("PBRateFrom");
            }
            else {
                this.Adapter.InsertCommand.Parameters[88].Value = ((string)(PBRateFrom));
            }
            if ((PBCurrencyCode == null)) {
                throw new global::System.ArgumentNullException("PBCurrencyCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[89].Value = ((string)(PBCurrencyCode));
            }
            this.Adapter.InsertCommand.Parameters[90].Value = ((decimal)(PBHours));
            this.Adapter.InsertCommand.Parameters[91].Value = ((decimal)(PBChargeRate));
            this.Adapter.InsertCommand.Parameters[92].Value = ((decimal)(PBChargeAmt));
            this.Adapter.InsertCommand.Parameters[93].Value = ((decimal)(DocPBChargeRate));
            this.Adapter.InsertCommand.Parameters[94].Value = ((decimal)(Rpt1PBChargeRate));
            this.Adapter.InsertCommand.Parameters[95].Value = ((decimal)(Rpt2PBChargeRate));
            this.Adapter.InsertCommand.Parameters[96].Value = ((decimal)(Rpt3PBChargeRate));
            this.Adapter.InsertCommand.Parameters[97].Value = ((decimal)(DocPBChargeAmt));
            this.Adapter.InsertCommand.Parameters[98].Value = ((decimal)(Rpt1PBChargeAmt));
            this.Adapter.InsertCommand.Parameters[99].Value = ((decimal)(Rpt2PBChargeAmt));
            this.Adapter.InsertCommand.Parameters[100].Value = ((decimal)(Rpt3PBChargeAmt));
            this.Adapter.InsertCommand.Parameters[101].Value = ((int)(Shift));
            this.Adapter.InsertCommand.Parameters[102].Value = ((int)(ActID));
            this.Adapter.InsertCommand.Parameters[103].Value = ((int)(DtailID));
            this.Adapter.InsertCommand.Parameters[104].Value = ((bool)(ProjProcessed));
            if ((AsOfDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[105].Value = ((System.DateTime)(AsOfDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[106].Value = ((int)(AsOfSeq));
            if ((JDFInputFiles == null)) {
                throw new global::System.ArgumentNullException("JDFInputFiles");
            }
            else {
                this.Adapter.InsertCommand.Parameters[107].Value = ((string)(JDFInputFiles));
            }
            if ((JDFNumberOfPages == null)) {
                throw new global::System.ArgumentNullException("JDFNumberOfPages");
            }
            else {
                this.Adapter.InsertCommand.Parameters[108].Value = ((string)(JDFNumberOfPages));
            }
            if ((BatchWasSaved == null)) {
                throw new global::System.ArgumentNullException("BatchWasSaved");
            }
            else {
                this.Adapter.InsertCommand.Parameters[109].Value = ((string)(BatchWasSaved));
            }
            this.Adapter.InsertCommand.Parameters[110].Value = ((bool)(AssignToBatch));
            this.Adapter.InsertCommand.Parameters[111].Value = ((bool)(BatchComplete));
            this.Adapter.InsertCommand.Parameters[112].Value = ((bool)(BatchRequestMove));
            this.Adapter.InsertCommand.Parameters[113].Value = ((bool)(BatchPrint));
            this.Adapter.InsertCommand.Parameters[114].Value = ((decimal)(BatchLaborHrs));
            this.Adapter.InsertCommand.Parameters[115].Value = ((decimal)(BatchPctOfTotHrs));
            this.Adapter.InsertCommand.Parameters[116].Value = ((decimal)(BatchQty));
            this.Adapter.InsertCommand.Parameters[117].Value = ((decimal)(BatchTotalExpectedHrs));
            if ((JDFOpCompleted == null)) {
                throw new global::System.ArgumentNullException("JDFOpCompleted");
            }
            else {
                this.Adapter.InsertCommand.Parameters[118].Value = ((string)(JDFOpCompleted));
            }
            this.Adapter.InsertCommand.Parameters[119].Value = ((System.Guid)(SysRowID));
            this.Adapter.InsertCommand.Parameters[120].Value = ((bool)(Downtime));
            if ((RefJobNum == null)) {
                throw new global::System.ArgumentNullException("RefJobNum");
            }
            else {
                this.Adapter.InsertCommand.Parameters[121].Value = ((string)(RefJobNum));
            }
            this.Adapter.InsertCommand.Parameters[122].Value = ((int)(RefAssemblySeq));
            this.Adapter.InsertCommand.Parameters[123].Value = ((int)(RefOprSeq));
            this.Adapter.InsertCommand.Parameters[124].Value = ((bool)(Imported));
            if ((ImportDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[125].Value = ((System.DateTime)(ImportDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[126].Value = ((bool)(TimeAutoSubmit));
            this.Adapter.InsertCommand.Parameters[127].Value = ((bool)(BatchMode));
            this.Adapter.InsertCommand.Parameters[128].Value = ((decimal)(BillServiceRate));
            this.Adapter.InsertCommand.Parameters[129].Value = ((decimal)(HCMPayHours));
            this.Adapter.InsertCommand.Parameters[130].Value = ((bool)(EpicorFSA));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Company, 
                    string EmployeeNum, 
                    int LaborHedSeq, 
                    int LaborDtlSeq, 
                    string LaborType, 
                    string LaborTypePseudo, 
                    bool ReWork, 
                    string ReworkReasonCode, 
                    string JobNum, 
                    int AssemblySeq, 
                    int OprSeq, 
                    string JCDept, 
                    string ResourceGrpID, 
                    string OpCode, 
                    decimal LaborHrs, 
                    decimal BurdenHrs, 
                    decimal LaborQty, 
                    decimal ScrapQty, 
                    string ScrapReasonCode, 
                    int SetupPctComplete, 
                    bool Complete, 
                    string IndirectCode, 
                    string LaborNote, 
                    string ExpenseCode, 
                    bool LaborCollection, 
                    bool AppliedToSchedule, 
                    int ClockInMInute, 
                    int ClockOutMinute, 
                    global::System.Nullable<global::System.DateTime> ClockInDate, 
                    decimal ClockinTime, 
                    decimal ClockOutTime, 
                    bool ActiveTrans, 
                    decimal OverRidePayRate, 
                    decimal LaborRate, 
                    decimal BurdenRate, 
                    string DspClockInTime, 
                    string DspClockOutTime, 
                    string ResourceID, 
                    bool OpComplete, 
                    decimal EarnedHrs, 
                    bool AddedOper, 
                    global::System.Nullable<global::System.DateTime> PayrollDate, 
                    bool PostedToGL, 
                    int FiscalYear, 
                    int FiscalPeriod, 
                    int JournalNum, 
                    bool GLTrans, 
                    string JournalCode, 
                    bool InspectionPending, 
                    int CallNum, 
                    int CallLine, 
                    int ServNum, 
                    string ServCode, 
                    string ResReasonCode, 
                    bool WipPosted, 
                    decimal DiscrepQty, 
                    string DiscrpRsnCode, 
                    int ParentLaborDtlSeq, 
                    string LaborEntryMethod, 
                    string FiscalYearSuffix, 
                    string FiscalCalendarID, 
                    bool BFLaborReq, 
                    string ABTUID, 
                    string ProjectID, 
                    string PhaseID, 
                    string RoleCd, 
                    string TimeTypCd, 
                    int PBInvNum, 
                    int PMUID, 
                    string TaskSetID, 
                    global::System.Nullable<global::System.DateTime> ApprovedDate, 
                    string ClaimRef, 
                    string QuickEntryCode, 
                    string TimeStatus, 
                    string CreatedBy, 
                    global::System.Nullable<global::System.DateTime> CreateDate, 
                    int CreateTime, 
                    string ChangedBy, 
                    global::System.Nullable<global::System.DateTime> ChangeDate, 
                    int ChangeTime, 
                    string ActiveTaskID, 
                    string LastTaskID, 
                    bool CreatedViaTEWeekView, 
                    string CurrentWFStageID, 
                    string WFGroupID, 
                    bool WFComplete, 
                    bool ApprovalRequired, 
                    string SubmittedBy, 
                    string PBRateFrom, 
                    string PBCurrencyCode, 
                    decimal PBHours, 
                    decimal PBChargeRate, 
                    decimal PBChargeAmt, 
                    decimal DocPBChargeRate, 
                    decimal Rpt1PBChargeRate, 
                    decimal Rpt2PBChargeRate, 
                    decimal Rpt3PBChargeRate, 
                    decimal DocPBChargeAmt, 
                    decimal Rpt1PBChargeAmt, 
                    decimal Rpt2PBChargeAmt, 
                    decimal Rpt3PBChargeAmt, 
                    int Shift, 
                    int ActID, 
                    int DtailID, 
                    bool ProjProcessed, 
                    global::System.Nullable<global::System.DateTime> AsOfDate, 
                    int AsOfSeq, 
                    string JDFInputFiles, 
                    string JDFNumberOfPages, 
                    string BatchWasSaved, 
                    bool AssignToBatch, 
                    bool BatchComplete, 
                    bool BatchRequestMove, 
                    bool BatchPrint, 
                    decimal BatchLaborHrs, 
                    decimal BatchPctOfTotHrs, 
                    decimal BatchQty, 
                    decimal BatchTotalExpectedHrs, 
                    string JDFOpCompleted, 
                    System.Guid SysRowID, 
                    bool Downtime, 
                    string RefJobNum, 
                    int RefAssemblySeq, 
                    int RefOprSeq, 
                    bool Imported, 
                    global::System.Nullable<global::System.DateTime> ImportDate, 
                    bool TimeAutoSubmit, 
                    bool BatchMode, 
                    decimal BillServiceRate, 
                    decimal HCMPayHours, 
                    bool EpicorFSA, 
                    string Original_Company, 
                    int Original_LaborHedSeq, 
                    int Original_LaborDtlSeq) {
            if ((Company == null)) {
                throw new global::System.ArgumentNullException("Company");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Company));
            }
            if ((EmployeeNum == null)) {
                throw new global::System.ArgumentNullException("EmployeeNum");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(EmployeeNum));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(LaborHedSeq));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(LaborDtlSeq));
            if ((LaborType == null)) {
                throw new global::System.ArgumentNullException("LaborType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(LaborType));
            }
            if ((LaborTypePseudo == null)) {
                throw new global::System.ArgumentNullException("LaborTypePseudo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(LaborTypePseudo));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(ReWork));
            if ((ReworkReasonCode == null)) {
                throw new global::System.ArgumentNullException("ReworkReasonCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(ReworkReasonCode));
            }
            if ((JobNum == null)) {
                throw new global::System.ArgumentNullException("JobNum");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(JobNum));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(AssemblySeq));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(OprSeq));
            if ((JCDept == null)) {
                throw new global::System.ArgumentNullException("JCDept");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(JCDept));
            }
            if ((ResourceGrpID == null)) {
                throw new global::System.ArgumentNullException("ResourceGrpID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(ResourceGrpID));
            }
            if ((OpCode == null)) {
                throw new global::System.ArgumentNullException("OpCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(OpCode));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(LaborHrs));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(BurdenHrs));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(LaborQty));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(ScrapQty));
            if ((ScrapReasonCode == null)) {
                throw new global::System.ArgumentNullException("ScrapReasonCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(ScrapReasonCode));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(SetupPctComplete));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(Complete));
            if ((IndirectCode == null)) {
                throw new global::System.ArgumentNullException("IndirectCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(IndirectCode));
            }
            if ((LaborNote == null)) {
                throw new global::System.ArgumentNullException("LaborNote");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(LaborNote));
            }
            if ((ExpenseCode == null)) {
                throw new global::System.ArgumentNullException("ExpenseCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(ExpenseCode));
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((bool)(LaborCollection));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((bool)(AppliedToSchedule));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(ClockInMInute));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(ClockOutMinute));
            if ((ClockInDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((System.DateTime)(ClockInDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(ClockinTime));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(ClockOutTime));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((bool)(ActiveTrans));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(OverRidePayRate));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(LaborRate));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(BurdenRate));
            if ((DspClockInTime == null)) {
                throw new global::System.ArgumentNullException("DspClockInTime");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(DspClockInTime));
            }
            if ((DspClockOutTime == null)) {
                throw new global::System.ArgumentNullException("DspClockOutTime");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(DspClockOutTime));
            }
            if ((ResourceID == null)) {
                throw new global::System.ArgumentNullException("ResourceID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(ResourceID));
            }
            this.Adapter.UpdateCommand.Parameters[38].Value = ((bool)(OpComplete));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(EarnedHrs));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((bool)(AddedOper));
            if ((PayrollDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((System.DateTime)(PayrollDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[42].Value = ((bool)(PostedToGL));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(FiscalYear));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(FiscalPeriod));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(JournalNum));
            this.Adapter.UpdateCommand.Parameters[46].Value = ((bool)(GLTrans));
            if ((JournalCode == null)) {
                throw new global::System.ArgumentNullException("JournalCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(JournalCode));
            }
            this.Adapter.UpdateCommand.Parameters[48].Value = ((bool)(InspectionPending));
            this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(CallNum));
            this.Adapter.UpdateCommand.Parameters[50].Value = ((int)(CallLine));
            this.Adapter.UpdateCommand.Parameters[51].Value = ((int)(ServNum));
            if ((ServCode == null)) {
                throw new global::System.ArgumentNullException("ServCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(ServCode));
            }
            if ((ResReasonCode == null)) {
                throw new global::System.ArgumentNullException("ResReasonCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(ResReasonCode));
            }
            this.Adapter.UpdateCommand.Parameters[54].Value = ((bool)(WipPosted));
            this.Adapter.UpdateCommand.Parameters[55].Value = ((decimal)(DiscrepQty));
            if ((DiscrpRsnCode == null)) {
                throw new global::System.ArgumentNullException("DiscrpRsnCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(DiscrpRsnCode));
            }
            this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(ParentLaborDtlSeq));
            if ((LaborEntryMethod == null)) {
                throw new global::System.ArgumentNullException("LaborEntryMethod");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(LaborEntryMethod));
            }
            if ((FiscalYearSuffix == null)) {
                throw new global::System.ArgumentNullException("FiscalYearSuffix");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(FiscalYearSuffix));
            }
            if ((FiscalCalendarID == null)) {
                throw new global::System.ArgumentNullException("FiscalCalendarID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(FiscalCalendarID));
            }
            this.Adapter.UpdateCommand.Parameters[61].Value = ((bool)(BFLaborReq));
            if ((ABTUID == null)) {
                throw new global::System.ArgumentNullException("ABTUID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(ABTUID));
            }
            if ((ProjectID == null)) {
                throw new global::System.ArgumentNullException("ProjectID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(ProjectID));
            }
            if ((PhaseID == null)) {
                throw new global::System.ArgumentNullException("PhaseID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(PhaseID));
            }
            if ((RoleCd == null)) {
                throw new global::System.ArgumentNullException("RoleCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(RoleCd));
            }
            if ((TimeTypCd == null)) {
                throw new global::System.ArgumentNullException("TimeTypCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(TimeTypCd));
            }
            this.Adapter.UpdateCommand.Parameters[67].Value = ((int)(PBInvNum));
            this.Adapter.UpdateCommand.Parameters[68].Value = ((int)(PMUID));
            if ((TaskSetID == null)) {
                throw new global::System.ArgumentNullException("TaskSetID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(TaskSetID));
            }
            if ((ApprovedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((System.DateTime)(ApprovedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((ClaimRef == null)) {
                throw new global::System.ArgumentNullException("ClaimRef");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(ClaimRef));
            }
            if ((QuickEntryCode == null)) {
                throw new global::System.ArgumentNullException("QuickEntryCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(QuickEntryCode));
            }
            if ((TimeStatus == null)) {
                throw new global::System.ArgumentNullException("TimeStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(TimeStatus));
            }
            if ((CreatedBy == null)) {
                throw new global::System.ArgumentNullException("CreatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(CreatedBy));
            }
            if ((CreateDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((System.DateTime)(CreateDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[76].Value = ((int)(CreateTime));
            if ((ChangedBy == null)) {
                throw new global::System.ArgumentNullException("ChangedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(ChangedBy));
            }
            if ((ChangeDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((System.DateTime)(ChangeDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[79].Value = ((int)(ChangeTime));
            if ((ActiveTaskID == null)) {
                throw new global::System.ArgumentNullException("ActiveTaskID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((string)(ActiveTaskID));
            }
            if ((LastTaskID == null)) {
                throw new global::System.ArgumentNullException("LastTaskID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(LastTaskID));
            }
            this.Adapter.UpdateCommand.Parameters[82].Value = ((bool)(CreatedViaTEWeekView));
            if ((CurrentWFStageID == null)) {
                throw new global::System.ArgumentNullException("CurrentWFStageID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(CurrentWFStageID));
            }
            if ((WFGroupID == null)) {
                throw new global::System.ArgumentNullException("WFGroupID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((string)(WFGroupID));
            }
            this.Adapter.UpdateCommand.Parameters[85].Value = ((bool)(WFComplete));
            this.Adapter.UpdateCommand.Parameters[86].Value = ((bool)(ApprovalRequired));
            if ((SubmittedBy == null)) {
                throw new global::System.ArgumentNullException("SubmittedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((string)(SubmittedBy));
            }
            if ((PBRateFrom == null)) {
                throw new global::System.ArgumentNullException("PBRateFrom");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((string)(PBRateFrom));
            }
            if ((PBCurrencyCode == null)) {
                throw new global::System.ArgumentNullException("PBCurrencyCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((string)(PBCurrencyCode));
            }
            this.Adapter.UpdateCommand.Parameters[90].Value = ((decimal)(PBHours));
            this.Adapter.UpdateCommand.Parameters[91].Value = ((decimal)(PBChargeRate));
            this.Adapter.UpdateCommand.Parameters[92].Value = ((decimal)(PBChargeAmt));
            this.Adapter.UpdateCommand.Parameters[93].Value = ((decimal)(DocPBChargeRate));
            this.Adapter.UpdateCommand.Parameters[94].Value = ((decimal)(Rpt1PBChargeRate));
            this.Adapter.UpdateCommand.Parameters[95].Value = ((decimal)(Rpt2PBChargeRate));
            this.Adapter.UpdateCommand.Parameters[96].Value = ((decimal)(Rpt3PBChargeRate));
            this.Adapter.UpdateCommand.Parameters[97].Value = ((decimal)(DocPBChargeAmt));
            this.Adapter.UpdateCommand.Parameters[98].Value = ((decimal)(Rpt1PBChargeAmt));
            this.Adapter.UpdateCommand.Parameters[99].Value = ((decimal)(Rpt2PBChargeAmt));
            this.Adapter.UpdateCommand.Parameters[100].Value = ((decimal)(Rpt3PBChargeAmt));
            this.Adapter.UpdateCommand.Parameters[101].Value = ((int)(Shift));
            this.Adapter.UpdateCommand.Parameters[102].Value = ((int)(ActID));
            this.Adapter.UpdateCommand.Parameters[103].Value = ((int)(DtailID));
            this.Adapter.UpdateCommand.Parameters[104].Value = ((bool)(ProjProcessed));
            if ((AsOfDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((System.DateTime)(AsOfDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[106].Value = ((int)(AsOfSeq));
            if ((JDFInputFiles == null)) {
                throw new global::System.ArgumentNullException("JDFInputFiles");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((string)(JDFInputFiles));
            }
            if ((JDFNumberOfPages == null)) {
                throw new global::System.ArgumentNullException("JDFNumberOfPages");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((string)(JDFNumberOfPages));
            }
            if ((BatchWasSaved == null)) {
                throw new global::System.ArgumentNullException("BatchWasSaved");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((string)(BatchWasSaved));
            }
            this.Adapter.UpdateCommand.Parameters[110].Value = ((bool)(AssignToBatch));
            this.Adapter.UpdateCommand.Parameters[111].Value = ((bool)(BatchComplete));
            this.Adapter.UpdateCommand.Parameters[112].Value = ((bool)(BatchRequestMove));
            this.Adapter.UpdateCommand.Parameters[113].Value = ((bool)(BatchPrint));
            this.Adapter.UpdateCommand.Parameters[114].Value = ((decimal)(BatchLaborHrs));
            this.Adapter.UpdateCommand.Parameters[115].Value = ((decimal)(BatchPctOfTotHrs));
            this.Adapter.UpdateCommand.Parameters[116].Value = ((decimal)(BatchQty));
            this.Adapter.UpdateCommand.Parameters[117].Value = ((decimal)(BatchTotalExpectedHrs));
            if ((JDFOpCompleted == null)) {
                throw new global::System.ArgumentNullException("JDFOpCompleted");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((string)(JDFOpCompleted));
            }
            this.Adapter.UpdateCommand.Parameters[119].Value = ((System.Guid)(SysRowID));
            this.Adapter.UpdateCommand.Parameters[120].Value = ((bool)(Downtime));
            if ((RefJobNum == null)) {
                throw new global::System.ArgumentNullException("RefJobNum");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((string)(RefJobNum));
            }
            this.Adapter.UpdateCommand.Parameters[122].Value = ((int)(RefAssemblySeq));
            this.Adapter.UpdateCommand.Parameters[123].Value = ((int)(RefOprSeq));
            this.Adapter.UpdateCommand.Parameters[124].Value = ((bool)(Imported));
            if ((ImportDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((System.DateTime)(ImportDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[126].Value = ((bool)(TimeAutoSubmit));
            this.Adapter.UpdateCommand.Parameters[127].Value = ((bool)(BatchMode));
            this.Adapter.UpdateCommand.Parameters[128].Value = ((decimal)(BillServiceRate));
            this.Adapter.UpdateCommand.Parameters[129].Value = ((decimal)(HCMPayHours));
            this.Adapter.UpdateCommand.Parameters[130].Value = ((bool)(EpicorFSA));
            if ((Original_Company == null)) {
                throw new global::System.ArgumentNullException("Original_Company");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((string)(Original_Company));
            }
            this.Adapter.UpdateCommand.Parameters[132].Value = ((int)(Original_LaborHedSeq));
            this.Adapter.UpdateCommand.Parameters[133].Value = ((int)(Original_LaborDtlSeq));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string EmployeeNum, 
                    string LaborType, 
                    string LaborTypePseudo, 
                    bool ReWork, 
                    string ReworkReasonCode, 
                    string JobNum, 
                    int AssemblySeq, 
                    int OprSeq, 
                    string JCDept, 
                    string ResourceGrpID, 
                    string OpCode, 
                    decimal LaborHrs, 
                    decimal BurdenHrs, 
                    decimal LaborQty, 
                    decimal ScrapQty, 
                    string ScrapReasonCode, 
                    int SetupPctComplete, 
                    bool Complete, 
                    string IndirectCode, 
                    string LaborNote, 
                    string ExpenseCode, 
                    bool LaborCollection, 
                    bool AppliedToSchedule, 
                    int ClockInMInute, 
                    int ClockOutMinute, 
                    global::System.Nullable<global::System.DateTime> ClockInDate, 
                    decimal ClockinTime, 
                    decimal ClockOutTime, 
                    bool ActiveTrans, 
                    decimal OverRidePayRate, 
                    decimal LaborRate, 
                    decimal BurdenRate, 
                    string DspClockInTime, 
                    string DspClockOutTime, 
                    string ResourceID, 
                    bool OpComplete, 
                    decimal EarnedHrs, 
                    bool AddedOper, 
                    global::System.Nullable<global::System.DateTime> PayrollDate, 
                    bool PostedToGL, 
                    int FiscalYear, 
                    int FiscalPeriod, 
                    int JournalNum, 
                    bool GLTrans, 
                    string JournalCode, 
                    bool InspectionPending, 
                    int CallNum, 
                    int CallLine, 
                    int ServNum, 
                    string ServCode, 
                    string ResReasonCode, 
                    bool WipPosted, 
                    decimal DiscrepQty, 
                    string DiscrpRsnCode, 
                    int ParentLaborDtlSeq, 
                    string LaborEntryMethod, 
                    string FiscalYearSuffix, 
                    string FiscalCalendarID, 
                    bool BFLaborReq, 
                    string ABTUID, 
                    string ProjectID, 
                    string PhaseID, 
                    string RoleCd, 
                    string TimeTypCd, 
                    int PBInvNum, 
                    int PMUID, 
                    string TaskSetID, 
                    global::System.Nullable<global::System.DateTime> ApprovedDate, 
                    string ClaimRef, 
                    string QuickEntryCode, 
                    string TimeStatus, 
                    string CreatedBy, 
                    global::System.Nullable<global::System.DateTime> CreateDate, 
                    int CreateTime, 
                    string ChangedBy, 
                    global::System.Nullable<global::System.DateTime> ChangeDate, 
                    int ChangeTime, 
                    string ActiveTaskID, 
                    string LastTaskID, 
                    bool CreatedViaTEWeekView, 
                    string CurrentWFStageID, 
                    string WFGroupID, 
                    bool WFComplete, 
                    bool ApprovalRequired, 
                    string SubmittedBy, 
                    string PBRateFrom, 
                    string PBCurrencyCode, 
                    decimal PBHours, 
                    decimal PBChargeRate, 
                    decimal PBChargeAmt, 
                    decimal DocPBChargeRate, 
                    decimal Rpt1PBChargeRate, 
                    decimal Rpt2PBChargeRate, 
                    decimal Rpt3PBChargeRate, 
                    decimal DocPBChargeAmt, 
                    decimal Rpt1PBChargeAmt, 
                    decimal Rpt2PBChargeAmt, 
                    decimal Rpt3PBChargeAmt, 
                    int Shift, 
                    int ActID, 
                    int DtailID, 
                    bool ProjProcessed, 
                    global::System.Nullable<global::System.DateTime> AsOfDate, 
                    int AsOfSeq, 
                    string JDFInputFiles, 
                    string JDFNumberOfPages, 
                    string BatchWasSaved, 
                    bool AssignToBatch, 
                    bool BatchComplete, 
                    bool BatchRequestMove, 
                    bool BatchPrint, 
                    decimal BatchLaborHrs, 
                    decimal BatchPctOfTotHrs, 
                    decimal BatchQty, 
                    decimal BatchTotalExpectedHrs, 
                    string JDFOpCompleted, 
                    System.Guid SysRowID, 
                    bool Downtime, 
                    string RefJobNum, 
                    int RefAssemblySeq, 
                    int RefOprSeq, 
                    bool Imported, 
                    global::System.Nullable<global::System.DateTime> ImportDate, 
                    bool TimeAutoSubmit, 
                    bool BatchMode, 
                    decimal BillServiceRate, 
                    decimal HCMPayHours, 
                    bool EpicorFSA, 
                    string Original_Company, 
                    int Original_LaborHedSeq, 
                    int Original_LaborDtlSeq) {
            return this.Update(Original_Company, EmployeeNum, Original_LaborHedSeq, Original_LaborDtlSeq, LaborType, LaborTypePseudo, ReWork, ReworkReasonCode, JobNum, AssemblySeq, OprSeq, JCDept, ResourceGrpID, OpCode, LaborHrs, BurdenHrs, LaborQty, ScrapQty, ScrapReasonCode, SetupPctComplete, Complete, IndirectCode, LaborNote, ExpenseCode, LaborCollection, AppliedToSchedule, ClockInMInute, ClockOutMinute, ClockInDate, ClockinTime, ClockOutTime, ActiveTrans, OverRidePayRate, LaborRate, BurdenRate, DspClockInTime, DspClockOutTime, ResourceID, OpComplete, EarnedHrs, AddedOper, PayrollDate, PostedToGL, FiscalYear, FiscalPeriod, JournalNum, GLTrans, JournalCode, InspectionPending, CallNum, CallLine, ServNum, ServCode, ResReasonCode, WipPosted, DiscrepQty, DiscrpRsnCode, ParentLaborDtlSeq, LaborEntryMethod, FiscalYearSuffix, FiscalCalendarID, BFLaborReq, ABTUID, ProjectID, PhaseID, RoleCd, TimeTypCd, PBInvNum, PMUID, TaskSetID, ApprovedDate, ClaimRef, QuickEntryCode, TimeStatus, CreatedBy, CreateDate, CreateTime, ChangedBy, ChangeDate, ChangeTime, ActiveTaskID, LastTaskID, CreatedViaTEWeekView, CurrentWFStageID, WFGroupID, WFComplete, ApprovalRequired, SubmittedBy, PBRateFrom, PBCurrencyCode, PBHours, PBChargeRate, PBChargeAmt, DocPBChargeRate, Rpt1PBChargeRate, Rpt2PBChargeRate, Rpt3PBChargeRate, DocPBChargeAmt, Rpt1PBChargeAmt, Rpt2PBChargeAmt, Rpt3PBChargeAmt, Shift, ActID, DtailID, ProjProcessed, AsOfDate, AsOfSeq, JDFInputFiles, JDFNumberOfPages, BatchWasSaved, AssignToBatch, BatchComplete, BatchRequestMove, BatchPrint, BatchLaborHrs, BatchPctOfTotHrs, BatchQty, BatchTotalExpectedHrs, JDFOpCompleted, SysRowID, Downtime, RefJobNum, RefAssemblySeq, RefOprSeq, Imported, ImportDate, TimeAutoSubmit, BatchMode, BillServiceRate, HCMPayHours, EpicorFSA, Original_Company, Original_LaborHedSeq, Original_LaborDtlSeq);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private LaborHedTableAdapter _laborHedTableAdapter;
        
        private LaborDtlTableAdapter _laborDtlTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public LaborHedTableAdapter LaborHedTableAdapter {
            get {
                return this._laborHedTableAdapter;
            }
            set {
                this._laborHedTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public LaborDtlTableAdapter LaborDtlTableAdapter {
            get {
                return this._laborDtlTableAdapter;
            }
            set {
                this._laborDtlTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._laborHedTableAdapter != null) 
                            && (this._laborHedTableAdapter.Connection != null))) {
                    return this._laborHedTableAdapter.Connection;
                }
                if (((this._laborDtlTableAdapter != null) 
                            && (this._laborDtlTableAdapter.Connection != null))) {
                    return this._laborDtlTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._laborHedTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._laborDtlTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(ds dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._laborHedTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.LaborHed.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._laborHedTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._laborDtlTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.LaborDtl.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._laborDtlTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(ds dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._laborHedTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.LaborHed.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._laborHedTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._laborDtlTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.LaborDtl.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._laborDtlTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(ds dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._laborDtlTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.LaborDtl.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._laborDtlTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._laborHedTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.LaborHed.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._laborHedTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(ds dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._laborHedTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._laborHedTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._laborDtlTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._laborDtlTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 不包含任何连接信息。请将每个 TableAdapterManager TableAdapter 属性设置为有效的 Tabl" +
                        "eAdapter 实例。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("事务无法开始。当前的数据连接不支持事务或当前状态不允许事务开始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._laborHedTableAdapter != null)) {
                    revertConnections.Add(this._laborHedTableAdapter, this._laborHedTableAdapter.Connection);
                    this._laborHedTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._laborHedTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._laborHedTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._laborHedTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._laborHedTableAdapter.Adapter);
                    }
                }
                if ((this._laborDtlTableAdapter != null)) {
                    revertConnections.Add(this._laborDtlTableAdapter, this._laborDtlTableAdapter.Connection);
                    this._laborDtlTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._laborDtlTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._laborDtlTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._laborDtlTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._laborDtlTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._laborHedTableAdapter != null)) {
                    this._laborHedTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._laborHedTableAdapter]));
                    this._laborHedTableAdapter.Transaction = null;
                }
                if ((this._laborDtlTableAdapter != null)) {
                    this._laborDtlTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._laborDtlTableAdapter]));
                    this._laborDtlTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591